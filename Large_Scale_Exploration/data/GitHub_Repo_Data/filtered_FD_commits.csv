commit_Link,commit_Title,commit_Description,issue_Id,issue_link,matched_keywords
https://github.com/celzero/rethink-app/commit/d862261b3542818607298154180ea9df6d646041,new overall data usage stat on stats screen main ui,,,,data usage
https://github.com/celzero/rethink-app/commit/4ad8f19fc6cfb3ebd3837ab518d2845c1fa91e3e,show data usage stats in Statistics screen,,,,data usage
https://github.com/celzero/rethink-app/commit/7e831268ffaea05ae1ca10a4e4b553b020cd3633,schedule data usage job in play store version,,,,data usage
https://github.com/celzero/rethink-app/commit/f1a1a6a6e8b22971d2d798b98a6cacd7db40440a,ui changes to show data usage per conn & by app,,,,data usage
https://github.com/celzero/rethink-app/commit/8ed466f6406fb38b3afddead92ee2167b55fb101,App info screen revamp,"Issue: slowness or ANR while loading the appwise
network logs in app info screen.

Introduced new pagedadapter to provide the
source to recycler view.

App screen revamp to resolve the slowness
while loading the screen.",,, ANR 
https://github.com/celzero/rethink-app/commit/dd05861fb080b25a222bef9a55dd68b7844dfac3,UI related changes,"Issue fix: ANR when user clicks on add button when there is more than 1000+ custom
IPs added to the list.

Other minor UI changes.",,, ANR 
https://github.com/celzero/rethink-app/commit/3dceebc51b9d8271b73194f43d1b996c54afd239,"Dependencies, paging v2 to 3 migration, issue fix","Migrate from paging version 2 to 3.

dependencies are updated to latest version.

Retry mechanism for OkHttp connection
request with different custom dns.
Earlier only quad9 is used as custom DNS,
now on failure okhttp request will use
cloudflare, google to as custom dns.

Fix: Freeform multiwindow crash#391Fix: Blocklist update
Fix: Universal custom allow/block IP
feature screen caused ANR/slowness in
loading when there is more number of entries.

Forward DNS request to Orbot if One-touch
Orbot is enabled.

Increase Glide cache size limit to 350 mb.

Removed some of unused strings.xml.",,,cache size
https://github.com/celzero/rethink-app/commit/e1ba3005f69987663adf7d38d902ad8a4a37621f,Quantile estimates way off,"Since network latencies fluctuate a lot, especially on mobile networks,
the latency calculation jumps around and points to values that are way
off than the actual median, and when that happens, the estimator takes
longer than desirable to converge on to the actual median.

Increase the sample size from 5 to 30, which does increase computation
cost but in turn handles the network latency distribution quite well from what
simulations tell us.

Former-commit-id:9a04087",,,"latency
network latency"
https://github.com/celzero/rethink-app/commit/81b190451e58cfbdf93403a98db9ecc5cfe03f6a,Remove Quantile estimation from Shared preference,"Quantile estimation is performed for every DNS requests.
Removed shared preference write for every DNS request

PersistentState.setMedianLatency()


Former-commit-id:ed0074a",,,latency
https://github.com/celzero/rethink-app/commit/d40bb281156e4a63468f282f40c5b0526158d126,"Cleanup of downloaded files, Quantile Measurement fix","#182- Clean up the folder which had the old download files.
This was introduced in v053, before that the files downloaded as
part of blocklists are stored in external files dir by the
DownloadManager and moved to canonicalPath.
Now in v053 we are moving the files from external dir to canonical
path. So deleting the old files in the external directory. Introduced
two methods in Utilities.#180- Fixed the quantile reset logic. Now the latency calculation
reset will happen when there is a change in the DNS configuration
and for every 1000 requests for now.#175- Now check for update will see the source of the app
download and the prompt will be shown to the user based on that.

Issue fix - Fix for DNS changing from CloudFlare security to Default DNS.


Former-commit-id:3608c42",,,latency
https://github.com/celzero/rethink-app/commit/bfe815b2de107d65a3ea35c9816223cc9d24fe84,"Exclude app lockdown fix, Removed free.bravedns","#178In case of lockdown mode, the excluded apps wont able to
connected. so not including the apps in the excluded list if the
lockdown mode is enabled.
From GoVPNAdapter, the default url ""free.bravedns.com"" is removed.
Latency time estimation for the dns queries are modified. Now
the latency is assigned based on the value sent from tun2socks.


Former-commit-id:a592bc1",,,latency
https://github.com/celzero/rethink-app/commit/9ebbcbf8642eca78225a37d90edb4ddfbac08807,"HomeScreen UX change, P2 quantile and other bug fixes","#148- Introduces Shimmer animation for the Start button in the
Home Screen. Also modified the UX for the DNS and Firewall
button. Now the shimmer animation will be there for both the
start button and RethinkDNS in the Home screen.
RethinkDNS modes selection is removed from the Home screen.
Introduced new bottom sheet in the home screen to configure the
modes.#157- DNSCrypt anonymous relays names are modified.#133,#114- Now the apps which are not part of app range UID's
the apps which don't have packages(eg., GPS) are now added into
firewall list.#156- Latency estimate logic has been modified with P2 quantile
estimator logic with constant time solution.#153- The URL for configure rethinkdns plus now contains one more
parameter - timestamp(blocklist downloaded time).#154- App and blocklist auto update check frequency is modified
from 24 hours. The check will be happening on every Friday and
Saturday.#158- Bug fix on the UX of bottomsheet in the network logs.#167- Bug fix, by default app from excluded apps are removed. Now
the apps which are part of excluded list are not refreshed and
reassigning of values are removed from the code.

[Recommended] string in the whitelist is removed.


Former-commit-id:d2e0ef5",,,latency
https://github.com/celzero/rethink-app/commit/192712170cb6b37ae1c5978b6c1beac94330bf95,"Connection Tracking, Firewall scree refractor and other bug fixes","Connection Tracking:
* Introduced new screen to track all the app connections.
* isBlock method invocation from tunnel2socks will have the details of the connections. Those connections are added to the connection tracking screen.
* Conn Tracking Screen will have the details of the app, timestamp, IP, port, type of connection, and flag.
* Pending - -DNS UDP connection to an IP address.#3Firewall Screen:
* Removed the category and app list from firewall screen
* Introduced expandable list view which will show the app category and list of apps in the category.
* Livedata mapping with the database. (AppInfoDAO and CategoryInfoDAO).
* Prompt dialog box when an app with same UID is blocked/unblocked. Dialog box will contain list of apps blocked/unblocked along with the selected app.
* Included System apps also in firewall screen#4#14About Page
* Introduced new screen in HomeScreenActivity as a fragment.
* Screen consists of Links, Contact and telegram group link.

Bug Fixes:
* Query Tracker - Median latency value was earlier added in a sorted list which is now modified to arraylist and the median is calculated in the arraylist.
* Webview - Destroying the webview activity when the user .
* Live data - Home screen tile values are updated by LiveData instead of Handlers.#8* Firewall Implementation for 8+ - UID check is made against the blocked list and return boolean value whether to block/allow.#31#30* DNS change delay - Delay of 1 sec has been introduced when the DNS URL's are changed. This is to avoid rapid change of URL's#35* Brave Mode delay - Changing the modes in home screen now has a delay of 1 sec.
* Screen lock -#29* UI - Various UI corrections and modification in strings.xml file.


Former-commit-id:9734485",,,latency
https://github.com/wikimedia/apps-android-wikipedia/commit/b184b150d7ac6b953b999b84ddfc656a83afb17b,Fix possible memory leak in feed.,"I've observed a memory leak (on API 17) apparently stemming from the new
functionality to fill in the bookmark icon when the featured article is
detected to be part of a reading list.

This seems to be caused by us passing an anonymous instance of a
CallbackTask.Callback object from FeaturedArticleView, which contains
references to $this, which contains a reference to the activity context.

This patch solves the leak by modifying the CallbackTask to no longer hold
on to a reference of Callback, and instead null it out immediately after
it's called.

Change-Id: I768e24dab7f39652ec741a5d6f9821db7de4f2bd",,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/e952333d54f10e7919850e03844409d32874c1fc,Fix: try to avoid out of memory errors when detecting faces,"If users are bumping against the memory limit, they will probably
experience other issues but it might be worth guarding against frequent
and non-critical OutOfMemoryErrors occurring during face detection

Change-Id: I33c46374243527b6464ea5b56b4d6625d2eaf85c",,,out of memory
https://github.com/wikimedia/apps-android-wikipedia/commit/85b7878f2ba48cc367cd7c62c50f64d7b59ac2f5,"Merge ""Fix possible memory leak(s) in feed.""",,,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/9fb372594c8da7d7bb27da6f520e9166211c362a,Fix possible memory leak(s) in feed.,"Observed in API 17, certain Clients that provide feed content seem
to retain a reference to a Context, which in this case is MainActivity.

This patch provides the FeedCoordinator with an Application context
instead of an Activity context, so that it won't matter if the coordinator
(or any Clients to which it passes the Context) holds on to the Context
longer than necessary.

Change-Id: Ia2603d0ccf57889d84a81d1b90f71cc88f78884d",,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/958be7b1e3e93c687a3ce5cfbeeb1d3f09d53e25,"Merge ""Fix possible memory leak in BottomSheetPresenter.""",,,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/ebee3d62cbc14594c492ca949cc99a7358f7df16,Fix possible memory leak in BottomSheetPresenter.,"I've observed a memory leak in API 23, which seems to be caused by our
BottomSheetPresenter holding on to a reference of FragmentManager.

This patch updates the Presenter to always accept FragmentManager as a
parameter, and also lightly refactors the way that we launch the
AddToReadingListDialog.

Change-Id: I930ef47b5ae39f32cdd7659e00ac09780f1ad88d",,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/133e6fd22ad75d9971a77af197592348b8756918,Integrate leakcanary into Dev build.,"This integrates leakcanary[0] into our builds, in the following way:
- I added a developer preference that will enable LeakCanary when running a
  Dev-flavor build. (LeakCanary should not always be enabled, since it
  can cause nuisance leak reports or false-positives. It should be enabled
  when performing an ""audit"" for leaks.) Make sure to restart the app when
  turning on/off the developer preference.
- For non-Dev builds, the code will automatically use a no-op reference
  watcher. (The preference for watching memory leaks will have no effect.)

[0]https://github.com/square/leakcanaryChange-Id: I827028322054d767a222ee51265890f56181afab",,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/d4e4d49a7da531d2e1496e8531d556c563d7fda5,"Merge ""Fix memory leak related to HockeySDK""",,,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/5e761fd964966f8916054dfa96e13f9263920693,Fix memory leak related to HockeySDK,"The current HockeySDK has a known issue that can leak an Activity, if the
MetricsManager is initialized with the Activity's context. For some
reason, MetricsManager asks for both an Application context and an
Activity context, when in fact it seems to function identically when
initialized with just the Application context.bitstadium/HockeySDK-Android#166Bug:T139945Change-Id: I059f1af67d5c5a6c1d2485eb5dd2d4f37cc42d1a",,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/04ffd3e718e3854b808234ce4d5f68a330103dd2,"Merge ""Fix memory leaks (for real!), part 1.""",,,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/7adea3809b62940b388fb9ef5a7edc6fbf7b26eb,"Fix memory leaks (for real!), part 1.","My ongoing search has finally yielded some tangible nuggets.
Exhibit A: Adding a TextWatcher to a TextView, but never removing it! (The
TextWatcher holds a reference to the fragment, thereby leaking it)

Also, now explicitly removing the onItemClick and onItemLongClick
listeners from the ListView, since this seems to lead to a leak in
API <20.

Change-Id: I497ebd37f3059b420622416a66ee5b87a15a2d0c",,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/26c544b57f0606fb39c8cd1a9e79b4d413aaf53f,Don't use javascript bridge for copying to clipboard.,"When passing the text selection from the WebView to the Java layer, we
limit the number of characters on the WebView side, which is not a bad
thing, because a large enough selection can lead to an OOM error.

However, for the purpose of copying the selection to the clipboard, it can
be a hindrance to limit the number of characters, and is confusing to the
user. This patch copies the selected text by simulating a ""Ctrl-C""
keyboard event, and dispatches it to the WebView, which causes it to copy
the selection to the clipboard natively.

Additionally, this allows the copied text to preserve any *formatting*
and/or links, instead of simply copying plain text.

Change-Id: I935cf1d9dc8ac78650b76c6e8cfb758114dea4ac",,, oom 
https://github.com/wikimedia/apps-android-wikipedia/commit/2a261dc2c2664707f63ad726d505d8a27b928c7c,Fix memory issues when switching between different Fragments.,"...In which I slightly modify (simplify?) the way we place and exchange our various
fragments inside the container view in our Activity.

This seems to stabilize memory usage when changing back and forth between PageFragment
and other fragments, which is the leading cause of OOM errors at the moment.

This shouldn't change any UX behavior (e.g. back button logic, etc).

Bug:T121759Change-Id: I745a31f23030b60575cd1b071eabc49c092a1b30",,, oom 
https://github.com/wikimedia/apps-android-wikipedia/commit/2aedb3bd21177a238b2f27dca05c2480034d4f82,Upgrade to Mapbox GL SDK.,"The good news: This brings the app up to date with the latest SDK from
Mapbox.

The bad news: This brings our APK size from 4.1MB to 14.4MB (!)
A sign of the times :(

This patch includes somewhat of a redesign, or more accurately a bit of a
stripdown of the interface, compared with the previous design. This will
now be a simple full-screen map with markers. Clicking on a marker brings
up a link preview for the given article. Nice and simple.
This means that the ""list"" interface with accelerometer-based arrows has
been removed, pending some new designs for a location-aware link preview.

Also updated the marker image that pinpoints to articles on the map.

Bug:T117803Change-Id: I3dc224b02cbbb894ee263525e081fcfe38f9e1d3",,,apk size
https://github.com/wikimedia/apps-android-wikipedia/commit/4a526486dd3a5738508bf45d7b1cdd36dfb92d13,Fix infinite loop in the webview's widen images logic,"In the webview's Javascript code, the images from a page are stretched to
fit in the device's screen. When widening an image, a image URL of greater
resolution can be used instead to fit better with the new computed dimensions.
With this change, we make sure that after this logic takes place, it won't be called
again for the same image, which was provoking an infinite loop causing high
CPU usage.

Bug:T109983Change-Id: I759297334cb7e0c32dc00cd71b300c9783ebf2af",,,cpu usage
https://github.com/wikimedia/apps-android-wikipedia/commit/59dce5f696264b99ce05a26068b38398af7e02a7,Replace ACRA with HockeyApp,"* Replace ACRA with HockeyApp v3.5.0. This change was made as ACRA
  doesn't offer in itself a freestanding backend or quiet automatic
  reporting, and doesn't support Marshmallow yet[0]. However, we will
  investigate a self-hosted Acralyzer installation in the future.

  HockeyApp doesn't seem to offer custom properties, so these are
  bundled as JSON in the report description. Since these properties are
  not associated with a crash instance and not preserved across
  application death, and crashes may enqueue, it's possible they may be
  inaccurate. However, these properties are used in one place presently
  and the current implementation _should_ be adequate.

  The ProGuard rules were updated for HockeyApp from this document[1]
  and a little guesswork.

  HockeyApp v3.5.0 seems to be incompatible with Marshmallow just like
  ACRA. v3.6.0-b.1 appears to work fine. The upgrade will be made in a
  subsequent patch with related changes.

  The change in APK size is ~13 KiB. More specifically, the release
  application was 3825548 B previously and 3838973 B after, increasing
  by 13425 B.

  Crash reporting was verified on dev debug, and alpha, beta, and prod
  release configurations on API 15:

  gradlew clean installDevDebug installAlphaRelease installBetaRelease installProdRelease

  Smoke test crash reporting was verified with HockeyApp v3.6.0-b.1 on
  Marshamallow (with changes coming in a subsequent patch).

  A future patch may replace alpha distribution with HockeyApp.

* Add remote logger to L in the form of logRemoteErrorIfProd(Throwable).
  This is meant to coincide with cludge fixes where the error path is
  not understood. This is done via a helper Exception,
  RemoteLogException, which supplies an accurate stacktrace by forcing
  creation at the point of logging. In the event that a build is non-
  production, L will throw the Throwable, causing the app to crash. The
  thinking was that if it's worth burning user data and engineering
  parsing time, it's worth crashing on everything but prod. A new UI was
  added to dev settings to test this functionality, save the non-prod
  crash bit.

  Also replace Exception logging functions with Throwables and fix no
  message overloads to print an empty string instead of null for their
  messages.

* Rename acra_report_dialog_title and acra_report_dialog_text to
  crash_report_dialog_title and crash_report_dialog_text. Remove
  acra_report_dialog_comment Strings as in-app feedback was removed:

  find -name strings.xml|
  xargs -rd\\n sed -ri '/<string name=""acra_report_dialog_comment""[^>]*>[^<]*<\/string>/d'

* Extremely light refactoring of PreferenceLoader and related classes to
  expose the host Activity, needed by HockeyApp, and a
  findPreference(int) overload that accepts a key String resource ID.

* Replace the crash test NullPointerException with a dummy
  TestException.

[0]ACRA/acra#287[1]http://support.hockeyapp.net/kb/client-integration-android/hockeyapp-and-proguardBug:T108420Change-Id: Ia3b687daf5d5273520569ca60b6b04237cf7fd8d",,,apk size
https://github.com/wikimedia/apps-android-wikipedia/commit/c97f297852cca30ab53736ac96ff4489df15293d,Revive the session funnel.,"- Re-enabled the session funnel, to be sampled at 1:100 in production and
  1:1 in non-production.
- Updated the funnel to record the number of pages viewed during a
  session, categorized by source.
- Added a new source, to represent pages viewed from the disambiguation
  list (Similar pages).
- The funnel now also records the average latency of the lead section
  request and the rest-of-sections request over the network. It also
  records whether the request is done via the MediaWiki API, or the new
  content service.
- Added a developer preference to set the length of a session for testing
  purposes (default is 30 minutes).

Bug:T111541Change-Id: I600b00c2868a6922c1a0e02c86826e146a8dc2cb",,,latency
https://github.com/wikimedia/apps-android-wikipedia/commit/54c075b949b04da1f6a820ba6aaaa2cf837047a6,Maps in Nearby: TNG,"Highlights:
- Using MapBox SDK to retrieve tiles from our server. This sdk adds about
  234 KiB to our APK size.
- Using built-in functionality to display user's location as a marker,
  with a translucent circle representing accuracy.
- Panning and zooming the map refreshes the collection of markers.
- Display of markers is independent of whether we know the user's
  location. This allows the user to randomly ""explore"" arbitrary areas of
  the map.
- Feature-flagged for non-production only. Since this is nearly a rewrite
  of NearbyFragment, I simply created ""NearbyFragmentOld.java"" which has
  the old code, and we'll remove it when the time is right.

Bug:T100315Change-Id: I423745164ce8694d14099ea9aa0b2a05a141c8c3",,,apk size
https://github.com/wikimedia/apps-android-wikipedia/commit/4cadfa0b3b4f20d38e1c7557176b4da114dc7a3e,Add CI script for testing emulator readiness,"The Android instrumentation tests are failing in a strange way after
upgrading the Android Support libraries[0]:

com.android.builder.testing.api.TestException: com.android.builder.testing.api.DeviceException: com.android.ddmlib.ShellCommandUnresponsiveException

This script performs some device readiness checks and waits as needed
before returning which allows the tests to run successfully again. This
script will be used by CI[1] once merged.

[0]https://gerrit.wikimedia.org/r/#/c/235859/[1]https://gerrit.wikimedia.org/r/#/c/239902/Change-Id: Ib8a04d12ec48fe03c508fcacd355daa20a92b34d",,,unresponsive
https://github.com/wikimedia/apps-android-wikipedia/commit/59ca2ac9468b929175b57757273877bc4e8ffb22,Use Retrofit for direct mobileview page load,"* Added new library + license info + ProGuard rules
  devRelease apk size difference:
  before: 3,812,413 bytes
  after:  3,852,942 bytes
  = +40KB
* Implemented PhpApi Retrofit service endpoint
* JsonPageLoadStrategy ApiTasks converted to use Retrofit callbacks
* New Gson POJOs for PageLead and PageRemaining
* PageLead Gson parsing had an issue with the protection field
  --> had to use custom JSON deserializer for the protection field
  due toT69054.
* pageLead request uses formatversion=2 to make handling boolean values easier.
 pageRemaining doesn't have any booleans, so not needed there yet (but probably wouldn't hurt).
* section: ArrayList -> List
* new Section(json) -> Section.fromJson(json)
* Retrofitted RefreshSavedPageTask functionality
* Get Main page for widget (also added slight optimization)
* SectionsFetchTaskTests -> PageLoadTests
* Removed SectionFetchTask
* Add noimages flag (have to skip sending the parameter when false
  since the MW API takes the mere presence of the parameter as a true value)
* Add W0 mcc-mnc enrichment header
* Add other custom headers
* Get W0 X-CS header
* Use OkHttpClient cookie handler and cache
* Cache the RestAdapter's output the service object since this is a memory intensive object.
  Seehttp://stackoverflow.com/questions/20579185/is-there-a-way-to-reuse-builder-code-for-retrofit#answer-20627010I started most of the POJO files using jsonschema2pojo.org. But manually updated them to
introduce the static inner classes, added some convenience methods; and, of course,
last but not least add the custom deserializer for the MwPageLead.Protection object.

The parts I don't like are the extra de-/serialization steps in Section.java. I think it's probably better to leave that
to use org.json.JSONObject parsing instead of using Gson since we pass the former over to the JS bridge.
Now toJSON() builds a new JSONObject just for that. Oh well.

The code is already structured so that it's easy to plug in a new way of loading page content through RESTBase.
It was a bit rough to genericize regular Retrofit interfaces which are used to generate the Retrofit endpoint functionality.
If it wasn't for that this code would have been quite a bit simpler and more standard Retrofit. Sorry, Jake.

Change-Id: I0ea27355780f8d1550b743714454b5fe701d4490",,,apk size
https://github.com/wikimedia/apps-android-wikipedia/commit/6b17b8ce1ec2eb24bd2cd36d4becf3907da8806a,Avoid requesting unused information from API in NearbyFetchTask,"NearbyFetchTask currently requests a pageimage property that it doesn't use.
This changes NearbyFetchTask to explicitly not request that property, which
will slightly reduce data usage for the user with no UI changes.

Change-Id: I92a758975915e50f0c02e998161ff2e5a014d4b5
Task:T97276",,,data usage
https://github.com/wikimedia/apps-android-wikipedia/commit/8e6a483085490424f936e0b2347e600f7ffe0a82,Reuse the same WebView for article navigation.,"The plan so far:
- PageViewFragmentInternal shall now become a true Fragment (and
  I've deleted the ""old"" PageViewFragment class).  Once this patch
  is merged, we can rename it back to PageViewFragment. I'm not
  renaming it yet, to better keep track of what is changing.
- The new fragment structure of the main activity shall be: a single
  PageViewFragment (to display n pages), and at most one other fragment
  on top of it (History, Saved Pages, Nearby) for selecting pages to
  navigate to.
- Added additional sequencing logic to async tasks that fetch page
  content, so that they correctly invalidate themselves when a new page is
  loaded.

TODO: Perform some additional profiling, and see if there are any
remaining resource leaks.

Change-Id: I40ac4c6f1a0351e7fec7b462d5b950c12fd09122",,,resource leak
https://github.com/wikimedia/apps-android-wikipedia/commit/29e351dcb6cae4b32a68ed33c92e034ddd3ad8ea,Image share improvements,"Share image using actual file name in folder with fixed name
Well, not completely the same name. The file name goes through a bit
of transformation to remove unknown characters. But it's way more
useful than using tmpShareImage.jpg.

By having a fixed folder we can delete its files before
sharing another image.
Staying frugal with storage space, though, and make an effort to remove
any shared files once a day with a recurring task.

Now using Context.getExternalCacheDir() since
this folder would get automatically removed if the app is uninstalled.

Plus, checking first if ext. storage is writable before trying to write the file.

Change-Id: I85c9e564d2cf57630bef8c65bc0b7716b39a3850",,,storage space
https://github.com/wikimedia/apps-android-wikipedia/commit/d8507540c7bccd354037552b26f0c22ffe273ae0,Fix and update ActionBar icons for Night mode.,"Also:
- Modified the convert script to pass each png through pngcrush, saving
  about 130KB from the total APK size.
- Modified the color and opacity of ActionBar SVGs to comply with Android
  design guidelines, and have consistent colors in History, Saved Pages,
  Main activity, etc.
- Removed SVG for the hamburger icon.
- Committing all updated PNGs that were affected by this.

Change-Id: I1b22a11ee57b489d013c75a7eee0b2b76d7eb98b",,,apk size
https://github.com/commons-app/apps-android-commons/commit/629f222ccb19915be04f023d995d498e53103a0b,Switch to using UIL for Share activity as well,Should fix the OOM issues and be in general more reliable,,, oom 
https://github.com/commons-app/apps-android-commons/commit/11685e5ec1265230096f6332e792120ac2576efa,(Bug 41703) Validate user tokens & re-login if necessary,"Now we send out a request before every upload to check if
the user is logged in. If not, we re-login.

Need to study this more - this adds a little bit of extra latency
to every upload. But if the upload fails because of a login failure,
it will mean we'll have to re-upload the entire thing. Choices.

Also added a debug method to convert XML object to a String. Was
amazed at the power of Java being able to make such a complex task
accomplishable by a single line </s>",,,latency
https://github.com/TomBursch/kitchenowl/commit/2d35edfb6615bf445970ac653e7fd28e8e719799,fix: storage space info,,,,storage space
https://github.com/aeharding/voyager/commit/c9dd8fa845213902cc76e0cd2f124118a6c66db7,Downgrade rehype-highlight for memory leak (,remarkjs/react-markdown#791,#1455,https://github.com/aeharding/voyager/pull/1455,memory leak
https://github.com/opendocument-app/OpenDocument.droid/commit/7277282ea64bef06a0cdb7416981c99ed9884294,catch impossible OOM on some Nexus 4s,,,, oom 
https://github.com/LucasGGamerM/moshidon/commit/9e9f9357fdeaa5fe18c37f3b3597778566b56ac5,display image cache size,closessk22#301,,,cache size
https://github.com/trynoice/android-app/commit/c5b341540539341c64ccdce3891071bb9cbca174,fix anr while loading app shortcuts in the presets fragment,,,, ANR 
https://github.com/trynoice/android-app/commit/0ea9b1532f9575c9b5f4a2b69fb700e29c509b42,chore: merge pull request,Migrate from May to Room for local data storage,#1086,https://github.com/trynoice/android-app/pull/1086,data storage
https://github.com/trynoice/android-app/commit/d472274d8a9759f8447138609013b43108c54493,fix: ANR on pausing playback,,,, ANR 
https://github.com/ankidroid/Anki-Android/commit/849d7e43ea6d25d02a37e944385eac1a294dde16,fix(release): increase build heap,"release build still failing on OOM during R8 shrink, hopefully this
fixes",,, oom 
https://github.com/ankidroid/Anki-Android/commit/292ef3a4b18e88421792f1d3081d8fb96097629b,Manage space activity: deal with FAT volume identifiers correctly,"When calculating user data and cache size, `StorageVolume.uuid` may
yield what appears to be not actually an UUID but a storage volume
identifier, which “are 32 randomly generated bits that are represented
in string form as AAAA-AAAA”. This commit adds conversion of these
strings to proper UUIDs.",,,cache size
https://github.com/ankidroid/Anki-Android/commit/1047989bb6d63510aa6c828e1d0cfa41c3b02398,test(perf): avoid OOM while running big batches of commit tests,"TIL that you can still kill a machine with 64GB+64GB RAM+Swap if
you run enough Kotlin on it. Thanks gradle.",,, oom 
https://github.com/ankidroid/Anki-Android/commit/bd4b810102b0664b2779a3ca609edc5000e5e834,fix: 'RescheduleDialog' memory leak,"* Open Reviewer
* Select ""Reschedule - Reschedule in X Days""
* Close the dialog
* Close the reviewer
* Memory leak",,,memory leak
https://github.com/ankidroid/Anki-Android/commit/d26a90cac278a6bcd97773062949c6e07afc6772,fix(release): workaround gradle OOM by killing daemon after most activities,…vitiesFixes#12594,,, oom 
https://github.com/ankidroid/Anki-Android/commit/1a8efcc3fbff575ed6d10f66db918a67e3f9049b,Migrated CollectionTask. ConfReset to Kotlin Coroutines (,"* Extracted out ConfChangeHandler functions

* Migrated ConfReset to Coroutines

AppCompatPreferenceActivity is not a lifecycleOwner so it doesn't has access to lifecycleScope.launch{}.  To be able to launch coroutines, we need to have a CoroutineScope(SuperviserJob + Dispatcher.Main) instance using which we can launch new children jobs. Any job started from this scope will need to be cancelled in onDestroy to avoid any memory leaks and resource abuse. Here the AppCompatPreferenceActivity extends CoroutineScope whose implementation is delegated by MainScope. We need to explicitly cancel all the jobs started from this scope, so cancel is called in onDestroy.

* removed redundant variable 'context'

* Added docs and moved postConfChange to finally block

 need to call postConfChange in finally because if withCol{} throws an exception, postConfChange would never get called and progress-bar will never get dismissed",#12454,https://github.com/ankidroid/Anki-Android/pull/12454,memory leak
https://github.com/ankidroid/Anki-Android/commit/1f2dc019d520ffcf20006c7ec9f3e3f4332f56a2,build(deps): remove ktlint memory leak workaround,"It appears upstream has fixed the leak as of 0.45.0, so workaround
not needed, and ktlint is now on 0.45.2 anyway, so use that

Can't remove the actual version override that gets us 0.45.x until
the ktlint gradle plugin has a new release but that hasn't happened yet",,,memory leak
https://github.com/ankidroid/Anki-Android/commit/b6431ef39b3fa05c49220d98ae0ce8aa5423549c,feat: Dialog to handle gesture selection,"GestureSelectionDialogBuilder is the main entry point,
A screen with visual feedback allowing gesture selection via
either user action, or via a spinner

The spinner exists to enhance discoverability
of long/double tap gestures

Known Issues:
* Swipe does not appear on <= API 24. A static image is used
* Gesture unicode character not rendered on <= API 22
* Milliseconds of visual latency on taps (due to double tap checking)

Prep for 6052, code partially from 8078",,,latency
https://github.com/ankidroid/Anki-Android/commit/4809c77a444ef2c198a01e7cded26555f0600623,Fix AnkiStatsTaskHandler's AsyncTasks memory leak,"- Replaces the strong references to view objects in AsyncTasks with WeakReferences
- Turns the extended AsyncTasks into static inner classes
- Checks if a weakly referenced object isn't null before using. Attempts to update UI only if view objects exist.",,,memory leak
https://github.com/ankidroid/Anki-Android/commit/63a34e0ce2e7267c5bcbb23790fdf8d5c2478425,Upgrade ankidroid backend to 0.1.4,"* rsdroid-testing: diagnose file not found error
* fix OOM via memory limit on DB row results
* Add Java-based exceptions for rust errorsFixes#8178(hopefully)",,, oom 
https://github.com/ankidroid/Anki-Android/commit/9ab6d44bed5abc19bc6ce983dcdd78b914e36aa9,BugFix: Safe Display - Don't block nav drawer,"For now, the handling of blocking the animation was buggy, so keep showing
animations even if Safe Display Mode is on.

Tapping on the left side of the navigation drawer caused it to partially pop
out, closing it made the entire UI unresponsive.

I had a few tries, but both of these meant that the drawer closed immediately
when it was swiped open.

We might need to copy the navigation drawer code and recode it.

Fixes 7344",,,unresponsive
https://github.com/ankidroid/Anki-Android/commit/2a514b7de209cd500d202397046984dac8a3e15e,CSV Import: Stream CSV File Input,"Ensures that we shouldn't OOM on import

This is for API 26+, so uses Java Streams

From code review on 6772/6773",,, oom 
https://github.com/ankidroid/Anki-Android/commit/24a5a324683998f19138a5ed400d53e5341b8a66,"Tune robolectric to have more memory, and re-fork",More work to reliably not OOM in Travis,,, oom 
https://github.com/ankidroid/Anki-Android/commit/c3612f9d6792a52bbc9711220c27314969c27dcf,Dispose of Robolectric ActivityControllers after tests,This should prevent OOM in Travis,,, oom 
https://github.com/ankidroid/Anki-Android/commit/9c12b9aac281680e793b23cf32d1069dc7772a2d,Gracefully handle WebView Crashes,"*Fix#5780- WebView OOM Crashes Application

Out of Memory issues in the WebView Renderer (e.g. large fonts)
were causing the application to crash and restart, going to the deck
browser.

We catch the OOM using `onRenderProcessGone()` (API >= 26) and recreate
the WebView to allow the application to continue with minor disruption.

If a card has not been rendered, or if the same card fails twice, we
fail gracefully and return to the deck browser.

* Review: Don't crash on unrelated render failure

Documentation states we should not try to clean up unrelated instances
of WebViews.

Returning false will cause a crash. Therefore return true to state
that we don't need to crash.

* Converted WebView crash error dialog to toast

It was an error which showed the card details (id). It's best to allow
the user to explicitly dismiss it, as they may want to screenshot the
details.

* WebView Render crash: Additional fix

Sometimes, even after writing a handler, the application crashed.

I believe that the C++ counts Java references when determining what to
check when a WebView process dies. We perform a GC to ensure these are
cleaned up by the time te C++ executes.

* NF: Fix Typo

* Fix accidental testing code insertion

* Review Change: Coding style",,," oom 
out of memory"
https://github.com/ankidroid/Anki-Android/commit/b96ffdb046285f5dd962955f434fd4d64d5ef99f,Add Mathjax support. (,"* Add Mathjax support.

This adds Mathjax 2.7.0.  It modifies several files in libanki, but I
tried to check them against the originals in Python.

It does not add fading like Anki but rather shows the text as soon
as Mathjax says it is finished.

I have added a few tests.  Some are ported from Anki, and other are
original.

This particular commit does not actually add the Mathjax files.  These
are in the next commit.

* Import Mathjax 2.7.0.

This is an import from the upstream git repository, checked out at the
2.7.0 tag.

* Address PR feedback.

* fix release build OOM w/gradle heap increase

* Use mathjax folder from upstream",#5285,https://github.com/ankidroid/Anki-Android/pull/5285, oom 
https://github.com/ankidroid/Anki-Android/commit/e2cb5e815cbddb3865e91f77e1112589ed00243a,Merge pull request,Remove latency for long-tap to work in Browser,#4193,https://github.com/ankidroid/Anki-Android/pull/4193,latency
https://github.com/ankidroid/Anki-Android/commit/dc5d882ab83cba5740021e6d4946f75286a0bc4e,Remove latency for long-tap to work in Browser,"Previously we were calling TASK_TYPE_RENDER_BROWSER_QA with the first 1000 cards in the result from mSearchCardsHandler.onPostExecute().
Since mRenderQAHandler does a notifyDataSetChanged() for EVERY card in the list as they're updated, this was effectively blocking the long-click listener for the cards, so I moved that initial card rendering code into the first DeckTask and dropped it from 1000 to 500.

I also did some tidying up to use the List and Map interfaces polymorphically instead of the ArrayList and HashMap implementations.Fixes#4191",,,latency
https://github.com/ankidroid/Anki-Android/commit/e48050043366e9ff6d21e2f54158849539ef2f49,Merged '9cfb7bb' from release-2.4:,"Commit 'f28082a'
Use largeHeap to fix OOM errors when checking db and importing

Commit '60d1206'
Changes to db error handling
Don't bother trying to auto-repair as it wasn't working well
Only show ""repair"" option in dialog when sqlite3 installed
Reword error dialog",f28082a,https://github.com/ankidroid/Anki-Android/commit/f28082ae95321ff51f213e60cc2378340bc6fa6d, oom 
https://github.com/ankidroid/Anki-Android/commit/f28082ae95321ff51f213e60cc2378340bc6fa6d,Use largeHeap to fix OOM errors when checking db and importing,,,, oom 
https://github.com/ankidroid/Anki-Android/commit/a866775b990b75e10d2c3c82873c7fdba691d61e,Merge pull request,fix memory leak due to statically declared DeckTask variable,#287,https://github.com/ankidroid/Anki-Android/pull/287,memory leak
https://github.com/ankidroid/Anki-Android/commit/8abc9c444ebe691b2e22faa7969e9ee6f1b76033,fix memory leak due to statically declared variable DeckTask sLatestInstance in Async.DeckTask,…nstance in Async.DeckTask,,,memory leak
https://github.com/ankidroid/Anki-Android/commit/87195b45fe3f4d6bd18952d7c6bf954627f1e3d2,Skipped '9a55027' from hotfix-2.1.2: Change the default to force quick WebView updates.,"…k WebView updates.

Currently, the default is to not use quick WebView updates (updating the
content of the WebView when changing cards). This was done due to a bug
(first identified in Gingerbread during the development of AnkiDroid 0.7
and custom fonts support). The bug lead to the application crashing in
native code due to a probable memory leak in WebView that was trigged by
using custom fonts.

A setting for this was introduced in a previous versio as on more recent
devices, the WebView issue seemed to not be reproducible, and recreating
the WebView each time did introduce significant flickering on some
devices.

However, more recently we have found a bug related to text input that is
not reproducible when quick WebView updates are enabled. Since the
WebView bug is probably obsolete on recent versions of Android, make
quick WebView updates the default.

The idea is that we will have fewer people experiencing the former than
the latter issue, and therefore the new default is likely to affect
fewer users.",,,memory leak
https://github.com/ankidroid/Anki-Android/commit/500583063fc310d2d9d20d996eec7e397b04b684,Change the default to force quick WebView updates.,"Currently, the default is to not use quick WebView updates (updating the
content of the WebView when changing cards). This was done due to a bug
(first identified in Gingerbread during the development of AnkiDroid 0.7
and custom fonts support). The bug lead to the application crashing in
native code due to a probable memory leak in WebView that was trigged by
using custom fonts.

A setting for this was introduced in a previous versio as on more recent
devices, the WebView issue seemed to not be reproducible, and recreating
the WebView each time did introduce significant flickering on some
devices.

However, more recently we have found a bug related to text input that is
not reproducible when quick WebView updates are enabled. Since the
WebView bug is probably obsolete on recent versions of Android, make
quick WebView updates the default.

The idea is that we will have fewer people experiencing the former than
the latter issue, and therefore the new default is likely to affect
fewer users.",,,memory leak
https://github.com/ankidroid/Anki-Android/commit/fec5ff00852f90257b046e8a97210929628a1f00,Fix resource leak.,Close stream after use.,,,resource leak
https://github.com/ankidroid/Anki-Android/commit/ade210aafaab15e40c80289f091869c00c620dc1,"put deck closing in async task for start of personal/shared deckpicker --> otherwise, ui freezes for some minutes","…r --> otherwise, ui freezes for some minutes",,,UI freeze
https://github.com/ankidroid/Anki-Android/commit/d661a260884dd50e65f3b3df63597d9627e40cce,more sluggish adjustment of swipe's offpath,,,,sluggish
https://github.com/ankidroid/Anki-Android/commit/b344bccb59def2d6f3d61a26bb701a2adbb5c7c2,"Some love for full syncing: fix for out of memory crash on large decks (issue 203), better error (from client or server) reporting, don't lose original deck if full download fails half way through.","…s (issue 203), better error (from client or server) reporting, don't lose original deck if full download fails half way through.",,,out of memory
https://github.com/ankidroid/Anki-Android/commit/9193806eb0546bf8d7c040ad40272d632b4d3e99,Reduce battery drain caused by insainly high value of widget update period. The period is now set to 1 hour but we still wake up the device to perform the update. We might consider the use of an al…,"…eriod. The period is now set to 1 hour but we still wake up the device to perform the update. We might consider the use of an alarm to avoid waking up the device when it is asleep, or at least let the user configure the update period himself.",,,battery drain
https://github.com/PaulWoitaschek/Voice/commit/625e59e90512d96f81dda3427b564cf33da38015,Stop the service in onTaskRemoved,"If the player isn't set to play when ready, the service is stopped and resources released.
 This is done because if the app is swiped away from recent apps without this check, the notification would remain in an unresponsive state.
Further explanation can be found at:androidx/media#167 (comment)",,,unresponsive
https://github.com/PaulWoitaschek/Voice/commit/ae674ff0827bb98922118f9268d235d957f7be3e,Merge pull request,Fix an issue where notifications became unresponsive after some time.,#1960,https://github.com/PaulWoitaschek/Voice/pull/1960,unresponsive
https://github.com/PaulWoitaschek/Voice/commit/a8b8a0844e70e8134078ef0dc6727602d0abc22a,Inject the Application in order to prevent memory leaks in a compile time safe way.,…time safe way.,,,memory leak
https://github.com/PaulWoitaschek/Voice/commit/6e486df2a74e182e51dd842fbf83cfe00346fae5,Fixed a memory leak in the sleep timer dialog.,,,,memory leak
https://github.com/PaulWoitaschek/Voice/commit/945745303c2eba93ef84f38522d757df48ac5e08,Check if the view is laid out for deciding if we should animate or not.,Fixes subtle ui lags.,,,UI lag
https://github.com/PaulWoitaschek/Voice/commit/2389629b94915edb05cbac9771541ad4c9f83901,Fixed memory leaks in book play controller.,,,,memory leak
https://github.com/PaulWoitaschek/Voice/commit/76c70f2cda5f7f61e3e7486544a07abd95e0380d,Fixed memory leaks in book shelf controller.,,,,memory leak
https://github.com/PaulWoitaschek/Voice/commit/0f39cbcfab4e01aa9551092e66d7c9954004949b,Cache the image that is displayed to greatly reduce memory consumption,,,,memory consumption
https://github.com/PaulWoitaschek/Voice/commit/36e72a27bf2bd85c670f35d941d462a45f19ac90,Made subjective start time way shorter.,Added a fake theme that uses the old windowTitle to mimic the AppBar as we can't show it when the app is starting. This way the launch time stays the same but seems significantly shorter.,,,launch time
https://github.com/PaulWoitaschek/Voice/commit/dbf12e4662e492ac3cf68f5fc240768255044a31,Fixed memory leak by setting setRetainInstance to false.,,,,memory leak
https://github.com/PaulWoitaschek/Voice/commit/54dd48e6c9f33b19142d84a025c2c130bd6753ec,Removed redundant call. Fixes memory leak,,,,memory leak
https://github.com/PaulWoitaschek/Voice/commit/b74aa926a514ca9be783cd23fe77f43820c63855,Loads sampled image to prevent OOM Error,,,, oom 
https://github.com/mullvad/mullvadvpn-app/commit/4a09f51122b7b9531df8e9aae424fa479457de6a,Add Android memory leak detection build type,"Adds a new build type which can be used to identify memory leaks by
using the Leak Canary dependency/tool.",,,memory leak
https://github.com/mullvad/mullvadvpn-app/commit/600b1c7e21f225780af2588129f67e299c922330,Merge branch 'fix-unresponsive-disconnecting-state',,,,unresponsive
https://github.com/mullvad/mullvadvpn-app/commit/ea2f627c6461148e064d227ee7d2363c75ddc5bc,Update nftnl crate to fix memory leak,,,,memory leak
https://github.com/mullvad/mullvadvpn-app/commit/5d8e026c1cf2bdb80ea03c62adfb6823397f6576,Add a acknowledgeStartForeground helper method,"Used to temporarily place the notification in the foreground by calling
`startForeground` in order to avoid ANR timeouts.",,, ANR 
https://github.com/mullvad/mullvadvpn-app/commit/ab3faea1d7f360ccf6113934f3d8bc3ffcd95d8f,Update jnix dependency to fix JNI memory leak,,,,memory leak
https://github.com/mullvad/mullvadvpn-app/commit/5255ac57671fed86fd607b515cd91a16db4322c4,Increase state change event timeout,"Because now the firewall handling may introduce enough latency for the
tests to fail.",,,latency
https://github.com/mullvad/mullvadvpn-app/commit/036da86805c8c09edabeb116ad2d682e061a6e60,Add helper to create private data storage using WeakMap,,,,data storage
https://github.com/mullvad/mullvadvpn-app/commit/744ee393857eef4367f8abdae7eceae55a7c320c,Fix code smells that clippy detected,,,,code smell
https://github.com/lucasnlm/antimine-android/commit/6f466f47b66cbdcd0aba30a5f703698559ad907c,Optmize app size,,,,app size
https://github.com/powerje/NyanDroid/commit/b0401a7e4b8a4b7f3a224be2f532d18764d8fbd9,Added what I hope fixes out of memory issues as well as updated version number for bug release release,…on number for bug release release,,,out of memory
https://github.com/ismartcoding/plain-app/commit/2d9625c9e7e96e19f1f02364c703ea98a06efa9c,Fix ANR triggered by slow operations in main thread,,,, ANR 
https://github.com/pilot51/voicenotify/commit/bbcc710450d50f369460c5bb310083b30eeedcf1,Convert all UI to Compose,"NOTICE: This will remove any active usages of the widget.

- New app bar with back button in App List and TTS screens.
- Ignore All/None now separate app bar buttons in App List.
- Remove keyboard input option in Quiet Time. Should be temporary.
- Device States and TTS Audio Stream dialogs now have both
    'Cancel' and 'OK' buttons. Changes only saved with 'OK'.
- TTS Text Replacement dialog is less janky.
- Add title to Quiet Time dialog.
- Widget image is now a white vector with tint applied.
    This changes the widget preview from green to white.
- Include Git hash in release version name.
- Shrink/optimize release build without obfuscation.
    This reduces APK size from about 13MB to 3MB
    while maintaining trust in the build.
- minSdk: 18 (4.3) -> 21 (5.0)
- compileSdk/targetSdk: 33 (13.0) -> 34 (14.0)
- Update dependencies.
- Reorganize strings.
- Change copyright start year to start of project in all files.
    Too ambiguous to use the year the code in the file was created.
- Other fixes and improvements.",,,apk size
https://github.com/pilot51/voicenotify/commit/5c710fe55f5ffc5f7528b48e1d76e4e6bf64b961,Fix shake listener not unregistering after utterance.,"-Allowed shake message to apply in Log long after speaking completed.
-Possible cause of excessive battery drain reported by a couple users.",,,battery drain
https://github.com/kiwix/kiwix-android/commit/010052a3a08dff32637a458dca79ea093423b2d4,Fixed: Sometimes setting the org.kiwix.libzim.Archive.setNativeArchive crashes the application.,"…ve` crashes the application.

* We are now creating the ZimFileReader object on the background thread to not block the UI thread which sometimes causing the ANR because UI was frozen due to creation of ZimFileReader with large file.
* Refactored our functionality to support this new change.
* Refactored the test cases according to this functionality.",,, ANR 
https://github.com/kiwix/kiwix-android/commit/3716b72fc060020311def81b16d4c4231e5ad70b,Merge pull request,"Fixed, Reduce mass-storage consumption with Android custom apps with embedded ZIM",#3516,https://github.com/kiwix/kiwix-android/pull/3516,storage consumption
https://github.com/kiwix/kiwix-android/commit/c3049a6a597919368f5364e5983c84e3dae1fbd1,Fixed memory leak on API level 24.,"*  When the application goes in the background from `ZimHostFragment`, `KiwixReaderFragment/ZimHostFragment` without starting the Service then the `ReadAloudService`, and `HotspotService` variables are not used and GC try to clear those objects but we are not clearing those objects, that's why memory leak is happening. So now we have free those objects if they are not in use.",,,memory leak
https://github.com/kiwix/kiwix-android/commit/2ff238787689755666fd22885a0b464d45b706ec,Fixed the memory leak in LocalFileTransferFragment.,"* The issue is inside the library, they forgotten to detach the view after its successful use, means when the showCase is shown they are not detaching the view from window which causing the memory leak. They have not mentioned this step into their documentation to address the memory leak.",,,memory leak
https://github.com/kiwix/kiwix-android/commit/1281c0c795cc6607ff3bded7125253deb0f06bc9,Improved test cases and fixed memory leak in application.,"* Previously our test cases were launching the `KiwixMainActivity` twice (firstly it sets the values in preference and then relaunch the activity) before running the test case which was the cause of slow testing and sometimes it caused to memory leak in some api levels so we have refactored our test cases to launch `KiwixMainTest` once per test case.
* `IntroFragmentTest` is failing on api level 24 due to a memory leak because after clicking on getStarted button is going to the LocalLibrary page but somehow `onStart` and `onStop` methods are calling of the `CoreReaderFragment` which stablish the `serviceConnection` but it was happening very quickly so before attaching the binder to `readAloudService` unbindService method called but at this point service was not created but creating was in progress so after going to library screen it allocate memory to `readAloudService` but `ReaderFragment` is no more visible to the user that's why memory leak happened. We have fixed it by unbinding the service in `onDestroyView` method.",,,memory leak
https://github.com/kiwix/kiwix-android/commit/f3e8589899eec08d315689d945425a0d8f94645c,Fixing ANR on custom app,,,, ANR 
https://github.com/kiwix/kiwix-android/commit/095405f3834935a2edddba58569321472209440a,"Fixed memory leak in CoreReaderFragment, which causes test failure",,,,memory leak
https://github.com/kiwix/kiwix-android/commit/e928611f0f3dc6888183719dde27f16ecd2cc8eb,Fixed memory leak on Intro Fragment,,,,memory leak
https://github.com/kiwix/kiwix-android/commit/3dead2d770302d73d3e138b296a2aab6e74b6fa4,Merge pull request,Remove (CI detected) memory leaks,#3158,https://github.com/kiwix/kiwix-android/pull/3158,memory leak
https://github.com/kiwix/kiwix-android/commit/b0b26bc8de1e91f90862b533412397682ffb6ea5,Fixed memory leak on hotspot service,,,,memory leak
https://github.com/kiwix/kiwix-android/commit/bb7ffa0c5740322ef15a3b4dcea1f106f92b1d8f,Fixed memory leak on KiwixReaderFragment,,,,memory leak
https://github.com/kiwix/kiwix-android/commit/47895ea0219b7ca29902012b7f1a76b65d3feec1,Fixed memory leak on search fragment,,,,memory leak
https://github.com/kiwix/kiwix-android/commit/ade1d2ea0e43e6b4b5d49f47669a3058a473679b,Fix memory leak on intro fragment,,,,memory leak
https://github.com/kiwix/kiwix-android/commit/aaba8d1c5572bbfcc907827f5f7c8ad6b41594fa,Introduce detecting memory leak on CI,,,,memory leak
https://github.com/kiwix/kiwix-android/commit/bffbe0e6fcd4be9af67bbc2d3ea8d86e2dd1a15a,Merge pull request,"…ustom_app

Removed `TextInputSpeech` memory leak",#2844,https://github.com/kiwix/kiwix-android/pull/2844,memory leak
https://github.com/kiwix/kiwix-android/commit/11653545590d21d760464281064007c99daa1769,Merge pull request,Fixed `DrawerLayout` memory leak,#3068,https://github.com/kiwix/kiwix-android/pull/3068,memory leak
https://github.com/kiwix/kiwix-android/commit/ac3d323919fb14175ace983675d3efabb25987a5,Merge pull request,"…_in_kiwix_reader_fragment

Memory leak fixed in KiwixReaderFragment",#2572,https://github.com/kiwix/kiwix-android/pull/2572,memory leak
https://github.com/kiwix/kiwix-android/commit/e4887dec5c07e38feeb6e5f81a31da76b7f0424e,Merge pull request,…activity-memory-leaks#2341fix one activity memory leaks,#2383,https://github.com/kiwix/kiwix-android/pull/2383,memory leak
https://github.com/kiwix/kiwix-android/commit/609222cd7904e21a37de23dbc98d4d56b8373455,Merge pull request,"…ry-leaks

Feature/frans lukas/2338 fix memory leaks",#2340,https://github.com/kiwix/kiwix-android/pull/2340,memory leak
https://github.com/kiwix/kiwix-android/commit/1185b665b0d9dc23cf053b91b9a47b502306bcb2,Merge pull request,"…ry-leaks

Fix crash-causing memory leak",#2245,https://github.com/kiwix/kiwix-android/pull/2245,memory leak
https://github.com/kiwix/kiwix-android/commit/3a5518fbe5f48508fa19f3f4c71c7f05bfdfb532,Merge pull request,#1660Search Widget unresponsive in 3.1.2 - use explicit class name a…,#1665,https://github.com/kiwix/kiwix-android/pull/1665,unresponsive
https://github.com/kiwix/kiwix-android/commit/7eb66b53da240cd6d259000b4876a7a015affdb0,Merge pull request,#1634App becomes unresponsive in the library - add permission back,#1637,https://github.com/kiwix/kiwix-android/pull/1637,unresponsive
https://github.com/kiwix/kiwix-android/commit/7a3e5c980dc6ddbc238ab22205d11d6732843445,Fix memory leak in HotspotService,,,,memory leak
https://github.com/kiwix/kiwix-android/commit/38af60109a20c75b086aadb68723e6dea60477f6,Fixes#1186 Allow user to disable data before turning on hotspot,"Added a method isMobileDataEnabled() that uses ConnectivityManager
And checks if data is enabled or not.
If data is enabled, then it takes the user to enableDisableMobileData()
It shows the user Data Usage Summary settings screen.",,,data usage
https://github.com/kiwix/kiwix-android/commit/38009d63d12bc96fac31f30165d9671b2b349d5a,Merge pull request,"…orage-devices#1279add android storage devices, fix resource leak, visibility issu…",#1279,https://github.com/kiwix/kiwix-android/issues/1279,resource leak
https://github.com/kiwix/kiwix-android/commit/541e3807c1d181626069ad106234d36780af780d,Fix memory leak in KiwixTextToSpeech,,,,memory leak
https://github.com/kiwix/kiwix-android/commit/cc6a8ff1a706fd2692f62b916e103d7ff3888321,Fix memory leak in KiwixWebView,,,,memory leak
https://github.com/kiwix/kiwix-android/commit/c86ebae157a9e633fca7b84ab703a23f2e40fd55,Fix memory leak in KiwixDatabase,,,,memory leak
https://github.com/kiwix/kiwix-android/commit/773cc45dcde28e1671e35556a5db01dd818f5a06,reduced potential memory leaks,,,,memory leak
https://github.com/kiwix/kiwix-android/commit/a9dfb40ab0e2e2301afd9ed0ecc8925b434cee9f,Fix for unresponsive permission grant when clicking get content,,,,unresponsive
https://github.com/mjaun/android-anuto/commit/22e57fd1e0625dc1449b983143ec2dbf4e237b4a,memory leak fix,,,,memory leak
https://github.com/kylecorry31/Trail-Sense/commit/8f305ebde78dbb8a49b26a55dc3d2c1bb14e1599,Improve CPU usage on navigator fragment,,,,cpu usage
https://github.com/kylecorry31/Trail-Sense/commit/d3071375d20b1d4c146d77224b053d27b2c6131d,Improve state manager CPU usage,,,,cpu usage
https://github.com/kylecorry31/Trail-Sense/commit/5b96c8cd873e1f8a28aad1c6a3ef0528178fd483,Fix more potential memory leaks,,,,memory leak
https://github.com/kylecorry31/Trail-Sense/commit/c73b1666f8badfa6ded1f037b32c3ceae8209090,Fix main activity memory leak,,,,memory leak
https://github.com/enricocid/Music-Player-GO/commit/476d23a18febb38e0233cc54885295bc879e1edc,Fix unresponsive notification when seeking but not playing,Signed-off-by: enricocid <enrico2588@gmail.com>,,,unresponsive
https://github.com/enricocid/Music-Player-GO/commit/c95b6d5a28b3c544b6359667548a72274d620383,Fix music service memory leaks,Signed-off-by: enricocid <enrico2588@gmail.com>,,,memory leak
https://github.com/deckerst/aves/commit/0cbe3d8b1d99b4c23a422b37c7c333e53a379251,prevent OOM when decoding large region,,,, oom 
https://github.com/deckerst/aves/commit/72a6af5040a90d8d3075cfc13fa201df33076dc8,memory leak fixes,,,,memory leak
https://github.com/deckerst/aves/commit/3909b9223d7432e1ad9734a36ee5042fbbd50fd7,memory leak fixes,,,,memory leak
https://github.com/deckerst/aves/commit/e883be178743c56096c639c8f8cbf2d64429c4cc,memory leak tracking & fixes,,,,memory leak
https://github.com/deckerst/aves/commit/506190f882d18789c0a276bd004e48da37299b33,memory leak tracking & fixes,,,,memory leak
https://github.com/deckerst/aves/commit/c5fde95c7300ad9fdbcf121992165a86c4420581,memory leak tracking & fixes,,,,memory leak
https://github.com/deckerst/aves/commit/bca78a06691a694848d2046bd48c30e5ff667dac,memory leak tracking & fixes,,,,memory leak
https://github.com/deckerst/aves/commit/4c07a9da43cb4b1d5b2f83fd9a556ea308e30ec6,memory leak tracking & fixes,,,,memory leak
https://github.com/deckerst/aves/commit/edb131363b7705a1e3768a3ce562506e53616d4f,about: data usage,,,,data usage
https://github.com/deckerst/aves/commit/fe81256276f630f05f44ccf6e9499190d2e335a5,cataloguing: prevent OOM from parsing larg MP4 sample tables,,,, oom 
https://github.com/deckerst/aves/commit/38a89c5b19a2b1a0ca3c4cef019b247974e4b70a,fixed image cache sizes,,,,cache size
https://github.com/commons-app/apps-android-commons/commit/368e1c753d985f6d172469ba4c88242af39004bd,Fix resource leak bug (,Signed-off-by: Alfusainey Jallow <alf.jallow@gmail.com>,#5251,https://github.com/commons-app/apps-android-commons/pull/5251,resource leak
https://github.com/commons-app/apps-android-commons/commit/67faa40d8c8c6de5c46ab75a4b686e0aecab0fc5,Structured data (,"*#3222Merge master into Structured Data branch, fix conflicts (#3447)

* [WIP]Fixes#2942. Set 'depicts' automatically for images uploaded via 'Nearby'

* Feature/refractor uploads [WIP] (#2887)

* Fix duplicate param information (#2515)

* Bug fix issue#2476(#2526)

* Added wikidataEntityID in all db versions, handled db.execSql via method runQuery

* Versioning and changelog for v2.10.2 (#2531)

* Update changelog.md

* Versioning for v2.10.2

* Update changelog.md

* Bugfix/issue 2580 (#2584)

* Corrected string placedholders in certain string files

* Corrected string placedholders in certain string files[Bugfix#2580]

* BugFix#2585(#2647)

* BugFix#2585* Added null checks on view in SearchImageFragment when updating views from external sources
* Disposed the disposables in SearchActivity and SearchImageFragment when no longer in active lifecycle

* use FragmentUtils to verify fragment active state

* Bug Fix issue#2648(#2678)

* Bug Fix issue#2648* Handled external storage permission before file download

* * Removed redudant check for permission in MediaDetailPagerFragment (Dexter already does that)
* Removed duplicate code in PermissionUtil$checkPermissionsAndPerformAction, used the existing function with conditional extra parameters

* string name typo correction

* BugFix issue#2652(#2706)

* Addded null check on bookmark before operating on it

* BugFix issue#2711(#2712)

* Added null checks in OkHttpJsonApiClient$searchImages MwQueryResponse

* BugFix#2718(#2719)

* Handled null auth cookies

*Fix#2791: NPE when nominating for deletion and leaving screen (#2792)

* Bug Fix issue#2789(#2790)

* Handled Illegal State Exception for non existent appropriate view parents in ViewUtils$showShortSnackbar

* BugFix#2720(#2831)

BugFix deprecated licenes#2720* ui fixes, wip, upload

* *Issue#2886, BugFix#2832[wip]
* updated UploadActivity code
* modified ui
* Updated UploadPresenterTest

* * updated interfaces names to follow names suffixed with Contract
* added test cases

* card view elevation

* view pager disabled swipe

* bug fix, duplicate image

* used existing non-swipable view pager

* Avoid image view resize with keyboard, added adjustPan and stateVisible as softinputMode for UploadActivity

* retain UploadBaseFragment instances on orientation changes

* * Added test cases for UploadMediaPresenter
* Injected io and main thread schedulers

* categories presenter test cased wip

* Added CategoriesPresenter test

* * Added the logic to show open map (with to be uploaded image's coordinates while uploading image)

* codacy suggested changes * added java docs

* Added travis_wait fot android-wait-for-emulator

* ranamed interface onResponseCallback to Callback

* * Added api to delete picture in UploadModel
* cleanUp in UploadModel. once upload has been initiated
* Removed unused methods from UploadModel and the corresponding test class

* * Added tests for UploadPresenter
* Travis suggested changes
* Addded copy previous title and description

* * Made the upload add descriptions visible when keyboard visible
* add description request focus only when user manually requests it

* Added JavaDocs, review suggested changes

* Fix dagger injection

* use DialogUtil to show info in descriptions

* use activity context for DialogUtil

* Minor changes

* refactored title

* ui for depicts

* bug fix

* basic architecture for depicts

* adde architecture components for depicts

* [WIP] ApacheHttpClientMediaWikiApi.wikidataEditEntity: JSON param creation uses object instead of string

* resolved dagger errors

* multilingual captions and next button error resolved

* fixed next button issues in depicts fragment

* captions and depicts

* resolved previous button click issues

* fixed bindview error and added multi-captions

* replaced description and caption with uploadmediadetail

* refactored few classes

* modified ui of depicts

* minor fixes

* Bug fix, reduced the add description edit text clickable bound (#2973)

* moved depicts before categories

* replaced previous filename with captions

* removed time from filename

* added depicts suggestions

* [WIP] Wikidata Sandbox (Q4115189) test

* changes layout of layout_upload_depicts

* changed layout of upload_depicts

* code stuck at IO_SCHEDULER

* labels and description for depicts activity

* Bugfix/uploads (#3000)

* merged with master

* BugFix IllegalStateException
* setRetainState(true), not required with FragmentStatePagerAdapter
* Increase the ViewPager's Offscreen Limit, we want all the fragments to be active

* BugFix, clear selected categoris for previous upload session
* Clear Selected Categories
* Addded JavaDocs for CategoriesModel

* Code Formatting in app/src/main/java/fr/free/nrw/commons/upload/UploadModel.java

* Added class level JavaDoc UploadRemoteDataSource

* Added class level JavaDoc for UploadRepository

* Added JavaDocs for ThumbnailsAdapter

* Added JavaDocs for MediaLicensePresenter, CategoriesPresenter

* Removed null check on category query
* Show default catgeories based on image title and gps location when category text empty
* Allow search for empty category search

* Attached image scale listener to upload media image

* Bug fix, reduced the add description edit text clickable bound

* Fix memory leak (#3001)

* Bugfix/uploads (#3002)

* merged with master

* BugFix IllegalStateException
* setRetainState(true), not required with FragmentStatePagerAdapter
* Increase the ViewPager's Offscreen Limit, we want all the fragments to be active

* BugFix, clear selected categoris for previous upload session
* Clear Selected Categories
* Addded JavaDocs for CategoriesModel

* Code Formatting in app/src/main/java/fr/free/nrw/commons/upload/UploadModel.java

* Added class level JavaDoc UploadRemoteDataSource

* Added class level JavaDoc for UploadRepository

* Added JavaDocs for ThumbnailsAdapter

* Added JavaDocs for MediaLicensePresenter, CategoriesPresenter

* Removed null check on category query
* Show default catgeories based on image title and gps location when category text empty
* Allow search for empty category search

* Attached image scale listener to upload media image

* Bug fix, reduced the add description edit text clickable bound

* Added tooltip in Title in UploadMediaFragment

* BugFix recent categories

* Updated test methods

* Bugfix/uploads (#3011)

* merged with master

* BugFix IllegalStateException
* setRetainState(true), not required with FragmentStatePagerAdapter
* Increase the ViewPager's Offscreen Limit, we want all the fragments to be active

* BugFix, clear selected categoris for previous upload session
* Clear Selected Categories
* Addded JavaDocs for CategoriesModel

* Code Formatting in app/src/main/java/fr/free/nrw/commons/upload/UploadModel.java

* Added class level JavaDoc UploadRemoteDataSource

* Added class level JavaDoc for UploadRepository

* Added JavaDocs for ThumbnailsAdapter

* Added JavaDocs for MediaLicensePresenter, CategoriesPresenter

* Removed null check on category query
* Show default catgeories based on image title and gps location when category text empty
* Allow search for empty category search

* Attached image scale listener to upload media image

* Bug fix, reduced the add description edit text clickable bound

* Added tooltip in Title in UploadMediaFragment

* BugFix recent categories

* Updated test methods

* Avoid memory leak, free the adpater in MediaLicenseFragment.onDestroyView

* bugfix/uploads (#3012)

* merged with master

* BugFix IllegalStateException
* setRetainState(true), not required with FragmentStatePagerAdapter
* Increase the ViewPager's Offscreen Limit, we want all the fragments to be active

* BugFix, clear selected categoris for previous upload session
* Clear Selected Categories
* Addded JavaDocs for CategoriesModel

* Code Formatting in app/src/main/java/fr/free/nrw/commons/upload/UploadModel.java

* Added class level JavaDoc UploadRemoteDataSource

* Added class level JavaDoc for UploadRepository

* Added JavaDocs for ThumbnailsAdapter

* Added JavaDocs for MediaLicensePresenter, CategoriesPresenter

* Removed null check on category query
* Show default catgeories based on image title and gps location when category text empty
* Allow search for empty category search

* Attached image scale listener to upload media image

* Bug fix, reduced the add description edit text clickable bound

* Added tooltip in Title in UploadMediaFragment

* BugFix recent categories

* Updated test methods

* Avoid memory leak, free the adpater in MediaLicenseFragment.onDestroyView

* BugFix Illegal State Exception in ViewpPagerAdapter

* Remove irrelevant comment

* merge conflict with strings (#3016)

* [WIP] Fixed duplicated subscriprion for 'addPropertyP180'

* added documentation

* fixed issue#3006* resolved issue#3004* fixed issue with categoryPresenterTest.kt

* send captions as labels

* fixed issue with the captions

* optimised imports

* added upload for captions

* minor changes

* resolved issue with uploading captions

* resolved issue with api call

* uploading captions to wikibase

* added some tests and documentation

* undo formatting changes

* uploaded captions as labels to wikibase

* minor changes

* resolved error with spinner adpater

* adding captions to local database

* Fixed issue#3035* fixed issue#3033* fixed issue#3005* fixed issue#3005* added search for depicts

* fixed issue with compile time

* fixe issue with project build

* fixed issue#3044* merged uploading depicts into branch

* uploading depicts

* rebased branch

* fixed crash due to depicts

* modified depicts interface

* Resolve merge conflicts

* Fix issues with API calls

* Use wikidata token

* searching depictions from depicts activity

* added some documentation and other changes

* fixed crash on selecting depictions

* sending wikidataentity id to upload depictions

* added changes after review

* Fixed issue with next button diabling in media detail activity

* added tests for depictions

* added all the unit tests and fixed few more issues

* showing captions in media details

* show captions in media details

* added documentations and worked upon review comments

* parsing response for depictions

* displaying captions and depiction QID in media detail

* added documentation

* fetching labels from QIDs

* captions working perfectly

* added documentations and code cleaning

* minor changes

* minor changes

* Showing items in explore

* added search via depicts in explore

* Added setOffscreenPageLimit in ViewPager

* show captions in explore

* show captions in home

* showing depict images under items

* added documentation and code refactoring

* enabled pagination in depiction search

* added some tests and media deatils in depiction detail activity

* fixed bug with back button in media

* fixed issue#3100* fixed issue#3098* fixed issue#3099* fixed issue#3104and#3098* showing captions in place of title in home and explore:media

* show captions in explore:depiction image list activity

* showing depictions in media details

* showing depictions in media details in production flavor

* fixed issue#3108and#3107* fix isse#3108* fixed issue#3110and#3112* fixed issue#3113* added documentations

* fixed issue#3076and#3109* added depiction search test

* fixed issue#3113* fixed issue#3111* fixed issue#3106* Showing items in explore

* minor change

* fixed issue#3118and some other changes

* added MVP in searchdepictionsfragment

* added mvp architecture

* added MVP architecture to DepictedImagesDetailsActivity

* added documentation and some minor changes

* added image to depicted item in search depictions

* * Use callbacks from renderer to fetch thumbnails

* adding fresco to load image in depictions

* adding thumbnail image for depictions in upload and explore

* pagination issues

* fixed issue --(showing previous depiction thumbnail in explore)

* Fixed the logic for pagination

* hide progress on success of last page

* adding sub-items and parent items to search in explore

* minor changes for review comments

* fixed issue#3119* fixed issue#3130* changes after review comments

* showing child classes for depictions

* Showing child items

* showing parent classes for depicted items

* adding localised search for parent and child items

* clicking on any child class or parent class should call the corresponding class items

* fixed issue of showing wrong thumbnail for P18 item

* fixed issue#3132* added test for DepictedImagesPresenter.java

* added unit tests for depicted items parent and child classes

* removed unused imports and code formatting

* fixed issue in search test

* deleting unnecessary .attach_pid9313 file

* deleting unnecessary .attach_pid9655 file

* added SearchDepictionsPresenterTest

* changes after review comments

* updates for review comments

* added more documentations

* removed unused code and classes and addressed spacing changes

* changes after review

* fixed build issues in the app

* worked on some review comments

* fixed issue:wrong thumbnail appears on wikidata item

* minor change

* worked on some review changes

* worked on review comments

* minor change

* addressed remaining review comments

* replaced hardcoded jpgs with pageIds to fetch captions

* added documentation

* removed hardcoded extensions and worked on review comments

* review comments

* [WIP] Added Depicts values for flavors

* [WIP] Minor fix

* [WIP] Minor fixes

* [WIP] Fixed URL

* [WIP] Fixed URLs and tokens

* Fixed MediaClient: added check for null in continuation store

* Fixed Media::from, changed return from null to new Media()

* [WIP] Merged with master

*Fix#3254Displays a proper message in explore section when no result for caption

* Updated Mockito to org.mockito:mockito-inline:2.13.0

* [WIP] Fixed tests after merging

* [WIP] Fixed some JUnit tests

* Fixed 'accessing from wrong thread' error

*#3222Delete manifest declaration of activity as fragment - stop casting MainActivity to CatgoryImagesCallback - fix tests

* Remove unit test not associated with any class - make CategoryPresenterTest more idiomatic

* fix compilation errors

Co-authored-by: Vitaly V. Pinchuk <vetal.978@gmail.com>
Co-authored-by: Ashish Kumar <ashishkumar468@gmail.com>
Co-authored-by: vanshikaarora <vanshikaa937@gmail.com>
Co-authored-by: Vivek Maskara <maskaravivek@gmail.com>
Co-authored-by: Vanshika Arora <34261945+vanshikaarora@users.noreply.github.com>
Co-authored-by: Somanshu and Himanshu <somanshS14@gmail.com>

*#3482Use Room in Structured Data branch - remove unused code (#3483)

*#3482Use Room in Structured Data branch - remove unused code

*#3482Use Room in Structured Data branch - fix unit test compilation

*#3482Use Room in Structured Data branch - add kdoc

*#3490Depiction Search in upload shows No Results before it gets results (#3491)

*#3482Use Room in Structured Data branch - remove unused code

*#3482Use Room in Structured Data branch - fix unit test compilation

*#3490Depiction Search in upload shows No Results before it gets results - stop showing error on subscription

*#3490Depiction Search in upload shows No Results before it gets results - update test cases

* make labels nullable too

* fix unit test compilation

*#3222remove lingering reference to depiction content provider

* Fix Crash

*#3222Merge master into Structured Data branch, fix conflicts - review fixes

* Fix method invocations

*#3529Captions/depictions are not saved to Commons (#3574)

*#3529Captions/depictions are not saved to Commons - make copy of list of depictionEntityIds - uncomment editBaseDepictsProperty - refactor upload related classes

*#3529Captions/depictions are not saved to Commons - fix wrong ArrayList usage

*#3529Captions/depictions are not saved to Commons - fix test

*#3503Remove Title/Caption From MediaUploadDetail and only use Caption/Description pairs  (#3578)

*#3529Captions/depictions are not saved to Commons - make copy of list of depictionEntityIds - uncomment editBaseDepictsProperty - refactor upload related classes

*#3529Captions/depictions are not saved to Commons - fix wrong ArrayList usage

*#3529Captions/depictions are not saved to Commons - fix test

*#3503Remove Title/Caption From MediaUploadDetail and only use Caption/Description pairs - replace title with the first MediaDetail

*#3503Remove Title/Caption From MediaUploadDetail and only use Caption/Description pairs - restore button disabling

*#3503Remove Title/Caption From MediaUploadDetail and only use Caption/Description pairs - fix nearby place

* fix thumbnail issue 3526 (#3617)

*#3222Merge master into Structured Data branch, fix conflicts - fix bad merge

*#3529Captions/depictions are not saved to Commons (#3588)

*#3529Captions/depictions are not saved to Commons - update flow to update appropriate data

*#3529Captions/depictions are not saved to Commons - fix invoking of setlabel

*#3529Captions/depictions are not saved to Commons - fix unit tests

*#3529Captions/depictions are not saved to Commons - use constant for@nAmed*#3529Captions/depictions are not saved to Commons - remove captions interface

*#3529Captions/depictions are not saved to Commons - delete unused Contribution fields - enforce Single Responsibility by using PageContentsCreator

*#3529Captions/depictions are not saved to Commons - prefix id with M - remove language from url and only add from Field

*#3529Captions/depictions are not saved to Commons - make edits of depictions and captions sequential

*#3529Captions/depictions are not saved to Commons - remove unused model fields

*#3529Captions/depictions are not saved to Commons - weaken type of categories - copy list on Contribution creation

*#3529Captions/depictions are not saved to Commons - mark Media fields private - weaken types - remove partly implemented fields

*#3529Captions/depictions are not saved to Commons - add semi colon

*#3529Captions/depictions are not saved to Commons - fix test

* Fix issue 3526 Unlike ""Items"" tab, ""child classes"" tab does not display description nor image thumbnail (#3619)

* fix thumbnail issue 3526

* Fix Description issue 3526

* revert changes on this file, not finished with it yet

* Fix Description for Child and Parent classes - issue 3526

* Remove conflict text in file

* Remove retrofit.HEAD import

* Incorporated review comments

* Fix issue 3137 (#3637)

* Fix issue 3137

* Remove import Timber

* Remove unnecessary space

*#3222Merge master into Structured Data branch, fix conflicts - revert logging

* Fix build

*#3661No Depictions Selected Dialog has reversed buttons - fix button order

* Revert ""#3661No Depictions Selected Dialog has reversed buttons - fix button order""

This reverts commitd8f9809.

*#3222Merge master into Structured Data branch, fix conflicts - remove unused methods/fields

*#3661No Depictions Selected Dialog has reversed buttons - fix button order (#3662)

*#3653Many Mnull requests - stop requesting captions for null ids (#3657)

*#3653Many Mnull requests - stop requesting captions for null ids

*#3653Many Mnull requests - move log line

*#3633[structured-data branch] In depictions selection screen, suggest nearby items  (#3650)

*#3633[structured-data branch] In depictions selection screen, suggest nearby items - for empty search terms show nearby items for depictions

*#3633[structured-data branch] In depictions selection screen, suggest nearby items - use linear radii progression to search for places

*#3666Crash when uploading on structured-data branch - revert cleanup of UploadController (#3670)

*#3222Merge Structured Data branch into master - fix caption rendering in new UI

*#3222Merge Structured Data branch into master - upgrade retrofit + okhttp

*#3664Stop using JsonObject on StructuredData (#3672)

*#3664Stop using JsonObject on StructuredData - remove usage in Media classes - remove from depicts client - create partial network models

*#3664Stop using JsonObject on StructuredData - allow partial mapping of polymorphic models by returning null in typeadapter

*#3664Stop using JsonObject on StructuredData - use models for editing depicts property

*#3664Stop using JsonObject on StructuredData - use models for sparql parent query

*#3664Stop using JsonObject on StructuredData - fix unit test compilation

*#3664Stop using JsonObject on StructuredData - unify sparql responses

*#3664Stop using JsonObject on StructuredData - minor cleanup of misnamed/unused/too broad visibility

*#3664Stop using JsonObject on StructuredData - share variable names and logic for the Sarql queries

*#3664Stop using JsonObject on StructuredData - add error logging

*#228Overwrite happens - fix extension of filename (#3689)

*#3675Rename buttons of the dialog box shown when no depiction is selected - remove ""yes, submit"" and ""no, go back"" (#3688)

*#3680Tip appears even when not tapping the (i) icon - use TextInputLayout EndIcons (#3683)

*#3680Tip appears even when not tapping the (i) icon - use TextInputLayout EndIcons

*#3680Tip appears even when not tapping the (i) icon - reaorder endIcon mode call so tinting is applied

* structured data - fix compilation

Co-authored-by: Vitaly V. Pinchuk <vetal.978@gmail.com>
Co-authored-by: Ashish Kumar <ashishkumar468@gmail.com>
Co-authored-by: vanshikaarora <vanshikaa937@gmail.com>
Co-authored-by: Vivek Maskara <maskaravivek@gmail.com>
Co-authored-by: Vanshika Arora <34261945+vanshikaarora@users.noreply.github.com>
Co-authored-by: Somanshu and Himanshu <somanshS14@gmail.com>
Co-authored-by: vvijayalakshmi21 <34595292+vvijayalakshmi21@users.noreply.github.com>",#3695,https://github.com/commons-app/apps-android-commons/pull/3695,memory leak
https://github.com/commons-app/apps-android-commons/commit/7a5dc77057f75a5fff24c1568304ef2bc0b65229,Refactor uploads (,"* Feature/refractor uploads [WIP] (#2887)

* Fix duplicate param information (#2515)

* Bug fix issue#2476(#2526)

* Added wikidataEntityID in all db versions, handled db.execSql via method runQuery

* Versioning and changelog for v2.10.2 (#2531)

* Update changelog.md

* Versioning for v2.10.2

* Update changelog.md

* Bugfix/issue 2580 (#2584)

* Corrected string placedholders in certain string files

* Corrected string placedholders in certain string files[Bugfix#2580]

* BugFix#2585(#2647)

* BugFix#2585* Added null checks on view in SearchImageFragment when updating views from external sources
* Disposed the disposables in SearchActivity and SearchImageFragment when no longer in active lifecycle

* use FragmentUtils to verify fragment active state

* Bug Fix issue#2648(#2678)

* Bug Fix issue#2648* Handled external storage permission before file download

* * Removed redudant check for permission in MediaDetailPagerFragment (Dexter already does that)
* Removed duplicate code in PermissionUtil$checkPermissionsAndPerformAction, used the existing function with conditional extra parameters

* string name typo correction

* BugFix issue#2652(#2706)

* Addded null check on bookmark before operating on it

* BugFix issue#2711(#2712)

* Added null checks in OkHttpJsonApiClient$searchImages MwQueryResponse

* BugFix#2718(#2719)

* Handled null auth cookies

*Fix#2791: NPE when nominating for deletion and leaving screen (#2792)

* Bug Fix issue#2789(#2790)

* Handled Illegal State Exception for non existent appropriate view parents in ViewUtils$showShortSnackbar

* BugFix#2720(#2831)

BugFix deprecated licenes#2720* ui fixes, wip, upload

* *Issue#2886, BugFix#2832[wip]
* updated UploadActivity code
* modified ui
* Updated UploadPresenterTest

* * updated interfaces names to follow names suffixed with Contract
* added test cases

* card view elevation

* view pager disabled swipe

* bug fix, duplicate image

* used existing non-swipable view pager

* Avoid image view resize with keyboard, added adjustPan and stateVisible as softinputMode for UploadActivity

* retain UploadBaseFragment instances on orientation changes

* * Added test cases for UploadMediaPresenter
* Injected io and main thread schedulers

* categories presenter test cased wip

* Added CategoriesPresenter test

* * Added the logic to show open map (with to be uploaded image's coordinates while uploading image)

* codacy suggested changes * added java docs

* Added travis_wait fot android-wait-for-emulator

* ranamed interface onResponseCallback to Callback

* * Added api to delete picture in UploadModel
* cleanUp in UploadModel. once upload has been initiated
* Removed unused methods from UploadModel and the corresponding test class

* * Added tests for UploadPresenter
* Travis suggested changes
* Addded copy previous title and description

* * Made the upload add descriptions visible when keyboard visible
* add description request focus only when user manually requests it

* Added JavaDocs, review suggested changes

* Fix dagger injection

* use DialogUtil to show info in descriptions

* use activity context for DialogUtil

* Minor changes

* Bug fix, reduced the add description edit text clickable bound (#2973)

* Bugfix/uploads (#3000)

* merged with master

* BugFix IllegalStateException
* setRetainState(true), not required with FragmentStatePagerAdapter
* Increase the ViewPager's Offscreen Limit, we want all the fragments to be active

* BugFix, clear selected categoris for previous upload session
* Clear Selected Categories
* Addded JavaDocs for CategoriesModel

* Code Formatting in app/src/main/java/fr/free/nrw/commons/upload/UploadModel.java

* Added class level JavaDoc UploadRemoteDataSource

* Added class level JavaDoc for UploadRepository

* Added JavaDocs for ThumbnailsAdapter

* Added JavaDocs for MediaLicensePresenter, CategoriesPresenter

* Removed null check on category query
* Show default catgeories based on image title and gps location when category text empty
* Allow search for empty category search

* Attached image scale listener to upload media image

* Bug fix, reduced the add description edit text clickable bound

* Fix memory leak (#3001)

* Bugfix/uploads (#3002)

* merged with master

* BugFix IllegalStateException
* setRetainState(true), not required with FragmentStatePagerAdapter
* Increase the ViewPager's Offscreen Limit, we want all the fragments to be active

* BugFix, clear selected categoris for previous upload session
* Clear Selected Categories
* Addded JavaDocs for CategoriesModel

* Code Formatting in app/src/main/java/fr/free/nrw/commons/upload/UploadModel.java

* Added class level JavaDoc UploadRemoteDataSource

* Added class level JavaDoc for UploadRepository

* Added JavaDocs for ThumbnailsAdapter

* Added JavaDocs for MediaLicensePresenter, CategoriesPresenter

* Removed null check on category query
* Show default catgeories based on image title and gps location when category text empty
* Allow search for empty category search

* Attached image scale listener to upload media image

* Bug fix, reduced the add description edit text clickable bound

* Added tooltip in Title in UploadMediaFragment

* BugFix recent categories

* Updated test methods

* Bugfix/uploads (#3011)

* merged with master

* BugFix IllegalStateException
* setRetainState(true), not required with FragmentStatePagerAdapter
* Increase the ViewPager's Offscreen Limit, we want all the fragments to be active

* BugFix, clear selected categoris for previous upload session
* Clear Selected Categories
* Addded JavaDocs for CategoriesModel

* Code Formatting in app/src/main/java/fr/free/nrw/commons/upload/UploadModel.java

* Added class level JavaDoc UploadRemoteDataSource

* Added class level JavaDoc for UploadRepository

* Added JavaDocs for ThumbnailsAdapter

* Added JavaDocs for MediaLicensePresenter, CategoriesPresenter

* Removed null check on category query
* Show default catgeories based on image title and gps location when category text empty
* Allow search for empty category search

* Attached image scale listener to upload media image

* Bug fix, reduced the add description edit text clickable bound

* Added tooltip in Title in UploadMediaFragment

* BugFix recent categories

* Updated test methods

* Avoid memory leak, free the adpater in MediaLicenseFragment.onDestroyView

* bugfix/uploads (#3012)

* merged with master

* BugFix IllegalStateException
* setRetainState(true), not required with FragmentStatePagerAdapter
* Increase the ViewPager's Offscreen Limit, we want all the fragments to be active

* BugFix, clear selected categoris for previous upload session
* Clear Selected Categories
* Addded JavaDocs for CategoriesModel

* Code Formatting in app/src/main/java/fr/free/nrw/commons/upload/UploadModel.java

* Added class level JavaDoc UploadRemoteDataSource

* Added class level JavaDoc for UploadRepository

* Added JavaDocs for ThumbnailsAdapter

* Added JavaDocs for MediaLicensePresenter, CategoriesPresenter

* Removed null check on category query
* Show default catgeories based on image title and gps location when category text empty
* Allow search for empty category search

* Attached image scale listener to upload media image

* Bug fix, reduced the add description edit text clickable bound

* Added tooltip in Title in UploadMediaFragment

* BugFix recent categories

* Updated test methods

* Avoid memory leak, free the adpater in MediaLicenseFragment.onDestroyView

* BugFix Illegal State Exception in ViewpPagerAdapter

* Remove irrelevant comment

* merge conflict with strings (#3016)",#2981,https://github.com/commons-app/apps-android-commons/pull/2981,memory leak
https://github.com/commons-app/apps-android-commons/commit/351109440ff2e796817c8ee385ea4617f66caa22,Fix memory leak(s). (,,#2674,https://github.com/commons-app/apps-android-commons/pull/2674,memory leak
https://github.com/commons-app/apps-android-commons/commit/8cd87ad148d1cf3072721bc5227595d09673cec9,Prevent memory leak(s) from QuizChecker. (,,#2656,https://github.com/commons-app/apps-android-commons/pull/2656,memory leak
https://github.com/commons-app/apps-android-commons/commit/b9274c033522eba4aafea48d8b4783acff640932,Fix memory leak in CategoryDetailsActivity (,,#1792,https://github.com/commons-app/apps-android-commons/pull/1792,memory leak
https://github.com/commons-app/apps-android-commons/commit/f3b450e020ccb661e976568008ed3417916674e5,Merge 2.9 release with master (,"* Fix memory leak due to wikidata edit listener (#2048)

* Fix bookmark crash fix (#2047)

* Fix bookmark crash fix

* Fix check for bookmark creator

* Bugfix#2042(#2056)

* Bugfix#2042* Added a snack with retry when api in AA fails
* Increased connection timeouts in okhttpclient builder

* added missing string resource

* Bugfix/duplicate categories (#2080)

* Increased timeout to 60 seconds

* Bugfix#1550* filter duplicate categories

* Fix crash because of inactive fragment UI (#2046)

* Fix crash because of inactive fragment UI

* Add java docs

* Add information icon action Fiixes#20552.9.0: the 'i' icon in nearby doesn't do anything (#2057)

* Localisation updates fromhttps://translatewiki.net.

* Remove unused mediawiki api dependency (#1991)

* Categories with pipe suffix (#1873)

* Bug fix issue#1826Changes made :
-Certain category names used to show suffixed with strings prefixed with pipe '|'. Removed everything after the pipe. As per the discussion on the thread, its safe to remove everything after the pipe, including the pipe

* review suggested changes
*Code formatting
*Extracted out the index of pipe in a variable
*Added issue link in comments

* Remove libraries section from README (#1988)

* Remove libraries section from README

* Add wiki link to ""libraries used"" to README

* Localisation updates fromhttps://translatewiki.net.

* Localisation updates fromhttps://translatewiki.net.

* Use alert dialog instead of popup window, for nearby information

* Revert irrelevant changes, sorry",#2174,https://github.com/commons-app/apps-android-commons/pull/2174,memory leak
https://github.com/commons-app/apps-android-commons/commit/b907a0a8f125820cfa66fe69403b34159f251250,Underscore in author name fix. (,"* Add ""rawUsername"" (without underscore instead of spaces) to SessionManager as Bundle to preserve string.

* Update UploadController.java

* Update UploadController.java

* Update for my fork (#4)

*  Added resaons in dropdown list

* Made changes

* Fixed Conflicts

*  Shifted strings to String.xml

* Localisation updates fromhttps://translatewiki.net.

* Remove unused mediawiki api dependency (#1991)

* Categories with pipe suffix (#1873)

* Bug fix issue#1826Changes made :
-Certain category names used to show suffixed with strings prefixed with pipe '|'. Removed everything after the pipe. As per the discussion on the thread, its safe to remove everything after the pipe, including the pipe

* review suggested changes
*Code formatting
*Extracted out the index of pipe in a variable
*Added issue link in comments

* Remove libraries section from README (#1988)

* Remove libraries section from README

* Add wiki link to ""libraries used"" to README

* Localisation updates fromhttps://translatewiki.net.

* Localisation updates fromhttps://translatewiki.net.

* Localisation updates fromhttps://translatewiki.net.

* Main screen ui changes,fixes#725Main screen UI overhaul (#1922)

* Delete Contributions Activity content to rewrite it

* Add layout for new Contributions Activity design

* Bind views

* Override auth cookie required

* Add tabs and fragments method

* Create ContributionsFragment which will hold ContributionsListFragment and MediaDetailsFragment

* Add NearbyFragment which will hold NearbyMapFragment and NearbyListFragment

* Add ContributionsActivityPagerAdapter inner class to manage view pager

* Create strings will be written on tabs for contributions and nearby

* Create setTabAndViewPagerSynchronisation method to sycn view pager and tab layout. If user swipe pages, tabs will also change (and vice versa)

* Add theme dependent background color for Drawer Layout of activity_contributions layout file

* Add theme dependent background color for tabs in main

* Create Contributions Fragment structure which will hold Media Detail Fragment and Contributions List Fragment

* Inifilate contributions list fragment view

* Create variables and methods to reuse and create Media Detils Fragment and Contributions List Fragment which will be inside Contribution Fragment

* Override cursor loader methods

* set MediaDetilsView fragment or ContributionListFragment according to users state

* Show details of an image when item is clicked

* Add delete and retry functionality, note: not tested yet

* Override media count methods

* Implement onBack Pressed settings

* Register and unregister datasetObservers

* Add contributin list fragment

* Add contribution list layout with FABs for camera and galerry

* Make sure we called onAuthAcquired from fragment after is is attached

* Create ContributionListViewUtils class to change visibility of views according to MediaDetailsFragment visiblity or their loading state

* Make number of uploads visible if contribution list is visible and number of uploads is uploaded. Progress bar is visible if contribution list is visible and number of uploads are uploading. Both invisible if Media Details Fragment is visible

* Return parent fragment instead of parent activity

* GetPagerFragment instead of getActivity since currently ContributionsFragment take over responsibility from ContributionsActivity

* Add contribution number next to tab text for contribution, as discussed in thread

* Remove number of uploads from contributions fragment since we moved it text of tab layout

* Add unread notifications asynctask to check unread notifications on background

* Save latest time user notification activity viewed

* Add shared preferences provider for latest notification activity visit time

* Add shared preferences provider for latest notification activity visit time

* Change notification icon (add blue dot) whenever a notification comes

* Recover notifications state on come back to contributions list from media details fragment

* Add date with year parameter to Notification class, because we will use it on comparasion of dates

* Check if user visited noifications activity after last notification came

* Add ation to notification icon

* Add nearby custom card view class

* Add card view to activity

* Add a button which will be displayed when nearby permission is not granted thus closest point can't be displayed on main screen. Besides, theme dependent click styles are added to button

* Add button click and permission request logic. Not: solve why location manager is null

* Inject location manager to activity instead

* Make card view dismissable with swip

* Add preference to disable or display closest nearby location

* Add a bugfix to set visibility of nearby notification cardview

* Add UI modifier methods to display notifications

* Modify getFromWikidataQuery method, so that based on the restunClosestResult boolean, we get only the closest nearby place, instead of fetching bunch of nearby places each time

* Make inner class vaariables public to reach them out of package

* Temporarily comment out icon setter methods since it crashes under API19

* Inject location manager

* Register location manager accoring to permission is given, then call nearby card view updater methods

* Change method calls loadAttractionsFromLocation by considering new parameter to decide between closest nearby call or an usual nearby call

* Add progress bar to nearby cardview

* Fix notifications string

* Hide nearby card view when Media Details is visible

* Change tab on nerby card view click

* Add hardcoded strings to strings.xml

* Move nearby activity to new nearby frament

* Add fragments for nearby list and map into outer nearby fragment

* Change options menu item according to tab view

* Make nearby card view invisible on swipe to nearby tab

* Use retained nearby fragment

* Add action to list sheet button

* This commit caused contrib list become invisible thus,
Revert ""Use retained nearby fragment""

This reverts commit86b3633.

* Make sure retained fragments are used for -both- nearby and contrib fragments

* Remove unrelated part added because of confusion, sorry

* Make sure nearbyNotificationCardView visibility works corrent

* Move nearby methods from nerby activity to nearby fragment, and add a lastLocationDuplicate variable to distinguish first time location from nearby fragment and nearby notification card on contributions activity

* Change activity.findViewByID lines with parentFragment.view.findViewById

* Remove toolbar from nearby fragment, since contributions activity already has

* Disable view pager swipe, since using map is very hard with swipe option of view pager

* Place progress bar inside nearby card notification to center

* Make sure using retaied nearby map fragment and nearby list fragment inside nearby fragment

* Update nearby notification content on slight location updates too, if it is first update after on resume. This prevented very long time loading progress bar

* Add case for no nearest pleace found, to prevent bug

* Prevent a possible bug can be caused from activity already killed

* Add click actions to FAB buttons in contributions list fragment. And arrange FAB margins

* Try to use a new location manager instance instead of using single object for both nearby map and nearby notification card view. Because location manager has a state mechanism which is designed to be called from a single point. When I call same methods from both nearby card view notification and nearby map, next update time of map etc. gets confused.

* Set radius to initial value on getFromWikidataQuery (when it is called for getting closest result to be used in nearby card view notification). Normally, algorithm increase radius, this technique works for nearby map but when it comes to finding nearest point, it can return null

* Add an enum to make card view visibility more stable, however, still there is a bug.

* Prevent some more nearby card view visilbility bugs, however still there is a bug

* Add some nullchecks for precaution

* Check nearby permission and refresh nearby view if nearby tab selected, othervise do nothing

* Send user to contrib tab if permission is denied after masrhmallow

* Change nearby fragment background so that progress bar is visible now

* Reduce code duplicate

* request location and gps permission from contribution nearby car view too

* Make sure using retained fragments

* Make sure Contrib list fragment is retained on orientation change

* Fix NPE at options menu

* Make fragment flag fancier, define it per fragment instance, instead of activity

* Fix Service leak and onsavedInstance NPE errrors both occured on orientation change

* Refresh nearby map on orientation change

* Remove unused imports, organise logs and add comments for NearbyMapFragment class

* Remove all references of nearby activity, since we don't use it anymore

* Remove unused imports, organise logs and add comments for Nearby Controller

* Remove unused imports, organise logs and add comments for NearbyFragment

* Remove unused imports, organise logs and add comments for NearbyNotificationCardView

* Change class name from Contributions Activity to Main Activity. Remove unused imports, organise logs and add comments for MainAtivity

* Remove extra spaces

* Remove unused imports and logs

* Remove unused imports, organise logs and add comments for LocationServiceManager

* Remove unused imports, organise logs and add comments for NotificationsActivity

* Remove unused imports, organise logs and add comments for Contributions Fragment

* bug fix nearby notification card dismiss/restore issue

* Change display_nearby_notification_summary varibale with Tap here to see the nearest place that needs pictures

* Add nearest place notification card dismiss toast

* Fix mistake made on previous commit, while fixing conflicts

* Set no data yet message invisible after contributions list is loaded

* Change FAB margins, according to Josephine's review

* Change FAB margins, according to Josephine's review

* Change contributions list background to white, to make FAB more visible

* Add infobutton with popup window next to nearby tba, to explain what does this tab do

* Change hambuger icon to back arrow when media details activity visible

* On back button clicked from nearby fragment, switch back to contributions fragment, instead of closing the app

* Check nearby card view visibility on coming back from media details activity

* Change notification icon with default vector supplied by android vector repos. If we use the one I drawn on inkscape, produced vector is not compatible with API level 19 and below. I couldn't find a proper solution, and decided to change icon

* Fix a possible NPE, caused by loation manager has Main activity reference after it is destroyed

* Change hardcoded string with var from string xml

* Make sure you listen storage permissions from contribution list framgent FABs

* Make sure you listened storage permissions for Neaby fragment buttons too

* Check NPEs causing crashes. Now it does not crash after coming back from settings activity

* Make notification icon compatible with <API19 devices, by drawing and using .png images

* Change back icon arrow vector with png

* Attempt to solve location manager caused memory leak

* Fix memory leaks and optimize imports

* Merge 2.9 release

* Small ui fixes on new main ui (#1995)

* Return to main activity from notifications activity on back button is pressed

* Make nearby info image a little far from nearby text, to prevent wrong clicks

* Bug fix issue#1999(#2000)

* Added a threshold on swipe, ie. if a swipe is considered a swipe only if it covers a distance of 100dp

* Multiple uploads with over haul (#1968)

* Added new upload activity that receives shared files from the gallery.  Cards show and hide, plus titles are correct.  Displayed thumbnails for the shared images

* Better handling of the view paging plus error handling for required fields.

* Code cleanup to make things more readable.

* Extracted a model from the category search fragment that can possibly be shared with the new upload activity.

* Added category selection to the combined upload screen.

* Cleanup before the home-stretch on the GUI.

* Adding license selection.

* Fixed build warnings + cleanup

* Start to support the dark theme.

* Work in progress to add quality checking.

* Fixing merge.

* GPSExtractor: optimized away the EXifInterface object

* Implemented submit functionality, temporarily fixed jacoco crash by disabling DUMMY UploadView object.

* Implemented uploading of categories along with the picture. The category screen now displays GPS and recent categories when nothing is searched.

* Implemented caching of files. Did some work on picture quality detection.

* Implemented too dark picture detection.

* Added a side card for zoom and map buttons along with pretty animations for stuff.

* Added duplicate image on commons checking and fixed files not getting proper file extensions in several places.

* Added support for map button and switched in-app upload buttons to UploadActivity

* Pretty pretty animations!

* Implemented zoom functionality for th background image. Just pinching on the image works instead of requiring buttons.

* Added multi-language descriptions with categories by region.

* Reimplemented the duplicate title checker and implemented a check against putting the same language twice in the description.

* Javadocs for Description and UploadPresenter, plus some general cleanup.

* Small code changes.

* Implemented login checks for the Upload screen.

* Implement receiving data from Nearby.

* Feature/permissions library (#1855)

* Added permission for Dexter, the runtime permission handling library

* [Preparing fir issue#1773] Added a utility function which would take the user to app settings screen where he could manually give us the required permission

* Added an alert dialog with positive and negative callback [Preparing fir issue#1773]

* Improvements in the way External Storage Permission is handled in MultipleShareActivity[Bugfix#1697]
1. Used dexter to handle the external storage permission
2. Behaviour changes : When user tries to share(uppload) images to commons via MultipleShareActivity, following decision tree is followed
	a. If the app has permission for external storage, normal upload operation is followed
	b. If the app does not has the permission for external storage, dexter is used to ask for the same
	c. If the user gives us the required permission, normal upload flow is proceeded
	d. If the doesnot gives us the required permission a rationale dialog is shown with the appropriate message to let him know why we need the permission
	e. If he presses okay, steps a-c are followed and if he presses cancel, we close the app.
	f. If while asking for permission, the user chooses never ask again, then next time he tries to upload an image via MSA, the rational dialog follows the app setting screen where he could manually give us the required permission and the onActivityResult of same is handled

* Added a Constants class to handle request and result codes from one place and other related constants common to the all app elements

* replaced hardcoded strings ok and cancel in DialogUtil to string resources

* init permission rationale dialog in activities onCreate

* Code formatting, updated access modifiers wherever required, added javadocs for new methods created

* *shifted constants to app class
*Added JavaDocs in PermissionUtils

* removed class REQUEST_CODES from CommonsApplication and instead put the enclosing constants in the App class itself

* Made Codacy happy.

* Abstarcted permission acquisition into new class DexterPermissionObtainer

* Fixed Nearby upload detection

* Migrated bad picture detection from AsyncTask to RxJava.

* Removed ShareActivity and related dead code

* Removed dead or duplicate code from FileProcessor

* Added info button to title EditText

* Fixed the add description button not disappearing.
Added ""Starting Upload"" toast.
Added link to the license on final screen.
Made it so that the map button is hidden when image lacks gps coords.

* Support in app multiple uploads

* Minor changes to fix build

* Changes to fix pending issues with upload flow

* Fix display of similar image fragment

* When uploading several files at once the date is missing#1854(#2)

* Bug fix issue#1854* updated ContributionsDao to save create date, which it was not doing currently [it was instead saving current date]
* UploadItem accepts are dateCreated param
* Added a function in UploadModel, getFileCreatedDate which tries to fetched the file creaction date from all possible content providers.

* Fix pending issues in upload flow

* Make multiple uploads work for Google Photos

* Fix default state for upload activity

* Fix keyboard state for license screen

* Fix descriptions for uploads

* wip

* Fix language spinner

* Fix visibility error on media details view (#2009)

* Localisation updates fromhttps://translatewiki.net.

* Update UploadController.java

* Repair gradle file

Repair gradle build file so that it uses buildToolsVersion buildToolsVersion.

* Repair gradle

repair gradle

* repair gradle

repair gradle to fix Travis

* Update UpdateModel()

sessionManager.getUserName() >> sessionManager.getRawUserName()

It will build new Contribution with stored username string without underscore.

* Add getAuthorName. In case getRawUserName return null as described in#1982this method, will return getUsername. Users with underscore issue will see the fix after re-log.",#1982,https://github.com/commons-app/apps-android-commons/pull/1982,memory leak
https://github.com/commons-app/apps-android-commons/commit/e0bd00bb9b35fd499cca840cafe8a4a4e279a6c5,"Main screen ui changes,","* Delete Contributions Activity content to rewrite it

* Add layout for new Contributions Activity design

* Bind views

* Override auth cookie required

* Add tabs and fragments method

* Create ContributionsFragment which will hold ContributionsListFragment and MediaDetailsFragment

* Add NearbyFragment which will hold NearbyMapFragment and NearbyListFragment

* Add ContributionsActivityPagerAdapter inner class to manage view pager

* Create strings will be written on tabs for contributions and nearby

* Create setTabAndViewPagerSynchronisation method to sycn view pager and tab layout. If user swipe pages, tabs will also change (and vice versa)

* Add theme dependent background color for Drawer Layout of activity_contributions layout file

* Add theme dependent background color for tabs in main

* Create Contributions Fragment structure which will hold Media Detail Fragment and Contributions List Fragment

* Inifilate contributions list fragment view

* Create variables and methods to reuse and create Media Detils Fragment and Contributions List Fragment which will be inside Contribution Fragment

* Override cursor loader methods

* set MediaDetilsView fragment or ContributionListFragment according to users state

* Show details of an image when item is clicked

* Add delete and retry functionality, note: not tested yet

* Override media count methods

* Implement onBack Pressed settings

* Register and unregister datasetObservers

* Add contributin list fragment

* Add contribution list layout with FABs for camera and galerry

* Make sure we called onAuthAcquired from fragment after is is attached

* Create ContributionListViewUtils class to change visibility of views according to MediaDetailsFragment visiblity or their loading state

* Make number of uploads visible if contribution list is visible and number of uploads is uploaded. Progress bar is visible if contribution list is visible and number of uploads are uploading. Both invisible if Media Details Fragment is visible

* Return parent fragment instead of parent activity

* GetPagerFragment instead of getActivity since currently ContributionsFragment take over responsibility from ContributionsActivity

* Add contribution number next to tab text for contribution, as discussed in thread

* Remove number of uploads from contributions fragment since we moved it text of tab layout

* Add unread notifications asynctask to check unread notifications on background

* Save latest time user notification activity viewed

* Add shared preferences provider for latest notification activity visit time

* Add shared preferences provider for latest notification activity visit time

* Change notification icon (add blue dot) whenever a notification comes

* Recover notifications state on come back to contributions list from media details fragment

* Add date with year parameter to Notification class, because we will use it on comparasion of dates

* Check if user visited noifications activity after last notification came

* Add ation to notification icon

* Add nearby custom card view class

* Add card view to activity

* Add a button which will be displayed when nearby permission is not granted thus closest point can't be displayed on main screen. Besides, theme dependent click styles are added to button

* Add button click and permission request logic. Not: solve why location manager is null

* Inject location manager to activity instead

* Make card view dismissable with swip

* Add preference to disable or display closest nearby location

* Add a bugfix to set visibility of nearby notification cardview

* Add UI modifier methods to display notifications

* Modify getFromWikidataQuery method, so that based on the restunClosestResult boolean, we get only the closest nearby place, instead of fetching bunch of nearby places each time

* Make inner class vaariables public to reach them out of package

* Temporarily comment out icon setter methods since it crashes under API19

* Inject location manager

* Register location manager accoring to permission is given, then call nearby card view updater methods

* Change method calls loadAttractionsFromLocation by considering new parameter to decide between closest nearby call or an usual nearby call

* Add progress bar to nearby cardview

* Fix notifications string

* Hide nearby card view when Media Details is visible

* Change tab on nerby card view click

* Add hardcoded strings to strings.xml

* Move nearby activity to new nearby frament

* Add fragments for nearby list and map into outer nearby fragment

* Change options menu item according to tab view

* Make nearby card view invisible on swipe to nearby tab

* Use retained nearby fragment

* Add action to list sheet button

* This commit caused contrib list become invisible thus,
Revert ""Use retained nearby fragment""

This reverts commit86b3633.

* Make sure retained fragments are used for -both- nearby and contrib fragments

* Remove unrelated part added because of confusion, sorry

* Make sure nearbyNotificationCardView visibility works corrent

* Move nearby methods from nerby activity to nearby fragment, and add a lastLocationDuplicate variable to distinguish first time location from nearby fragment and nearby notification card on contributions activity

* Change activity.findViewByID lines with parentFragment.view.findViewById

* Remove toolbar from nearby fragment, since contributions activity already has

* Disable view pager swipe, since using map is very hard with swipe option of view pager

* Place progress bar inside nearby card notification to center

* Make sure using retaied nearby map fragment and nearby list fragment inside nearby fragment

* Update nearby notification content on slight location updates too, if it is first update after on resume. This prevented very long time loading progress bar

* Add case for no nearest pleace found, to prevent bug

* Prevent a possible bug can be caused from activity already killed

* Add click actions to FAB buttons in contributions list fragment. And arrange FAB margins

* Try to use a new location manager instance instead of using single object for both nearby map and nearby notification card view. Because location manager has a state mechanism which is designed to be called from a single point. When I call same methods from both nearby card view notification and nearby map, next update time of map etc. gets confused.

* Set radius to initial value on getFromWikidataQuery (when it is called for getting closest result to be used in nearby card view notification). Normally, algorithm increase radius, this technique works for nearby map but when it comes to finding nearest point, it can return null

* Add an enum to make card view visibility more stable, however, still there is a bug.

* Prevent some more nearby card view visilbility bugs, however still there is a bug

* Add some nullchecks for precaution

* Check nearby permission and refresh nearby view if nearby tab selected, othervise do nothing

* Send user to contrib tab if permission is denied after masrhmallow

* Change nearby fragment background so that progress bar is visible now

* Reduce code duplicate

* request location and gps permission from contribution nearby car view too

* Make sure using retained fragments

* Make sure Contrib list fragment is retained on orientation change

* Fix NPE at options menu

* Make fragment flag fancier, define it per fragment instance, instead of activity

* Fix Service leak and onsavedInstance NPE errrors both occured on orientation change

* Refresh nearby map on orientation change

* Remove unused imports, organise logs and add comments for NearbyMapFragment class

* Remove all references of nearby activity, since we don't use it anymore

* Remove unused imports, organise logs and add comments for Nearby Controller

* Remove unused imports, organise logs and add comments for NearbyFragment

* Remove unused imports, organise logs and add comments for NearbyNotificationCardView

* Change class name from Contributions Activity to Main Activity. Remove unused imports, organise logs and add comments for MainAtivity

* Remove extra spaces

* Remove unused imports and logs

* Remove unused imports, organise logs and add comments for LocationServiceManager

* Remove unused imports, organise logs and add comments for NotificationsActivity

* Remove unused imports, organise logs and add comments for Contributions Fragment

* bug fix nearby notification card dismiss/restore issue

* Change display_nearby_notification_summary varibale with Tap here to see the nearest place that needs pictures

* Add nearest place notification card dismiss toast

* Fix mistake made on previous commit, while fixing conflicts

* Set no data yet message invisible after contributions list is loaded

* Change FAB margins, according to Josephine's review

* Change FAB margins, according to Josephine's review

* Change contributions list background to white, to make FAB more visible

* Add infobutton with popup window next to nearby tba, to explain what does this tab do

* Change hambuger icon to back arrow when media details activity visible

* On back button clicked from nearby fragment, switch back to contributions fragment, instead of closing the app

* Check nearby card view visibility on coming back from media details activity

* Change notification icon with default vector supplied by android vector repos. If we use the one I drawn on inkscape, produced vector is not compatible with API level 19 and below. I couldn't find a proper solution, and decided to change icon

* Fix a possible NPE, caused by loation manager has Main activity reference after it is destroyed

* Change hardcoded string with var from string xml

* Make sure you listen storage permissions from contribution list framgent FABs

* Make sure you listened storage permissions for Neaby fragment buttons too

* Check NPEs causing crashes. Now it does not crash after coming back from settings activity

* Make notification icon compatible with <API19 devices, by drawing and using .png images

* Change back icon arrow vector with png

* Attempt to solve location manager caused memory leak

* Fix memory leaks and optimize imports

* Merge 2.9 release",#1922,https://github.com/commons-app/apps-android-commons/pull/1922,memory leak
https://github.com/commons-app/apps-android-commons/commit/02908a678b64628291a0845c67c0aba4ad3058ee,"Main screen ui changes,","* Delete Contributions Activity content to rewrite it

* Add layout for new Contributions Activity design

* Bind views

* Override auth cookie required

* Add tabs and fragments method

* Create ContributionsFragment which will hold ContributionsListFragment and MediaDetailsFragment

* Add NearbyFragment which will hold NearbyMapFragment and NearbyListFragment

* Add ContributionsActivityPagerAdapter inner class to manage view pager

* Create strings will be written on tabs for contributions and nearby

* Create setTabAndViewPagerSynchronisation method to sycn view pager and tab layout. If user swipe pages, tabs will also change (and vice versa)

* Add theme dependent background color for Drawer Layout of activity_contributions layout file

* Add theme dependent background color for tabs in main

* Create Contributions Fragment structure which will hold Media Detail Fragment and Contributions List Fragment

* Inifilate contributions list fragment view

* Create variables and methods to reuse and create Media Detils Fragment and Contributions List Fragment which will be inside Contribution Fragment

* Override cursor loader methods

* set MediaDetilsView fragment or ContributionListFragment according to users state

* Show details of an image when item is clicked

* Add delete and retry functionality, note: not tested yet

* Override media count methods

* Implement onBack Pressed settings

* Register and unregister datasetObservers

* Add contributin list fragment

* Add contribution list layout with FABs for camera and galerry

* Make sure we called onAuthAcquired from fragment after is is attached

* Create ContributionListViewUtils class to change visibility of views according to MediaDetailsFragment visiblity or their loading state

* Make number of uploads visible if contribution list is visible and number of uploads is uploaded. Progress bar is visible if contribution list is visible and number of uploads are uploading. Both invisible if Media Details Fragment is visible

* Return parent fragment instead of parent activity

* GetPagerFragment instead of getActivity since currently ContributionsFragment take over responsibility from ContributionsActivity

* Add contribution number next to tab text for contribution, as discussed in thread

* Remove number of uploads from contributions fragment since we moved it text of tab layout

* Add unread notifications asynctask to check unread notifications on background

* Save latest time user notification activity viewed

* Add shared preferences provider for latest notification activity visit time

* Add shared preferences provider for latest notification activity visit time

* Change notification icon (add blue dot) whenever a notification comes

* Recover notifications state on come back to contributions list from media details fragment

* Add date with year parameter to Notification class, because we will use it on comparasion of dates

* Check if user visited noifications activity after last notification came

* Add ation to notification icon

* Add nearby custom card view class

* Add card view to activity

* Add a button which will be displayed when nearby permission is not granted thus closest point can't be displayed on main screen. Besides, theme dependent click styles are added to button

* Add button click and permission request logic. Not: solve why location manager is null

* Inject location manager to activity instead

* Make card view dismissable with swip

* Add preference to disable or display closest nearby location

* Add a bugfix to set visibility of nearby notification cardview

* Add UI modifier methods to display notifications

* Modify getFromWikidataQuery method, so that based on the restunClosestResult boolean, we get only the closest nearby place, instead of fetching bunch of nearby places each time

* Make inner class vaariables public to reach them out of package

* Temporarily comment out icon setter methods since it crashes under API19

* Inject location manager

* Register location manager accoring to permission is given, then call nearby card view updater methods

* Change method calls loadAttractionsFromLocation by considering new parameter to decide between closest nearby call or an usual nearby call

* Add progress bar to nearby cardview

* Fix notifications string

* Hide nearby card view when Media Details is visible

* Change tab on nerby card view click

* Add hardcoded strings to strings.xml

* Move nearby activity to new nearby frament

* Add fragments for nearby list and map into outer nearby fragment

* Change options menu item according to tab view

* Make nearby card view invisible on swipe to nearby tab

* Use retained nearby fragment

* Add action to list sheet button

* This commit caused contrib list become invisible thus,
Revert ""Use retained nearby fragment""

This reverts commit86b3633.

* Make sure retained fragments are used for -both- nearby and contrib fragments

* Remove unrelated part added because of confusion, sorry

* Make sure nearbyNotificationCardView visibility works corrent

* Move nearby methods from nerby activity to nearby fragment, and add a lastLocationDuplicate variable to distinguish first time location from nearby fragment and nearby notification card on contributions activity

* Change activity.findViewByID lines with parentFragment.view.findViewById

* Remove toolbar from nearby fragment, since contributions activity already has

* Disable view pager swipe, since using map is very hard with swipe option of view pager

* Place progress bar inside nearby card notification to center

* Make sure using retaied nearby map fragment and nearby list fragment inside nearby fragment

* Update nearby notification content on slight location updates too, if it is first update after on resume. This prevented very long time loading progress bar

* Add case for no nearest pleace found, to prevent bug

* Prevent a possible bug can be caused from activity already killed

* Add click actions to FAB buttons in contributions list fragment. And arrange FAB margins

* Try to use a new location manager instance instead of using single object for both nearby map and nearby notification card view. Because location manager has a state mechanism which is designed to be called from a single point. When I call same methods from both nearby card view notification and nearby map, next update time of map etc. gets confused.

* Set radius to initial value on getFromWikidataQuery (when it is called for getting closest result to be used in nearby card view notification). Normally, algorithm increase radius, this technique works for nearby map but when it comes to finding nearest point, it can return null

* Add an enum to make card view visibility more stable, however, still there is a bug.

* Prevent some more nearby card view visilbility bugs, however still there is a bug

* Add some nullchecks for precaution

* Check nearby permission and refresh nearby view if nearby tab selected, othervise do nothing

* Send user to contrib tab if permission is denied after masrhmallow

* Change nearby fragment background so that progress bar is visible now

* Reduce code duplicate

* request location and gps permission from contribution nearby car view too

* Make sure using retained fragments

* Make sure Contrib list fragment is retained on orientation change

* Fix NPE at options menu

* Make fragment flag fancier, define it per fragment instance, instead of activity

* Fix Service leak and onsavedInstance NPE errrors both occured on orientation change

* Refresh nearby map on orientation change

* Remove unused imports, organise logs and add comments for NearbyMapFragment class

* Remove all references of nearby activity, since we don't use it anymore

* Remove unused imports, organise logs and add comments for Nearby Controller

* Remove unused imports, organise logs and add comments for NearbyFragment

* Remove unused imports, organise logs and add comments for NearbyNotificationCardView

* Change class name from Contributions Activity to Main Activity. Remove unused imports, organise logs and add comments for MainAtivity

* Remove extra spaces

* Remove unused imports and logs

* Remove unused imports, organise logs and add comments for LocationServiceManager

* Remove unused imports, organise logs and add comments for NotificationsActivity

* Remove unused imports, organise logs and add comments for Contributions Fragment

* bug fix nearby notification card dismiss/restore issue

* Change display_nearby_notification_summary varibale with Tap here to see the nearest place that needs pictures

* Add nearest place notification card dismiss toast

* Fix mistake made on previous commit, while fixing conflicts

* Set no data yet message invisible after contributions list is loaded

* Change FAB margins, according to Josephine's review

* Change FAB margins, according to Josephine's review

* Change contributions list background to white, to make FAB more visible

* Add infobutton with popup window next to nearby tba, to explain what does this tab do

* Change hambuger icon to back arrow when media details activity visible

* On back button clicked from nearby fragment, switch back to contributions fragment, instead of closing the app

* Check nearby card view visibility on coming back from media details activity

* Change notification icon with default vector supplied by android vector repos. If we use the one I drawn on inkscape, produced vector is not compatible with API level 19 and below. I couldn't find a proper solution, and decided to change icon

* Fix a possible NPE, caused by loation manager has Main activity reference after it is destroyed

* Change hardcoded string with var from string xml

* Make sure you listen storage permissions from contribution list framgent FABs

* Make sure you listened storage permissions for Neaby fragment buttons too

* Check NPEs causing crashes. Now it does not crash after coming back from settings activity

* Make notification icon compatible with <API19 devices, by drawing and using .png images

* Change back icon arrow vector with png

* Attempt to solve location manager caused memory leak

* Fix memory leaks and optimize imports

* Merge 2.9 release",#1922,https://github.com/commons-app/apps-android-commons/pull/1922,memory leak
https://github.com/commons-app/apps-android-commons/commit/35f05be8df4e5bfea09baac6683a0eab83ae092a,fix memory leaks (they happened due to hiding keyboard) and lint null pointer warnings in the same code (,… pointer warnings in the same code (#1471),#1471,https://github.com/commons-app/apps-android-commons/pull/1471,memory leak
https://github.com/commons-app/apps-android-commons/commit/482b06ccf0fcab29b48a49867a895582178d0a69,Hot fix connectivity leak (,"* Fixed bug#1399* Changed visibility from visible to gone

* Changed behaviour according to review

* Changed bottom sheet visibility from visible to gone

* Fix memory leak causing usage of activity as context",#1432,https://github.com/commons-app/apps-android-commons/pull/1432,memory leak
https://github.com/commons-app/apps-android-commons/commit/ea57855dcc6de40aeb8711b8ed4e0cc4dc48fcb7,"Fix memory leak C, I hope",,,,memory leak
https://github.com/commons-app/apps-android-commons/commit/fed215a37a7e8c8d64c5b653c3a2aa7b6632b2c3,Crash fix for rotate in media detail view,"We were crashing when rotating in the detail view, because the detail
view fragment had assumed that its parent activity had already loaded
up its cursor and such before it got created -- an assumption which
fails dramatically when rotating, or switching away and back after
we got paged out of memory.

Check whether we got an object, and if not ask the parent to ping us
when it's done loading.

Also tweaked one of the older delay hacks to avoid a second crash
related to the pager's adapter.

Change-Id: Ib91c0fef0d8ffd0e6b8e0e4874f3ee9be3e9cf34",,,out of memory
https://github.com/commons-app/apps-android-commons/commit/3400d6e426834684d4cda9c7656f295d4459261e,bug 50733: Fix OOM error on low-memory devices,"LRU bitmap cache ate too much memory on low-memory devices like the
old Nexus One and some of our testers' devices. Use the in memory
cache only for higher end devices

Change-Id: Ibe238c82d5891a8a25bddcab1ae3d3738a044c41",,, oom 
https://github.com/Slion/Fulguris/commit/927613da34442fbb21572347127af40d4a1b758e,Replace Guava BloomFilter with custom BloomFilter implementation backed by Murmur hashing algorithm,"…ed by Murmur hashing algorithm

- Motivated by build problems and APK size increase caused by Guava
- Added BloomFilter interface
- Added DefaultBloomFilter implementation
- Added HashingAlgorithm interface
- Added MurmurHash implementation from OSS project and MurmurHashStringAdapter
- Added lowerHalf and upperHalf extension functions for integer bit operations.
- Added tests for DefaultBloomFilter and integer extensions",,,apk size
https://github.com/Slion/Fulguris/commit/778b2229f83cf82a884af8e59d4f2554b90b5826,improving proguard rules to reduce apk size,,,,apk size
https://github.com/Slion/Fulguris/commit/15cb950af368a474e880671e12656bbebb131dcf,Fixed a memory leak,,,,memory leak
https://github.com/Slion/Fulguris/commit/dffd572afc4ca57d892a1d4acce949f5577c32c5,Fix memory leaks caused by the android framework,,,,memory leak
https://github.com/Slion/Fulguris/commit/7a256707a79c0c8b397e235ec7c6ce77432f6717,"Cleaned up search suggestions code, fixed potential memory leaks",,,,memory leak
https://github.com/Slion/Fulguris/commit/2f8feead719baa9622bbcd1ff2429001c3deb13b,Fixed another IO not closed resource leak,,,,resource leak
https://github.com/Slion/Fulguris/commit/8132b34bbf67cf224f254dfb313ee621a52997b4,"Fixed potential memory leak, moved variables",,,,memory leak
https://github.com/Slion/Fulguris/commit/7486ebe3c4b7f9a50baa10b0a5adc5eb4b478de3,"Fixed memory leak, removed useless log statement",,,,memory leak
https://github.com/Slion/Fulguris/commit/e2d46bdae2dfc62fdb42792fdb9b2c0cdef57f83,"Fixed StrictMode problems, created a reactive implementation class, fixed potential NPEs, fixed memory leak","…ixed potential NPEs, fixed memory leak

* Fixed places where IO was done on main thread
* Created reactive class Observable so that work could easily be done on
other threads
* Fixed potential NPEs in LightningView
* Fixed memory leak where ConnectivityManager was leaking activity",,,memory leak
https://github.com/Slion/Fulguris/commit/ee52e00c83907dacb5201351a829150b980ae46c,Fixed memory leak caused by incorrectly destroying the WebView before it was removed from its parent,… it was removed from its parent,,,memory leak
https://github.com/Slion/Fulguris/commit/cb19ce2d0ad6a4e0b0df184238d289107dad5fae,Fixed memory leak in IncognitoActivity,,,,memory leak
https://github.com/Slion/Fulguris/commit/7aaf6d17714b58a0f604574bf7a576c76d0f1c1a,Fixed memory leak,,,,memory leak
https://github.com/Slion/Fulguris/commit/72ee377a351549faa75423d833cde04e81a8ca72,Fixed more bugs recently introduced. Hardened asynctasks against memory leaks. Fixed some other stuff,…ry leaks. Fixed some other stuff,,,memory leak
https://github.com/Slion/Fulguris/commit/5dff2db5df1079d2de508cd5ef867c2f8b05b7ac,"Add LeakCanary library, fix a few memory leaks",,,,memory leak
https://github.com/Slion/Fulguris/commit/d8b8d2c047914d73eca611971c75c9c96d3511fe,"Moved proxy code to utility class, remove proxy from lite version to reduce apk size",…reduce apk size,,,apk size
https://github.com/Slion/Fulguris/commit/d60fe82b4adcbb53e92b1130471bf3d786ddc723,"Fix lint problems and other code style problems, also fixed sluggish navigation drawer issues",…navigation drawer issues,,,sluggish
https://github.com/Slion/Fulguris/commit/deed4b7f3c487102be099c77a77064dd21a8beae,2.4,"- added ability to remember tabs that were open when the browser is
closed from low memory
- updated german translation (thanks so much)
- fixed some unresponsiveness in froyo, for some reason
webview.resumeTimers() needed to be called even when the browser
restarted
- changed the UI in settings a bit (more HOLOish)",,,unresponsive
https://github.com/CatimaLoyalty/Android/commit/9981a64bcdac9558d0f59ca8ba9e8788b0aa553d,gradle.properties: Sync with official template,"* Specify JVM memory to avoid OOM errors
* Drop nonTransitiveRClass and nonFinalResIds as they are true by default

Signed-off-by: Aayush Gupta <aayushgupta219@gmail.com>",,, oom 
https://github.com/CatimaLoyalty/Android/commit/a37e99ce394253c96bc68a5adfce073b4335233d,Prevent OOM on scanning large images for barcode,,,, oom 
https://github.com/CatimaLoyalty/Android/commit/1f76809300cc81e3db441ecd47de7c34f4073013,Memory leak and spotBugs fixes,,,,memory leak
https://github.com/lihenggui/blocker/commit/d06b29a530139757cc0bec80b572d8968192468f,Merge pull request,Downgrade dependency to avoid ANR in the app list,#124,https://github.com/lihenggui/blocker/pull/124, ANR 
https://github.com/lesspass/lesspass/commit/88463ccbc70999432b77aee7a5a1e1ede762f13b,commit build files because of memory leak during npm install,,,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/f279c5eba035d018a8805a65a8a245b8b8d2ea2e,midend_request_keys: fix memory leak of a game_params.,"Thanks to Steffen Bauer for spotting this. The call to
midend_get_params(me) was making a duplicate of me->params, and
nothing was freeing it.

Since the game_params is passed to request_keys as a const pointer, it
should be safe to pass me->params itself, so that instead of adding a
free, we can remove the unnecessary allocation.",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/7333d27b0c9d85d7fec41c2ca60dbea740767451,Fix a few minor memory leaks.,Thanks to Jeremy Stephens for reporting them.,,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/b293605ce34bd28dea013c25ed801e123b47e98c,hat-test: fix memory leaks.,"I ran this again today with Leak Sanitiser on, which complained.",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/777dbffd4219be87190803be876ec3924aa92aee,Turn off Leak Sanitiser in the icons build.,"If you configure a Linux build of Puzzles with -fsanitize=address, it
will fail during the icons build, because the icon-maker programs leak
memory when they're run, and by default, this causes ASan to report
all the memory leaks at the end of the program *and then exit 1*.

I don't think 'just fix the memory leaks' is a viable answer. _Some_
of the leaks come from the Puzzles code, and could be fixed by being
more punctilious about freeing everything before exiting (although
that is not necessary for any actually sensible purpose and would
_only_ serve to stop Leak Sanitiser complaining). But some are outside
the Puzzles code completely, apparently from fontconfig. So even if we
fixed all the leaks we could find, we wouldn't prevent the failure
status.

When I want to build with ASan, I've been working around this by
setting ASAN_OPTIONS=detect_leaks=0 in the environment before running
the build command. Easier all round if we just do that _inside_ the
cmake setup.",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/4e09175fdaaffc0483fc9bf767311268794d956c,Fix memory leak in midend_game_id_int(),"The ""par"" string wasn't getting freed on some error paths.  Fixed by
freeing it immediately after its last use, which is before any of the
error paths.",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/a7e738aceb36e4a70d41cf09a74b2d7a3af6cbe0,Call deallocate() in matching.c test routines,"This is mostly so that the function is used at all, but I've also
removed another memory leak from --autotest mode to make it apparently
leak-free.  The testing from standard input mode has more leaks than I
want to fix.",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/bb31efdbc91495a4385ca0afffa4c8bb8f564d7b,Fix memory leaks in Keen's validate_desc(),"Keen uses a DSF to validate its game descriptions and almost always
failed to free it, even when the validation succeeded.",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/1dc1ed786fda790f60f2fe9f8e7c404c73ae64da,Fix memory leak in convert_tilesize,"If old_dpr == new_dpr, convert_tilesize returns early without freeing
defaults.  Move the initialisation of defaults after this special
case.",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/115edab4597ba526f9afaa659e4c968db026658f,js: Remove alpha channel from almost all our canvases,"Specifying the { alpha: false } option when creating a rendering context
tells the browser that we won't use transparency, and the standard
puzzle canvases, along with blitters, are all opaque.  No obvious
effect, but the MDN suggests that this should reduce CPU usage.

The one exception here is the resize handle, which actually is
transparent.",,,cpu usage
https://github.com/chrisboyle/sgtpuzzles/commit/cd338a1a35394a7abfd517569e908b54bf657aaa,Unruly: Fix memory leak in dup_game(),"The common structure is ref-counted and dup_game() bumps the reference
count rather than copying it.  However, blank_state() always allocates
a new instance.  Add a parameter to control whether blank_state()
allocates it.

Fixes:47cec54(""Unruly, Group: reference-count the 'immutable' array."")",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/d022a1c11c185027fad937cbe9cd2c318025ee04,Tracks: fix a small memory leak.,Spotted by Leak Sanitiser while I was testing the standalone solver.,,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/7f00725c978bf79de91951f143cdfd2f9173041d,Fix a handful of memory leaks in the midend.,"I happened to notice these when running dominosa --generate under Leak
Sanitiser.",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/96b6f55ec834471414576f2ea761f0a29bd47cdc,Fix two memory leaks in GTK frontend.,"- The file selector for loading and saving gets a g_free().
 - The handling of saving (menu_save_event) gets an sfree().
 - It's also slightly restructured to prevent future errors.
 - menu_load_event was already structured to prevent this error.
 - The OLD_FILESEL code seems to not need a g_free().",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/87b2758b9c5459eae825d0642eb4c057e8c5c6fd,Fix a memory leak in Range's find_errors.,"Only occurred in invalid instances, such as 3x1:1b when you put a
black in the middle square.",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/c94afe9cd6ff0ad719798d7fd6fb842a336f66ed,Adjust Keen's grid generation to constrain the maximum size of clue,"blocks, because 'make test' showed up very large blocks as an
occasional slowdown factor in game generation (takes too long to
iterate over all possibilities). This is a good idea in any case,
because really big multiplicative clue numbers have trouble fitting in
the square.

[originally from svn r9827]",,,slowdown
https://github.com/chrisboyle/sgtpuzzles/commit/698517210ab4fe284c9a0826a34789ed63944e78,Adjust Keen's grid generation to constrain the maximum size of clue,"blocks, because 'make test' showed up very large blocks as an
occasional slowdown factor in game generation (takes too long to
iterate over all possibilities). This is a good idea in any case,
because really big multiplicative clue numbers have trouble fitting in
the square.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@9827 cda61777-01e9-0310-a592-d414129be87e",,,slowdown
https://github.com/chrisboyle/sgtpuzzles/commit/4bab5e531b4b49c9b41d2140dd570d05947e7c40,Fix two memory leaks reported by Tiago Dionizio in recent Loopy,"development.

[originally from svn r9163]",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/ba1e5a9e4df5a37eb8997603081a64e99ca139ad,Fix two memory leaks reported by Tiago Dionizio in recent Loopy,"development.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@9163 cda61777-01e9-0310-a592-d414129be87e",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/f1ad38971c4918c3b0818254caa57c21c5406642,Memory leak fixes from Jonas Koelker.,[originally from svn r9001],,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/0bf13ebb56ebbccfc3f6d27eb7c9432590498bd6,Memory leak fixes from Jonas Koelker.,git-svn-id: svn://svn.tartarus.org/sgt/puzzles@9001 cda61777-01e9-0310-a592-d414129be87e,,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/3c6280ef8b370ebbf9f5d15a7622d63462a8f3ed,Memory leak fix from James H.,[originally from svn r8850],,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/c8f9942311470d8e7d1d3cdac5cdd3f646daeb03,Memory leak fix from James H.,git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8850 cda61777-01e9-0310-a592-d414129be87e,,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/7c3413a2f2ab0d22f4e43c92a9c215bc24f88baf,Memory leak fix from James H.,[originally from svn r8815],,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/1d48315370a382d2fd1cd0f037044846191c2392,Memory leak fix from James H.,git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8815 cda61777-01e9-0310-a592-d414129be87e,,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/8ec398b4814840960db06101d70962b9949cef8e,Memory leak fix from Tiago Dionizio: whenever we free the midend's,"collection of game states, we should also free the move strings from
which they were constructed.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@8805 cda61777-01e9-0310-a592-d414129be87e",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/4dfd8512ab278dd9f68475ace818b29e7e7c17af,Memory leak fix from Tiago Dionizio: whenever we free the midend's,"collection of game states, we should also free the move strings from
which they were constructed.

[originally from svn r8805]",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/99e024bc658a960fca1a388b0401dc51c889bba7,Fix some probable memory leaks; report load failures after game identification and with a proper message box,…ification and with a proper message box,,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/51fe27e2b4541feb03371f9e2289bea76af22c81,Improve cancelability of most games.,"""from the I-wish-there-was-a-better-way-to-do-this dept.""

Scatter checks for cancellation through new_game_desc in all the puzzles with wild abandon. There are probably too many. I have only vaguely checked that this is cancelable enough, and not checked at all whether I've inserted any checks in pointless places. This could really do with reviewing by people who know how the puzzles work.

The effect of these checks is that if the UI has set the flag meaning ""user has pressed Cancel"", then bomb out of new_game_desc as quickly and tidily as possible, having it return NULL.

The UI thread currently blocks on the cancel operation with Thread.join(), so the risk in the case of insufficient cancelability is one of ""Application not responding for 5 seconds, [press here to kill -9]"" rather than disastrous concurrency problems.",,,application not responding
https://github.com/chrisboyle/sgtpuzzles/commit/5b8b85537621204a12962c4b3afb708a24817a54,Fix tiny memory leak if you pressed Solve while part way through an,"existing solution path.

[originally from svn r7571]",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/ec4aaa8d0138a5484bec2792c456d173e068fbd0,Fix tiny memory leak if you pressed Solve while part way through an,"existing solution path.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@7571 cda61777-01e9-0310-a592-d414129be87e",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/877900f58af023be317ee79b7ed29f13b1e9f18e,Patch from Ben Hutchings to prevent memory leakage during Loopy game,"generation.

[originally from svn r6708]",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/d8f147652c828aa00e3eb0ac96cef66f36858f5e,Patch from Ben Hutchings to prevent memory leakage during Loopy game,"generation.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6708 cda61777-01e9-0310-a592-d414129be87e",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/fd1735170e408b32847c481eea2cffc4f164c7df,Patch from Ton van Overbeek to fix a small memory leak in,"midend_solve().

[originally from svn r6271]",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/1fdbaa693e1a7b7cb7424d248a6ee66cd34a70c8,Patch from Ton van Overbeek to fix a small memory leak in,"midend_solve().


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6271 cda61777-01e9-0310-a592-d414129be87e",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/41b9855da9e3eca71f9759dccdd04c2d714d9cc6,Patches from James H. The usual stuff (memory leak fixes and 16-bit,"cleanliness), plus he's enlarged the pencil-mark circles from
TILESIZE/8 to TILESIZE/7. Makes no difference at all (thanks to
integer division) when TILESIZE is the default of 20, but presumably
helps at some other tile sizes. Fine by me.

[originally from svn r6265]",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/f2c86d65362aabba92edd74f81566e4b33e84861,Patches from James H. The usual stuff (memory leak fixes and 16-bit,"cleanliness), plus he's enlarged the pencil-mark circles from
TILESIZE/8 to TILESIZE/7. Makes no difference at all (thanks to
integer division) when TILESIZE is the default of 20, but presumably
helps at some other tile sizes. Fine by me.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6265 cda61777-01e9-0310-a592-d414129be87e",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/04e26aaa7b04af90d8d42e77d3d9ccc1dade678c,James H's memory leak fixes to Inertia.,[originally from svn r6255],,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/e6ea4dd67ecc8313d33e287574747e0dc15c23bc,James H's memory leak fixes to Inertia.,git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6255 cda61777-01e9-0310-a592-d414129be87e,,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/d6163f9976c8d71513e7cc3896ad7c65e0cfb82f,Memory leak and type safety fixes from James H.,[originally from svn r6219],,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/1c840d389d9f01e628f7f6b96d21853c220a9362,Memory leak and type safety fixes from James H.,git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6219 cda61777-01e9-0310-a592-d414129be87e,,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/fb6e7f1a8ba72a7aa46be661c6e5f10f33ad94fc,"Memory leak in the new printing stuff, plus a couple of comment","corrections.

[originally from svn r6199]",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/aef7f718ee5ab5753a466d128e03cedda043cc5a,"Memory leak in the new printing stuff, plus a couple of comment","corrections.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6199 cda61777-01e9-0310-a592-d414129be87e",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/cceee3cac9124fae641e536400602dd1f7a2437a,Memory leak fixes from James H.,[originally from svn r6188],,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/554cc3cacf5db7819f243577df76badd4a913f1c,Memory leak fixes from James H.,git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6188 cda61777-01e9-0310-a592-d414129be87e,,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/414330d9ad00e3b788d48b1d928e46ad7698c508,"Cleanups from James H: a few missing statics, a precautionary cast","or two, a debugging fix, a couple of explicit initialisations of
variables that were previously read uninitialised, and a fix for a
whopping great big memory leak in Slant owing to me having
completely forgotten to write free_game().

[originally from svn r6159]",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/4dd26f69199211d62206d9f93f2af75da3be0270,"Cleanups from James H: a few missing statics, a precautionary cast","or two, a debugging fix, a couple of explicit initialisations of
variables that were previously read uninitialised, and a fix for a
whopping great big memory leak in Slant owing to me having
completely forgotten to write free_game().


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6159 cda61777-01e9-0310-a592-d414129be87e",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/931a7ca45f4c247e974509922b879cc631a84ec9,Cleanups and memory leak fixes from James H.,[originally from svn r6099],,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/4e7dae8b39c4c3c82be438e580d644f2099701e1,Cleanups and memory leak fixes from James H.,git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6099 cda61777-01e9-0310-a592-d414129be87e,,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/118abb4fc9365807ad4174588eeb9aefda550415,General robustness patch from James Harvey:,"- most game_size() functions now work in doubles internally and
   round to nearest, meaning that they have less tendency to try to
   alter a size they returned happily from a previous call
 - couple of fiddly fixes (memory leaks, precautionary casts in
   printf argument lists)
 - midend_deserialise() now constructs an appropriate drawstate,
   which I can't think how I overlooked myself since I _thought_ I
   went through the entire midend structure field by field!

[originally from svn r6041]",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/b8fabc5e38916c6404f749bccc5a4c8e46667f33,General robustness patch from James Harvey:,"- most game_size() functions now work in doubles internally and
   round to nearest, meaning that they have less tendency to try to
   alter a size they returned happily from a previous call
 - couple of fiddly fixes (memory leaks, precautionary casts in
   printf argument lists)
 - midend_deserialise() now constructs an appropriate drawstate,
   which I can't think how I overlooked myself since I _thought_ I
   went through the entire midend structure field by field!


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@6041 cda61777-01e9-0310-a592-d414129be87e",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/0417e6335e33c99b84561b17aeba68c118c6f94f,James Harvey's memory leak patch for Flip.,[originally from svn r5980],,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/cb9d0b5c48a0c5ec803361ea6db5b85206f201d4,James Harvey's memory leak patch for Flip.,git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5980 cda61777-01e9-0310-a592-d414129be87e,,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/50edaa578b614eb74c57a38faa2d05ab628ff81b,Miscellaneous fixes from James Harvey's PalmOS porting work:,"- fixed numerous memory leaks (not Palm-specific)
 - corrected a couple of 32-bit-int assumptions (vital for Palm but
   generally a good thing anyway)
 - lifted a few function pointer types into explicit typedefs
   (neutral for me but convenient for the source-munging Perl
   scripts he uses to deal with Palm code segment rules)
 - lifted a few function-level static arrays into global static
   arrays (neutral for me but apparently works round a Palm tools
   bug)
 - a couple more presets in Rectangles (so that Palm, or any other
   slow platform which can't handle the larger sizes easily, can
   still have some variety available)
 - in Solo, arranged a means of sharing scratch space between calls
   to nsolve to prevent a lot of redundant malloc/frees (gives a 10%
   speed increase even on existing platforms)

[originally from svn r5897]",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/4e8f98c58c681461bdb0e4eff6872ec2fe451b44,Miscellaneous fixes from James Harvey's PalmOS porting work:,"- fixed numerous memory leaks (not Palm-specific)
 - corrected a couple of 32-bit-int assumptions (vital for Palm but
   generally a good thing anyway)
 - lifted a few function pointer types into explicit typedefs
   (neutral for me but convenient for the source-munging Perl
   scripts he uses to deal with Palm code segment rules)
 - lifted a few function-level static arrays into global static
   arrays (neutral for me but apparently works round a Palm tools
   bug)
 - a couple more presets in Rectangles (so that Palm, or any other
   slow platform which can't handle the larger sizes easily, can
   still have some variety available)
 - in Solo, arranged a means of sharing scratch space between calls
   to nsolve to prevent a lot of redundant malloc/frees (gives a 10%
   speed increase even on existing platforms)


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5897 cda61777-01e9-0310-a592-d414129be87e",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/8ddfc3904bb200fa74a383573e1b353ff3143114,Ensure that an old random seed isn't left around for the user to see when a,"…when a

descriptive ID has been specified.
Fix tiny memory leak.

[originally from svn r5825]",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/a052b2f523ac439b08725f1806415f392449e1fb,Ensure that an old random seed isn't left around for the user to see when a,"…when a

descriptive ID has been specified.
Fix tiny memory leak.


git-svn-id: svn://svn.tartarus.org/sgt/puzzles@5825 cda61777-01e9-0310-a592-d414129be87e",,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/fc862ce0f2f7786944fa7caea140e39f4a2102b2,Fix a memory leak.,[originally from svn r4239],,,memory leak
https://github.com/chrisboyle/sgtpuzzles/commit/424c0b5ab7c522f4ddf99f1aecbe9686f15d82f6,Fix a memory leak.,git-svn-id: svn://svn.tartarus.org/sgt/puzzles@4239 cda61777-01e9-0310-a592-d414129be87e,,,memory leak
https://github.com/syphon-org/syphon/commit/e1541bbd5a68f040974cd5a6ef2f906abd6681c7,replaced encryption library due to memory leak suspicion,,,,memory leak
https://github.com/adeekshith/watomatic/commit/65b5e0bb64b61520bbaf5997b05f34bc7d6a12d3,Merge pull request,"…hema

Bugfix/104/modify database schema

public: Upgrade data storage architechture to support Facebook and other apps in the future",#133,https://github.com/adeekshith/watomatic/pull/133,data storage
https://github.com/balzack/databag/commit/ac268d4a3dfe73418a95d6bc5dd5f006470a7967,"removing float label input, maybe related to oom crash",,,, oom 
https://github.com/Lastaapps/menza/commit/0d6488fa258eb69416ede55b94a13e4fc5db0ce3,refactor(today): Add staggered grid + increased the image cache size to 64MB,…to 64MB,,,cache size
https://github.com/tom-anders/Easy_xkcd/commit/11c9cf8247682ab74f9ea06db66e31322abeaca4,"removed the addToBackStack(null) calls, they were causing memory leaks when replacing fragments",…s when replacing fragments,,,memory leak
https://github.com/tom-anders/Easy_xkcd/commit/ae68b25b310372d9419df503c776366e33ee0d6a,fixed memory leak in offline mode,,,,memory leak
https://github.com/chaldea-center/chaldea/commit/1cb64dda9be919c09e0f30d6e578549da6f40b30,Check last launch time for app auto update check,,,,launch time
https://github.com/nighthawk-apps/nighthawk-android-wallet/commit/f9c795cfc4f9865072df8d24c10e4a1763c14943,Gradle Max Heap Increase (,"* Increase Gradle Max Heap

As advised by the Google engineering team this could be the way to bypass the OOM trouble.",Electric-Coin-Company#896,https://github.com/Electric-Coin-Company/zashi-android/pull/896, oom 
https://github.com/meypod/al-azan/commit/877a551d08d0ec7f716b7837e399aeb7b0c8bb4b,fix: decrease apk size to pre api 24,,,,apk size
https://github.com/meypod/al-azan/commit/78385d87c85e42d21415e4cbe6e76312132b14e9,fix: turn on proguard to decrease final apk size,,,,apk size
https://github.com/bgregos/foreground/commit/300c3ccb076290aa4d8bd76e0c7088fe3a35dfdd,"make tasks immutable, convert all LiveData usages to Flow",,,,data usage
https://github.com/michaeltroger/greenpass-android/commit/1e5c1e887da8aa0a43e0afcba46fe6c1d0e3dddb,Fix memory leaks,,,,memory leak
https://github.com/michaeltroger/greenpass-android/commit/51021787a38757eec78c0ac1e6a5efa60e4fc784,Fix memory leaks,,,,memory leak
https://github.com/michaeltroger/greenpass-android/commit/635a67a5b97b28bd22f461408b330234a38640e5,Fix memory leak,,,,memory leak
https://github.com/michaeltroger/greenpass-android/commit/fc21c52e5b62beb32aa4bd33219d04c46eee4b93,Fix memory leak,,,,memory leak
https://github.com/michaeltroger/greenpass-android/commit/1d88cb06f4933ca450ba1370a375d214f7c776f2,Fix huge app size (,,#80,https://github.com/michaeltroger/greenpass-android/pull/80,app size
https://github.com/michaeltroger/greenpass-android/commit/2f0424cf752adac5b6e36d17126b5ac8f66f71e0,1.52 (,"* Allow reverse portrait

* Remove unnecessary double bang

* Improve translation for decryption

* Ignore out of memory problem in qr code and password protection check

* Make qr code check more RAM friendly

* Make sure document has at least one page

* Bump version",#16,https://github.com/michaeltroger/greenpass-android/pull/16,out of memory
https://github.com/michaeltroger/greenpass-android/commit/fa0af29c1eeb3cc2c3e032022459bdaea3c907b2,1.45 (,"* Fix out of memory on low end

* Major refactoring

* Improve activity destroyed handling

* Refactoring

* Use enums

* Bump version

* Remove unneeded type

* Lock app in portrait

* Fix wrong tab opened resumed and flickering

* Remove unused imports

* Fix formatting

* Increase buffer for view events

* Undo buffer increase

* Simplify uri handling

* Formatting

* Remove outdated comment

* Remove unneeded state update",#11,https://github.com/michaeltroger/greenpass-android/pull/11,out of memory
https://github.com/michaeltroger/greenpass-android/commit/96ffade34623118757f341929fc51e81bb1587d7,1.41 (,"* Attempt to fix white screen when resuming app after a while

* Improve crashlogs

* Ignore out of memory issues at QR code extraction - just don't show QR code

* Fix illegal state exception

* Fix potential nullpointer in retrieving system service

* Avoid crash on too big documents

* Bump version

* Ignore exceptions when closing

* Create bitmap without multiplier if too big

* Update README.md

* Refactoring",#7,https://github.com/michaeltroger/greenpass-android/pull/7,out of memory
https://github.com/michaeltroger/greenpass-android/commit/2696e6b9036db6479b3ecd9d225194c96727fdef,1.21 (,"* Fix pdf gets lost after some days

* Hide tabs when only 1 tab

* Fix TabLayoutMediator is already attached

* Refactor

* Gracefully handle read errors of pdf

* Fix no such method error due to ZXing core 3.4 requiring minsdk 24

* Save memory by reducing QR code size

* Reduce memory consumption of pdf

* Use less memory for pdf on low end device

* Handle read error from file picker gracefully

* Fix icon not shown on older android versions

* Refactoring

* Delete not needed file

* Refactoring

* Ignore exceptions during migration

* Update string

* Change screenshot",#3,https://github.com/michaeltroger/greenpass-android/pull/3,memory consumption
https://github.com/persian-calendar/persian-calendar/commit/0bb2f95ff8f0ed075b79276edb8ae2260fc227f7,Don't apply language to the context on activity rotate,"Per alim rotation has got a bit sluggish onc1c59bcGiven the change was more needed for non activity contexts we can just skip it in onResume and in onConfigurationChanged.

Per the tests however it hasn't solved the issue apparently.",,,sluggish
https://github.com/persian-calendar/persian-calendar/commit/e70de2275b6882a8cca375cd92f4be384b72eae7,ci: Use apk size as upload caption,,,,apk size
https://github.com/persian-calendar/persian-calendar/commit/27931d385e12dffbd4062ebd2cdc00dd2bb401d9,[map] Avoid bitmap generation memory churn,Its memory usage should become stable now.,,,memory churn
https://github.com/persian-calendar/persian-calendar/commit/c80335c08a3bc3e04ae93eb29ea47eb9fb160a9c,"Revert ""Implement an Android 12 inspired new UI""","This reverts commit21f3504.

Makes the UI laggish on some devices, let's postpone the change
to after release of Android 12 and limit it to higher Android
versions but maybe make it opt-in in newer Android versions.

Also UX concerns as this won't match with our current drawer menu
models, the drawer didn't open on sliding the screen from siding of
the device which should be addressed while the next try for
applying this.",,,UI lag
https://github.com/persian-calendar/persian-calendar/commit/059ebd4e840e7605b7c30fc779a2f31d989ed814,Instantiate shared fields of day view only once,Hopefully speeds up launch time.,,,launch time
https://github.com/persian-calendar/persian-calendar/commit/9a3cb6fb22c843872d4690a9b8a5bc8bad4c702d,Make navigation transition a little faster,"As Mehdi's feedback, current transition feels a bit sluggish and
this makes it a little less noticable yet feels faster also.",,,sluggish
https://github.com/persian-calendar/persian-calendar/commit/54f4582994ae7abdbabf86c32be58a36efd407bd,Fix JVM running out of memory on CI builds,,,,out of memory
https://github.com/persian-calendar/persian-calendar/commit/fb56d0d59a07558ec7eb27cb3e266cbb19119804,Use child fragment manager to avoid memory leak,,,,memory leak
https://github.com/persian-calendar/persian-calendar/commit/78d308e5d25b9ec09080b04f8a7e6d9d1906fe8b,Down size Athan backgrounds to turn down OOM issues (temp sln),,,, oom 
https://github.com/persian-calendar/persian-calendar/commit/7e9db436cac89a258defe7b636b039e395c5bf69,Reduce APK size by proguard,,,,apk size
https://github.com/wiglenet/wigle-wifi-wardriving/commit/ebee8e434652410ecbe1c8fe6efa377c6aa09f49,move android-maps-utils to gradle (,"* move android-maps-utils to gradle

* maps: handler on looper, batched bssids

* moar dynamic cache size",#557,https://github.com/wiglenet/wigle-wifi-wardriving/pull/557,cache size
https://github.com/wiglenet/wigle-wifi-wardriving/commit/35532e8bc20bbde3561c8fa1882f22b6bb244036,todo: done cell towers and last scan response time,,,,response time
https://github.com/wiglenet/wigle-wifi-wardriving/commit/ff0a554959168bb0624eb6d31aa44acf9862986a,make sure the last scan response time is reset when not scanning,,,,response time
https://github.com/schnatterer/nusic/commit/dabba5d00c7cd27716cb867dae12dbd7283ef0f9,Decreased change of a memory leak for reference on main activity and,retaining instance of task.,,,memory leak
https://github.com/deadlyjack/Acode/commit/2e756e36fe44ca5f2f9e6738b05d7cd9d8958de4,version 1.1.14.112,"☞ Option to disable floating button
☞ Remebers state of quicktools
☞ Bugs fixes
☞ UI improvement
☞ Add any directory to explorer using SAF
☞ Performance improvement
☞ Smaller APK size",,,apk size
https://github.com/deadlyjack/Acode/commit/a3fbaa40ae6ad7393bd69eb0b84c1c0785983136,version 1.1.14.111,"☞ Bugs fixes
☞ UI improvement
☞ Add any directory to explorer using SAF
☞ Performance improvement
☞ Smaller APK size",,,apk size
https://github.com/standardnotes/app/commit/8655bdb5ddb92128ea00ac6dad417d7d961eb7ff,tests: fix memory leaks (,,#2389,https://github.com/standardnotes/app/pull/2389,memory leak
https://github.com/standardnotes/app/commit/1d7079e90cf5c4de57a77b408a7b2d399a4a6a38,fix: Fixed issue where some dialogs would become unresponsive,,,,unresponsive
https://github.com/standardnotes/app/commit/483cac90cfddb13854be1998e7b96b50aee86464,feat(web): remove web-server and change web to a static website deployment (,"…yment (#1360)

* feat(web): add deploying static app

* fix(web): linter ignore patterns

* fix(web): cloudfront invalidation and favicons placement

* feat(web-server): remove web-server package in favour of web

* fix(web): remove linter parallel jobs due to oom issue

* fix(mobile): eslintignore paths

* fix(web): copy of components

* fix(web): include building components in building all process

* fix(web): copying of components",#1360,https://github.com/standardnotes/app/pull/1360, oom 
https://github.com/standardnotes/app/commit/9256193c66fa8f650f79a6d8905d85aa47648913,"fix: handle case in preferences where component name can be undefined, causing exception that makes preferences UI unresponsive","…, causing exception that makes preferences UI unresponsive",,,unresponsive
https://github.com/standardnotes/app/commit/fc0a7d4c662f45ee1a15882bb4fe676feae1d5f8,fix: remove memory leak in click-outside,,,,memory leak
https://github.com/duckduckgo/Android/commit/064883634cceff59b8ddf72b8740b702354d2df1,Remove PPro isLaunched FF (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1207185787167219/f### Description
Remove PPro isLaunched FF now that PPro is fully rolled out.

### Steps to test this PR
- [x] smoke test app update from VPN beta user
- [x] smoke test fresh install
- [x] smoke test fresh install and subscribe to PPro",#4479,https://github.com/duckduckgo/Android/pull/4479, FF 
https://github.com/duckduckgo/Android/commit/b4e6de4f865c20e5c241ec7c2666ec0eefcd2453,Android: distinguish browser vs custom tabs Crash/ANRs (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1207164955333549/f### Description
Added the `customTab` flag to the crashes and anrs to identify the
custom tab scenario.

### Steps to test this PR

_Test ANR pixel with customTab=false (Browser)_
- [x] Checkout this branch and change the policy to
`ExistingPeriodicWorkPolicy.REPLACE` inhttps://github.com/duckduckgo/Android/blob/feature/ana/android_distinguish_browser_vs_custom_tabs_crash_anrs/statistics/src/main/java/com/duckduckgo/app/statistics/api/OfflinePixelScheduler.kt#L55.
- [x] Add the below code to produce an ANR when tapping on ""Find in
page"" from the overflow menu athttps://github.com/duckduckgo/Android/blob/feature/ana/android_distinguish_browser_vs_custom_tabs_crash_anrs/app/src/main/java/com/duckduckgo/app/browser/BrowserTabFragment.kt#L3277```
                    Handler(Looper.getMainLooper()).post {
                        Thread.sleep(10000)
                    }
```
- [x] Build and install.
- [x] Open the app.
- [x] Tap on ""Find in Page"" from the overflow menu.
- [x] Notice the ANR.
- [x] Restart the app.
- [x] Verify the `m_anr_exception` pixel is sent with `customTab=false`
param.


_Test ANR pixel with customTab=true (Custom Tab)_
- [x] Checkout this branch and change the policy to
`ExistingPeriodicWorkPolicy.REPLACE` inhttps://github.com/duckduckgo/Android/blob/feature/ana/android_distinguish_browser_vs_custom_tabs_crash_anrs/statistics/src/main/java/com/duckduckgo/app/statistics/api/OfflinePixelScheduler.kt#L55.
- [x] Add the below code to produce an ANR when tapping on ""Find in
page"" from the overflow menu athttps://github.com/duckduckgo/Android/blob/feature/ana/android_distinguish_browser_vs_custom_tabs_crash_anrs/app/src/main/java/com/duckduckgo/app/browser/BrowserTabFragment.kt#L3277```
                    Handler(Looper.getMainLooper()).post {
                        Thread.sleep(10000)
                    }
```
- [x] Build and install.
- [x] Open Gmail or another app that uses Custom Tabs and navigate on a
link from there.
- [x] Notice the DDG Custom Tab is open. 
- [x] Tap on ""Find in Page"" from the overflow menu.
- [x] Notice the ANR.
- [x] Restart the browser app.
- [x] Verify the `m_anr_exception` pixel is sent with `customTab=true`
param.


_Test Crash pixel with customTab=false (Browser)_
- [x] Checkout this branch and change the policy to
`ExistingPeriodicWorkPolicy.REPLACE` inhttps://github.com/duckduckgo/Android/blob/feature/ana/android_distinguish_browser_vs_custom_tabs_crash_anrs/statistics/src/main/java/com/duckduckgo/app/statistics/api/OfflinePixelScheduler.kt#L55.
- [x] Add the below code to produce a crash when tapping on ""Find in
page"" from the overflow menu athttps://github.com/duckduckgo/Android/blob/feature/ana/android_distinguish_browser_vs_custom_tabs_crash_anrs/app/src/main/java/com/duckduckgo/app/browser/BrowserTabFragment.kt#L3277```
                    throw IllegalStateException(""test"")
```
- [x] Build and install.
- [x] Open the app.
- [x] Tap on ""Find in Page"" from the overflow menu.
- [x] Notice the crash.
- [x] Restart the app.
- [x] Verify the `m_d_ac_g` pixel is sent with `customTab=false` param.


_Test Crash pixel with customTab=true (Custom Tab)_
- [x] Checkout this branch and change the policy to
`ExistingPeriodicWorkPolicy.REPLACE` inhttps://github.com/duckduckgo/Android/blob/feature/ana/android_distinguish_browser_vs_custom_tabs_crash_anrs/statistics/src/main/java/com/duckduckgo/app/statistics/api/OfflinePixelScheduler.kt#L55.
- [x] Add the below code to produce a crash when tapping on ""Find in
page"" from the overflow menu athttps://github.com/duckduckgo/Android/blob/feature/ana/android_distinguish_browser_vs_custom_tabs_crash_anrs/app/src/main/java/com/duckduckgo/app/browser/BrowserTabFragment.kt#L3277```
                     throw IllegalStateException(""test"")
```
- [x] Build and install.
- [x] Open Gmail or another app that uses Custom Tabs and navigate on a
link from there.
- [x] Notice the DDG Custom Tab is open. 
- [x] Tap on ""Find in Page"" from the overflow menu.
- [x] Notice the crash.
- [x] Restart the browser app.
- [x] Verify the `m_d_ac_g` pixel is sent with `customTab=true` param.


_Test the DB migration_
- [x] Install from develop.
- [x] Checkout this branch.
- [x] Add the below code to produce an ANR when tapping on ""Find in
page"" from the overflow menu athttps://github.com/duckduckgo/Android/blob/feature/ana/android_distinguish_browser_vs_custom_tabs_crash_anrs/app/src/main/java/com/duckduckgo/app/browser/BrowserTabFragment.kt#L3277```
                    Handler(Looper.getMainLooper()).post {
                        Thread.sleep(10000)
                    }
```
- [x] Add the below code to produce a crash when tapping on ""Share"" from
the overflow menu athttps://github.com/duckduckgo/Android/blob/feature/ana/android_distinguish_browser_vs_custom_tabs_crash_anrs/app/src/main/java/com/duckduckgo/app/browser/BrowserTabFragment.kt#L3297```
                     throw IllegalStateException(""test"")
```
- [x] Update the app using the code on this branch. It's important to be
an update, not a fresh install.
- [x] Open the app.
- [x] Tap on ""Find in Page"" from the overflow menu.
- [x] Notice the ANR.
- [x] Notice the ANR DB is created and contains the custom tab column in
the ANR table.
- [x] Open the app.
- [x] Tap on ""Share"" from the overflow menu.
- [x] Notice the crash.
- [x] Notice the Crash DB is created and contains the custom tab column
in the Crash table.

### NO UI changes",#4469,https://github.com/duckduckgo/Android/pull/4469, ANR 
https://github.com/duckduckgo/Android/commit/70c8ece1e2bce7454c0bdac054b3415f17cd420e,runCatching ANR recording (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1207070178029312/f### Description
try-catch ANR recording to avoid unintended crashes like OOM

### Steps to test this PR
NA, just code review",#4434,https://github.com/duckduckgo/Android/pull/4434, ANR 
https://github.com/duckduckgo/Android/commit/fbbf0db505d7b711a4054b0f4210a10d1173e15b,Add FF roll back integration test (,,#4384,https://github.com/duckduckgo/Android/pull/4384, FF 
https://github.com/duckduckgo/Android/commit/9df25b1984422f8a116189004c05cce18798ed94,Fix possible ANR in billing client (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1207003406045665/f### Description
See Asana task

### Steps to test this PR
Smoke test PPro",#4399,https://github.com/duckduckgo/Android/pull/4399, ANR 
https://github.com/duckduckgo/Android/commit/1abeff9f6b086bbcc9b123ecce50ff0c01c2232f,Fix possible ANR in billing client (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1207003406045665/f### Description
See Asana task

### Steps to test this PR
Smoke test PPro",#4399,https://github.com/duckduckgo/Android/pull/4399, ANR 
https://github.com/duckduckgo/Android/commit/650686117b1c579f108430545cad2b0c380221ee,Fix OOM crash on Timber.d (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1206718079780225/f### Description
Fix a OOM crash that happens in production when using Timber.d() and parameters are larged. In this case a url that embeds a file to download

The fix is replacing Timber by logcat, which is something we wanted to do anyways little by little.

### Steps to test this PR
NA, just code review",#4218,https://github.com/duckduckgo/Android/pull/4218, oom 
https://github.com/duckduckgo/Android/commit/19c03299543e557fe9956e573e4ae27df8105e83,Fix bug when computing the terrible latency bottom band (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1206514199358868### Description
Fix bug when calculating bottom band for terrible latency

### Steps to test this PR
QA optional, code review and test pass",#4163,https://github.com/duckduckgo/Android/pull/4163,latency
https://github.com/duckduckgo/Android/commit/c5cfe11e3d474a2c8a6955d3a8d3372e7ddc7c14,Improve FF framework (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1206413338208929/f### Description
Improve the feature flagging system to:
* not require rollout steps
* allocate the rollout threshold just once
* other simplifications

All changes should be backwards compatible and don't modify behavior for existing or future flags

### Steps to test this PR
Perform test cases inhttps://app.asana.com/0/0/1206413338208951/f",#4116,https://github.com/duckduckgo/Android/pull/4116, FF 
https://github.com/duckduckgo/Android/commit/5af462f5f9055b797a9c22e2bd49ee8cb4b8a850,"Android ANR: On Oreo (8.1) and below, the app freezes when choosing to submit a Breakage report (","…o submit a Breakage report (#4142)

Task/Issue URL:https://app.asana.com/0/488551667048375/1206404678635835/f### Description
Fixed ANR when choosing to submit a breakage report on Oreo and below.

### Steps to test this PR

_Reproduce the issue_
- [ ] Install from `develop` on a device with Android 8.1 or below.
- [ ] Navigate to a website.
- [ ] Open the menu and tap on ""Report Broken Site"".
- [ ] Notice that nothing happens in the UI and then an ANR is
encountered.

_Test the fix_
- [ ] Install from `this branch` on a device with Android 8.1 or below.
- [ ] Navigate to a website.
- [ ] Open the menu and tap on ""Report Broken Site"".
- [ ] Notice the `Report Broken Site` screen is displayed and you can
send a report.

### NO UI changes",#4142,https://github.com/duckduckgo/Android/pull/4142, ANR 
https://github.com/duckduckgo/Android/commit/951d35512febfb7b4f96f2e118a2be2b5fc6829a,Fix NPE in connection quality (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1206222242762043/f### Description
Fix NPE when aggregating connection quality

### Steps to test this PR
Requirements:
* test in emulator
* mac computer connected to VPN

_Test_
- [x] filter logcat by `Connection Quality`
- [x] install from this branch and enable VPN
- [x] see connection quality measurements
- [x] increase latency by connecting your computer to an egress very far away
- [x] see connection quality measurements increasing and changing class",#4039,https://github.com/duckduckgo/Android/pull/4039,latency
https://github.com/duckduckgo/Android/commit/0961d26b71cceefbb2313730580bbe0c22625566,Move all AppTP feature flags to new FF framework (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1205911542931671/f### Description
This PR moves all remaining AppTP feature flags to the new FF framework and removes the code for the legacy implementation

### Steps to test this PR
_Test `restartOnConnectivityLoss` feature_
- [ ] repeat tests in#3481_Test migration_
- [x] install app from develop
- [x] open app
- [x] verify the `vpn.db` contains the exclusionlists
- [x] in this branch, modify the`PRIVACY_REMOTE_CONFIG_URL` to point tohttps://jsonblob.com/api/jsonBlob/1126094951384629248- [x] build, update the app and launch
- [x] verify the `android.service.ims` inside the `vpn_app_tracker_exclusion_list` table in the `vpn.db` contains the `reason` with value `this should have change`
- [x] verify the `com.duckduckgo.vpn.atp.remote.features.v1` shared prefs file contains ` appTrackerProtection_restartOnConnectivityLoss: ""{""remoteEnableState"":false,""enable"":true}""`",#3835,https://github.com/duckduckgo/Android/pull/3835, FF 
https://github.com/duckduckgo/Android/commit/c1ce20d881d2fb282419433d027641a1f08b3b81,Remove legacy latency measurements (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1205806273393597/f### Description
Remove code

### Steps to test this PR
NA",#3757,https://github.com/duckduckgo/Android/pull/3757,latency
https://github.com/duckduckgo/Android/commit/6ce4c7856a3354c7e26514b60639999921d47f2a,Fix CPU load measurement for :vpn process (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1205698558631498/f### Description
Fix CPU measurement, it was measure on the wrong process

### Steps to test this PR

Apply the following patch

```diff
Index: app-tracking-protection/vpn-impl/src/main/java/com/duckduckgo/mobile/android/vpn/health/AppTPCPUMonitor.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app-tracking-protection/vpn-impl/src/main/java/com/duckduckgo/mobile/android/vpn/health/AppTPCPUMonitor.kt b/app-tracking-protection/vpn-impl/src/main/java/com/duckduckgo/mobile/android/vpn/health/AppTPCPUMonitor.kt
--- a/app-tracking-protection/vpn-impl/src/main/java/com/duckduckgo/mobile/android/vpn/health/AppTPCPUMonitor.kt	(revision6014434)
+++ b/app-tracking-protection/vpn-impl/src/main/java/com/duckduckgo/mobile/android/vpn/health/AppTPCPUMonitor.kt	(date 1697118279707)
@@ -50,10 +50,10 @@
             logcat { ""AppTpSetting.CPUMonitoring is enabled, starting monitoring"" }
             val work = PeriodicWorkRequestBuilder<CPUMonitorWorker>(4, TimeUnit.HOURS)
                 .boundToVpnProcess(appBuildConfig.applicationId) // this worker is executed in the :vpn process
-                .setInitialDelay(10, TimeUnit.MINUTES) // let the CPU usage settle after VPN restart
+                .setInitialDelay(2, TimeUnit.SECONDS) // let the CPU usage settle after VPN restart
                 .build()
 
-            workManager.enqueueUniquePeriodicWork(APP_TRACKER_CPU_MONITOR_WORKER_TAG, ExistingPeriodicWorkPolicy.KEEP, work)
+            workManager.enqueueUniquePeriodicWork(APP_TRACKER_CPU_MONITOR_WORKER_TAG, ExistingPeriodicWorkPolicy.REPLACE, work)
         } else {
             logcat { ""AppTpSetting.CPUMonitoring is disabled"" }
         }
```

* build app and install
* filter logcat by `with pid=`
* launch app and enable AppTP
- [x] verify the `pid` in `Reading CPU load for process with pid=##` is the one from the VPN process",#3659,https://github.com/duckduckgo/Android/pull/3659,cpu usage
https://github.com/duckduckgo/Android/commit/1f86ffbc3184bf0c31cadd080469859bd8d20b9a,Connection class measurement (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1205631232587242/f### Description
Connection class/latency measurement and reporting.

This PR adds the following NetP classes:
* `ConnectionQuality` - defines the connection quality based on latency (ms)
* `ConnectionQualityStore` - connection latency measurement store
* `ExponentialGeometricAverage` - class that computes a Exponential Moving Average (EMA)
* `ConnectionClassManager` - calculates the connection class by adding latency measurements and applies some hysteresis 
* `VpnLatencySampler` - class that samples latency and reports when connection class is `POOR` or worse

### Steps to test this PR
Test cases [here](https://app.asana.com/0/0/1205663579937311/f)",#3632,https://github.com/duckduckgo/Android/pull/3632,latency
https://github.com/duckduckgo/Android/commit/69e1cd468345f295a9d170ae26e141d80ee12d75,Add webview version to anr and crash pixels (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1205522974777681/f### Description
This PR adds the webview version to anr and crash pixels

### Steps to test this PR

_Test ANR pixel_
- [x] in this branch, change the policy to
`ExistingPeriodicWorkPolicy.REPLACE` in `OfflinePixelScheduler:55`
- [x] build and install
- [x] open the app
- [x] go to ""Settings"" -> ""Dev settings""
- [x] trigger ANR
- [x] close and reopen the app
- [x] verify the `m_anr_exception` pixel is sent and contains a
parameter `webView` with the webView version

_Test crash pixel_
- [x] in this branch, change the policy to
`ExistingPeriodicWorkPolicy.REPLACE` in `OfflinePixelScheduler:55`
- [x] in the `BrowserActivity:424` throw an `Exception(""test"")` when we
call `launchPrivacyDashboard()`
- [x] build and install
- [x] open the app
- [x] go to `cnn.com`
- [x] click on the privacy dashboard, the app should crash
- [x] reopen the app
- [x] verify the `m_d_ac_g` pixel is sent and contains a parameter
`webView` with the webView version

_Test migration_
- [x] in the `BrowserActivity:424` throw an `Exception(""test"")` when we
call `launchPrivacyDashboard()`
- [x] build and install
- [x] open the app
- [x] go to `cnn.com`
- [x] click on the privacy dashboard, the app should crash
- [x] reopen the app
- [x] go to ""Settings"" -> ""Dev settings""
- [x] trigger ANR
- [x] Check the anr and crashes db to make sure there is one row in each
- [x] change to this branch and change the policy to
`ExistingPeriodicWorkPolicy.REPLACE` in `OfflinePixelScheduler:55`
- [x] launch the app
- [x] verify that both `m_d_ac_g` and `m_anr_exception` are sent with
the webview version set to `unknown`",#3584,https://github.com/duckduckgo/Android/pull/3584, ANR 
https://github.com/duckduckgo/Android/commit/a9af29186404e9d0e68de8a24f0f1f5e455cf35b,Make AnrSupervisor a singleton inside app scope (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1205278679036125/f### Description
Make ANR supervisor a singleton in app scope

### Steps to test this PR
QA optional",#3470,https://github.com/duckduckgo/Android/pull/3470, ANR 
https://github.com/duckduckgo/Android/commit/2fb3ff79b2921dbfc1ec6ba6f8e33264f8e7ca04,Restructure maestro ad-click detection tests to use tags and shared onboarding flow (,"…nboarding flow (#3461)

<!--
Note: This checklist is a reminder of our shared engineering
expectations.
The items in Bold are required
If your PR involves UI changes:
1. Upload screenshots or screencasts that illustrate the changes before
/ after
2. Add them under the UI changes section (feel free to add more columns
if needed)
If your PR does not involve UI changes, you can remove the **UI
changes** section

At a minimum, make sure your changes are tested in API 23 and one of the
more recent API levels available.
-->

Task/Issue URL:https://app.asana.com/0/488551667048375/1205258019391736/f### Description
Restructures the maestro ad-click detection tests to use a tag
`adClickTest` and utilise the shared onboarding flow.

### Steps to test this PR
- [ ] Ensure privacy dashboard e2e workflow passed:https://github.com/duckduckgo/Android/actions/runs/5867320667(or if a
failure, it's not because of these changes and the failure is because of
known ANR that is getting fixed elsewhere)",#3461,https://github.com/duckduckgo/Android/pull/3461, ANR 
https://github.com/duckduckgo/Android/commit/6ee01b36d7a0e0e4e440002d1a8978341262de51,Allow for locally missing feature flags (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1205234536443803/f### Description
Handle the case where a sub-feature FF is present remotely but not present locally

### Steps to test this PR
Test case in [here](https://app.asana.com/0/488551667048375/1205234536443803/f)
Also the integration test added verifies the same thing (that test would fail in develop witht the same error)",#3449,https://github.com/duckduckgo/Android/pull/3449, FF 
https://github.com/duckduckgo/Android/commit/1e9bf9af6c668e7d2b1b48372bb23e5d9f6e98a4,Align ANR and Crash reporting (,"Task/Issue URL:https://app.asana.com/0/1202552961248957/1204410260530429/f### Description
See asana for more info

### Steps to test this PR
Run same tests that in PR#3052",#3121,https://github.com/duckduckgo/Android/pull/3121, ANR 
https://github.com/duckduckgo/Android/commit/381cd8920a6906b8799d1c0df0e2439f4f00347d,Move app shortcut creation away from main thread to avoid ANR (,"<!--
Note: This checklist is a reminder of our shared engineering
expectations.
The items in Bold are required
If your PR involves UI changes:
1. Upload screenshots or screencasts that illustrate the changes before
/ after
2. Add them under the UI changes section (feel free to add more columns
if needed)
    3. Make sure these changes are tested in API 23 and API 26
If your PR does not involve UI changes, you can remove the **UI
changes** section
-->

Task/Issue URL:https://app.asana.com/0/488551667048375/1204427411055565/f### Description
Fixes an ANR which can happen because we're making a potentially slow
binder call from the main thread, which is on the hot path for main
process creation.

The fix is to simply move the call off of the main thread.
### Steps to test this PR

- [x] Fresh install on >= Android 25
- [x] Launch the app
- [x] Hit the home button, then long press on the app icon
- [x] Verify you can see the app shortcuts and that they work as
expected",#3076,https://github.com/duckduckgo/Android/pull/3076, ANR 
https://github.com/duckduckgo/Android/commit/81e7b0dbe23f23972eb76dea1f4c71066c1174c1,Prevent ANR when assigning AppTP cohort (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1204265639917299/f### Description
Ensure calls to `CohortStore` are not done in the main thread.

The approach taken is has been:
* marking method as `WorkerThread`
* in internal builds `checkMainThread` and throw
* in production build we don't do the `checkMainThread`

### Steps to test this PR

_Check cohort is assigned_
- [x] fresh install from this branch the internal build
- [x] open the app
- [x] enable AppTP
- [x] filter logcat with `atp_cohort`
- [x] navigate to AppTP exclusion list screen
- [x] verify pixels are fired with `atp_cohort` parameter assigned
- [x] repeat with play build

Smoke test AppTP as well is useful",#3014,https://github.com/duckduckgo/Android/pull/3014, ANR 
https://github.com/duckduckgo/Android/commit/c0508a3998561022ead3ff87d424910215ac1cdb,Add new entry in settings under FF and internals (,"<!--
Note: This checklist is a reminder of our shared engineering
expectations.
The items in Bold are required
If your PR involves UI changes:
1. Upload screenshots or screencasts that illustrate the changes before
/ after
2. Add them under the UI changes section (feel free to add more columns
if needed)
    3. Make sure these changes are tested in API 23 and API 26
If your PR does not involve UI changes, you can remove the **UI
changes** section
-->

Task/Issue URL:https://app.asana.com/0/488551667048375/1204184007142125/f### Description
Shows device sync state (on/off)
only visible for internal users
will access sync settings screen (not part of this PR)

### Steps to test this PR

_Feature 1_
- [x] install internal flavor app
- [x] go to settings
- [x] ensure sync setting appears with status off
- [x] Go to internal sync settings and create an account
- [x] go back to main settings screen
- [x] ensure syn settings appears with status on
- [ ]

### UI changes
| Before  | After |
| ------ | ----- |
!(Upload before screenshot)|(Upload after screenshot)|",#2957,https://github.com/duckduckgo/Android/pull/2957, FF 
https://github.com/duckduckgo/Android/commit/7a80e1fafb5dba3e751a105fe2f799e8fe96bbee,AppTP: In-Production CPU Usage Alerting (,"Task/Issue URL:https://app.asana.com/0/1202279501986195/1203087251348637/f### Description
Add in-production alerting when AppTP CPU usage reaches a certain threshold

### Steps to test this PR
- [x] Modify the `PrivacyConfigService` so that it downloads fromhttps://jsonblob.com/api/jsonBlob/1027370484156874752- [x] In `AppTPCPUMonitor`, replace
    ```
    .setInitialDelay(10, TimeUnit.MINUTES)
    ```
    with
    ```
    .setInitialDelay(10, TimeUnit.SECONDS)
    ```
- [x] Install from this branch
- [x] Start the VPN
- [x] Check in logcat that the `m_atp_ev_cpu_usage_above_` pixel was sent. Also check that only the `appVersion` param was sent with the pixel
- [x] Go tohttps://jsonblob.com/1027370484156874752and modify `cpuMonitoring` state to disabled. Also bump the version number at the beginning of the JSON file.
- [x] Force-close the app and re-open (remote config should be downloaded)
- [x] Start the VPN
- [x] Check in logcat for ""AppTpSetting.CPUMonitoring is disabled"" message and make sure that the `m_atp_ev_cpu_usage_above_` pixel is not sent",#2361,https://github.com/duckduckgo/Android/pull/2361,cpu usage
https://github.com/duckduckgo/Android/commit/89c7a40ee07ba5a597999a4dd135b879c9e06685,AppTP CPU Usage: Internal Users Experiment (,"Task/Issue URL:https://app.asana.com/0/0/1202949216481177/f### Description
* Add periodic monitoring of AppTP's CPU usage and send it as a pixel
* Add UI to opt-in to this experiment (for internal users only)

### Steps to test this PR
- [x] Get the code from this branch and change the window from 1h to 2min as below:
  * In `AppTPCPUMonitor` change `PeriodicWorkRequestBuilder<CPUMonitorWorker>(1, TimeUnit.HOURS)` to `PeriodicWorkRequestBuilder<CPUMonitorWorker>(15, TimeUnit.MINUTES)`. (Unfortunately, 15 minutes is the minimum allowed period).
- [x] Install **internal build** on a device / emulator
- [x] In AppTP dev settings, verify that you cannot toggle CPU monitoring
- [x] Enable the AppTP VPN
- [x] In AppTP dev settings enable CPU monitoring
- [x] Wait ~15 minutes (go grab a coffee) 
- [x] Check in logcat that the `m_atp_ev_cpu_usage` pixel was sent twice. Also check that no atp_cohort or appVersion params were sent for this pixel.
- [x] In AppTP dev settings disable CPU monitoring
- [x] Verify that `m_atp_ev_cpu_usage` pixels are no longer being sent
- [x] Re-enable CPU monitoring and verify that one  `m_atp_ev_cpu_usage` pixel was sent
- [x] Disable the AppTP VPN and verify that `m_atp_ev_cpu_usage` pixels are no longer being sent",#2266,https://github.com/duckduckgo/Android/pull/2266,cpu usage
https://github.com/duckduckgo/Android/commit/97daae1de7cc0b93a36aeb3d189916ce1b0ffc91,Fix memory leak on view binding in autofill management list mode fragment (,…ment (#2202),#2202,https://github.com/duckduckgo/Android/pull/2202,memory leak
https://github.com/duckduckgo/Android/commit/c1e55d1d1268f633eff27f6893849ce619d93dc9,Audit/clean up TCP processor chain (,"Task/Issue URL:https://app.asana.com/0/488551667048375/1202254803269921/f### Description
Some cleanup of the TCP processor pipeline
Fix memory leak ie. we were not releasing the `responseBuffer` when sending the reset packet

### Steps to test this PR
Smoke tests for AppTP",#1931,https://github.com/duckduckgo/Android/pull/1931,memory leak
https://github.com/duckduckgo/Android/commit/ad1a463481eb10a1ad313f75525693b450577c06,Fix binding of ViewModelFactoryPlugin implementations to be ActivityScope / FragmentScope (,"…cope / FragmentScope (#1847)

Task/Issue URL:https://app.asana.com/0/414730916066338/1202079732318438/fDescription

This PR introduces:

3 classes that will replace the AppScoped ViewModelFactory.

    ActivityViewModelFactory - used to get viewModels that are within a Activity's scope
    FragmentViewModelFactory - used to get viewModels that are within a Fragment's scope
    VpnViewModelFactory - used to get viewModels that are within a VPN's scope
    @ContributesViewModel() are now annotated with ActivityScope and FragmentScope instead of AppScope

Steps to test this PR

Make sure all activities and fragments in the app launches and doesn't cause a runtime crash
Make sure that memory leaks don't get worse compared to production",#1847,https://github.com/duckduckgo/Android/pull/1847,memory leak
https://github.com/duckduckgo/Android/commit/a2fe21ff6a0c420292d2a0186905bd3bd8460474,Fix native memory leaks (,"Task/Issue URL:https://app.asana.com/0/0/1201748194657736/f### Description
After auditing the AppTP runtime, [these](https://app.asana.com/0/0/1201778487362550/f) are the memory leaks we've found. Basically places where the buffers need to be released because they're no longer in used, but they're not.

### Steps to test this PR

_Memory leak test_
- [x] install from develop
- [x] enable AppTP and go to diagnostics screen
- [x] Open apps that send trackers, even run speed tests
- [x] verify (diagnostics screen) how the `Buffer allocations` never go down to `0`
- [x] install from this branch
- [x] repeat steps above
- [x] verify how the `Buffer allocations` go eventually to `0`

_AppTP smoke tests_
- [x] install from this branch
- [x] enable AppTP and open some of you regular apps to see all works as expected, content loads, apps continue working etc.",#1734,https://github.com/duckduckgo/Android/pull/1734,memory leak
https://github.com/duckduckgo/Android/commit/1dc1bdc107e365fcc4a774affc221a12dd546d38,Add buffer alloc health metrics (,"Task/Issue URL:https://app.asana.com/0/0/1201752109049661/f### Description
In order to monitor the impact of the upcoming memory leak fixes, we are instrumenting the AppTP buffer allocations to be sent in breakage reports.

### Steps to test this PR

_Feature 1_
- [x] Install from this branch
- [x] Enable AppTP
- [x] Go to diagnostics screen
- [x] Force some traffic through the VPN (eg. speed test?)
- [x] Verify the `buffer allocations` increase
- [x] click on `BAD HEALTH`
- [x] Wait until bad health happens
- [x] Verify the `numberAllocations` is included in the `badHealthData` object of the `m_atp_health_monitor_report` pixel",#1726,https://github.com/duckduckgo/Android/pull/1726,memory leak
https://github.com/duckduckgo/Android/commit/1eebc5dd73a855ae4d3f05553f9f2352d140e5f3,Bye Bye tracer paket (,"Task/Issue URL:https://app.asana.com/0/0/1201710091654544/f### Description
We fixed the memory leak with the tracer packet in#1702. 
But because the tracer packet is highly invasive and we've seen how can affect the health of the VPN and because we haven't seen it results in true positives while testing internally, we're removing it for now not to spend more time debugging it and focus on the other metrics that relate to real system errors.

See [here](https://app.asana.com/0/0/1201710091654544/f) for more context.

**Why fixing and then removing?**
* In case we want to come back to it later, it is simpler to just revert this PR and be sure the memory leak is not there anymore

### Steps to test this PR

_Verify AppTP is gone_
- [x] Install from this branch
- [x] enable AppTP
- [x] verify that the diagnostrics screen doesn't have any tracer packet metrics reported
- [x] verify in the logcat that nothing comes back when filtering by `tracer`
- [x] smoke tests on AppTP, open apps, see they load, verify AppTP blocks trackers",#1703,https://github.com/duckduckgo/Android/pull/1703,memory leak
https://github.com/duckduckgo/Android/commit/25d5df4f2ff9cb1264cf1658a3e0202a9d7bac0b,Fix TracerPacket memory leak (,"Task/Issue URL:https://app.asana.com/0/0/1201701653646856/f### Description
This PR fixes the memory leak caused by tracer buffer.
Tracer packets have an associated `ByteBuffer` needed to inser the packet in the network-to-device queue. One we take the packet out and process it, we were not releasing it. Causing a memory leak.

This PR:
* releases the bytebuffer associated to the tracer packet
* Incidentally
  * adds some log statements for RUN write errors
  * double ensures that `acquire` buffers are cleared so that they're ready to be used

### Steps to test this PR
Smoke tests for AppTP",#1702,https://github.com/duckduckgo/Android/pull/1702,memory leak
https://github.com/duckduckgo/Android/commit/fd9fe597b9d3ccb038aac72a7170224245ebc559,ANR supervisor (,"Task/Issue URL:https://app.asana.com/0/0/1201618744517735/f### Description
Adding the ANR supervisor. More info [here](https://app.asana.com/0/1198194956794324/1201466259640556).

* the ANR code lives as an independent gradle library
  * anrs/ansr-api
  * anrs/anrs-impl
  * anrs/anrs-store
* the ANR supervisor hooks as a `BrowserLifecycleObserver` to monitor only when the app is opened
* supervisor starts in onOpen (app is opened)
* supervisor stops in onClose (app is closed)
* the ANR supervisor challenges the UI thread every ~5 seconds
* the ANR supervisor waits for ~2 seconds for the UI thread response
* if response doesn't come, ANR exception will be stored in a local DB
* every ANR exception has a unique MD5 hash so that we don't store duplicates
  * the unique hash is calculated using the stack trace
* using the `OfflinePixelWorker` the ANRs will be sent one by one
  * ie. for every execution of the `OfflinePixelWorker`, one ANR from the DB will be sent (and remove from the db)
* the ANR exceptions will be sent in a LIFO fashion
* an internal feature to force ANRs will be added to the ""Dev Settings"" so that we can test it

### Steps to test this PR

_Test ANR supervisor start stop_
- [x] install from this branch
- [x] open the app
- [x] verify the message `AnrSupervisor checking for ANRs...` appears periodicaly in logcat
- [x] close the app
- [x] vefiry `AnrSupervisor stopping...` log appears in logcat

_Test ANR pixel_
- [x] in this branch, change the policy to `ExistingPeriodicWorkPolicy.REPLACE` in `OfflinePixelScheduler:60`
- [x] build and install
- [x] open the app
- [x] go to ""Settings"" -> ""Dev settings""
- [x] trigger ANR
- [x] verify the log error message `ANR Detected: ...` appears in the logcat with a very comprehensive stacktrace for all threads running in the app
- [x] close and reopen the app
- [x] verify the `m_anr_exception` pixel is sent and contains a parameter `stackTrace` with a base64 value
- [x] decode the base64 value - you can use [this website](https://onlinestringtools.com/convert-base64-to-string)
- [x] verify the stack trace for just the main thread is sent and it correctly identifies the point where the ANR originated",#1650,https://github.com/duckduckgo/Android/pull/1650, ANR 
https://github.com/duckduckgo/Android/commit/7b12ba7a4aec11cc560d48f0b1eac202116a03d7,Feature/feedback disambiguation (,"* WIP feedback disambiguation redesign

* WIP updates to feedback UI

* WIP build feedback disambiguation screens

* Further work to add feedback disambiguation

* All copy in working order across the screens

* Add broken site feedback flow

* Tidy up of feedback fragment code

* Simplify feedback list decorator

* Fix tests

* Add dark theme

* Skip the positive landing screen if can't rate; add dark theme buttons

* UI polish after design review

* Tweaking layout

* Add scroll hack to ensure submit button visible if possible

Replace faces with PNGs as vector drawables were rendering poorly

* Start integration with server for submitting feedback

Also renamed old ""feedback"" classes to ""broken site"" naming

* Send feedback and broken site reports, along with pixel for some cases

* Consolidated broken site and feedback services

* Add missing subreason for autocomplete

* Remove experiment inline class usage

* Adding tests for the navigation flow

* Remove ATB variant from version param

* Code tidy

* Only submit reason ""broken_site"" for legacy broken site dialog

* Add adjustResize param to allow submit button to appear above keyboard

* Fix case of string

* Cody tidy

* Code tidy

* code tidy

* Remove dispatcher provider attempt (hard to reason about)

* Upgrade to latest stable WorkManager

* Remove empty string check to make inline with iOS

* Code tidy

* Code tidy

* Fix memory leak

* Update api call to include broken site reason

* Update legacy broken site dialog to be only about broken sites

* Code tidy from PR feedback

* Remove unused assets

* Move all survey-related classes to the survey package

* Change from doOnPreDraw to doOnNextLayout to fix multi-window crash

* Switch to if statement instead of a when with a single item in it

* Add intent flag required to launch Play Store from non-activity context

* Make cornflower blue the default accent color for the whole app

* Fixing lint warnings

* Dismiss keyboard when transitioning away from a keyboard-using fragment

* Switch from postValue to set value to try fix flakey test

* Ensure UI methods are called from the Main thread",#459,https://github.com/duckduckgo/Android/pull/459,memory leak
https://github.com/duckduckgo/Android/commit/b5485b4ce45c5bc76f091c63578c3ce8a8e569e5,Feature/automatically clear data options (,"* Update the settings UI to add new section; tidy up layout

* Hook in dialog fragment for ""what"" part of data clearing

* Further UI tidy up to make disabled state look nice enough

* Tweak disabled text colors for better contrast

* Updating local branch since AndroidX conversion

* Update bottom sheet behavior to new material design value

* Basic functionality of automatically clearing data complete

UX might still need some work in places

* Fix memory leak in dialogs

* Remove potential leak from clear data fragments

* Move duration values into enum and allow for process kill only option

* WIP - Basic timer approach to background scheduling

* WorkManager approach to clearing data

* Utilising WorkManager to clear data in the background at the right time

* [WIP] more work to finish automatic data clearing

* Tidy up global state of whether clearing is happening or not

* Adding some documentation where necessary to explain workarounds

* Fixing tests

* Add debug-only clear option which clears after 5 seconds

* Tidy up global app clearing state observer and improve tests

* Manual flushing of cookies before clearing and after restoring DDG ones

* Add basic privacy view to mask the existing content while clearing

* Move more logic to view model

* Add pixels for selected configuration for automatic data clearing

* Remove repeated toast requests upon data clear

* Cody tidy

* Move Clear What and Clear When classes to their own class

* Code tidu

* Code formatting

* Remove editorconfig which slipped into the commits

* Remove parameterization of test class which was making intent less clear

* Remove extra line

* Code formatting

* Simplify enums for ClearWhat/ClearWhen and add extension functions

* Change pixel value for clearing everything to `d` for `data`

* Simplify enums for ClearWhat/ClearWhen and add extension functions

* Roll back to a slightly older version of Mockito; fails on P otherwise

Seemockito/mockito#1510for more info

* Tighten responsibilities of DataClearerTimeKeeper

* Fix: attributes in a color selector is only available to >= API 23

However, when used inside a custom view, it works fine. So there is a wrapper around the switch which lets us use attributes inside a color selector

* Stop use of color selector and remove custom view",#405,https://github.com/duckduckgo/Android/pull/405,memory leak
https://github.com/duckduckgo/Android/commit/f44b19258d7da1929c362bbe3d0fc6840b1c1069,Feature/bug fix webview state too large (,"* Store last seen global state; likely a small bug that we weren't already

* Wire tab activity and FireDialog to delete web view sessions

* Formatting

* Update cache size comment to indicate 10 MiB instead of 10 MB

* Change variable name from map to cache

* Improve comment on sizeOf function",#310,https://github.com/duckduckgo/Android/pull/310,cache size
https://github.com/Catrobat/Paintroid/commit/fdae460e15d55ee586536b1285189cbb01c516af,Merge pull request,PAINTROID-347 ANR in ColorPickerDialog,#1002,https://github.com/Catrobat/Paintroid/pull/1002, ANR 
https://github.com/Catrobat/Paintroid/commit/5460416a01e8073d68ffbc610ac72a3db4663d98,PAINTROID-347 fixed ANR in ColorPickerDialog,,,, ANR 
https://github.com/Catrobat/Paintroid/commit/5927afe212bdc0c45a3b75268a4be047bf9bbdd5,Merge pull request,"PAINTROID-255 Fixed the High frequency ANR ""input dispatching timed out",#915,https://github.com/Catrobat/Paintroid/pull/915, ANR 
https://github.com/Catrobat/Paintroid/commit/e707b917202a19b015c5a3e46a2b0044e9d2f8a8,PAINTROID-255 fixed the high frequency ANR and refactored the respective files to Kotlin,…ive files to Kotlin,,, ANR 
https://github.com/Catrobat/Paintroid/commit/c45ec609e3cf817eb40c38af67dfdb81a8b9fd15,Merge pull request,"…_leak_in_fill_tool

PAINTROID-61: Fix memory leak in fill tool",#630,https://github.com/Catrobat/Paintroid/pull/630,memory leak
https://github.com/Catrobat/Paintroid/commit/4b701720aeb3d02990d55eabe64b4151dbd1772d,PAINTROID-61: Fix memory leak in fill tool,,,,memory leak
https://github.com/Catrobat/Paintroid/commit/84174f007052c26842da5722d48da10e208d24a8,JENKINS-278 Collect the dex and apk size statistics from the debug APK.,Before it was collectect from a test APK.,,,apk size
https://github.com/Catrobat/Paintroid/commit/3d10c461cce344e9613e3b1a122e482813df8b37,[GSoC18] Fix resource property,"* `resources` defines _java_ resources, it should be `res` which defines android resources.
* All if this is however redundant, as the resources and source files are
  in the default location, which lead to the resources being also
  included as java resources and doubled the apk size. Oof.",,,apk size
https://github.com/Catrobat/Paintroid/commit/b57cfb4cb18b83bd260ab5f544a69070866a41d6,PAINT-304: Refactor CommandManager and Layer menu,"* Rewrite most of `CommandManagerImplementation`, `UndoRedoManager` and `LayerBitmapCommandImpl`.
  * The new implementation is called `DefaultCommandManager`, to avoid
    blocking the ui thread an `AsyncCommandManager` class is used via composition.
  * The `CommandManager` is now fully unit tested, due to the asynchronousnes of
    `AsyncCommandManager` this does not apply to the later.
  * The `initialStateCommand` serves as a command to setup the `LayerModel` which can not be undo.
* Refactor Commands
  * The commands now get a `LayerModel` instance instead of only the current layer,
    this allows to directly modify the model and not hack around it as done previously
* Add a `CommandFactory` class that should be used by Tools to create commands.
  This should lessen the binding between commands and Tools.
* Remove the `Observer`/`Observable` binding between commands and tools as it may create memory leaks on top of
  other problems.
* Split up `LayerCommand` into `AddLayerCommand`, `RemoveLayerCommand` and `MergeLayersCommand`
* Add a `CompositeCommand` class that allows to add multiple commands opaquely to the commandmanager as a single command.
* Add a `LayerModel` class
  * This class unifies the model aspect of something previously deeply buried in the
    `LayerListener` and `LayerAdapter` classes.
* Add a `LayerContracts` interface that binds any communication between `LayerPresenter`,
  `LayerAdapter`, `LayerModel`, `Layer` and `LayerMenuViewHolder`
* Rewrite `LayerAdapter` to a MVP pattern, reuse the new drag-and-drop behaviour from Catroid
* Add tons and tons of local unit tests",,,memory leak
https://github.com/Catrobat/Paintroid/commit/7aa5147611b648bba5f5aca3379b5044aa6ed350,PAINT-235: Fix unit tests,"* Fix false negative unit test in `BrushPickerIntegrationTest`
* Reenable radiobuttonsbehavior test as it's not failing anymore
* Refactor `BrushPickerIntegrationTest` to improve readability
* Remove redundant `SystemAnimations` calls in `ColorDialogIntegrationTest`
* Move `SystemAnimation` calls from `WelcomeActivityIntentsTestRule` to
  `IntroTestBase` class to remove duplication
* Refactor `ShapeToolIntegrationTest` to improve readability
* Fix `ShapeToolIntegrationTest` by adding `SystemAnimationsRule`
* Move `testCreateManyLayers` to junit tests
  Why: This Test was created to prove a memory leak, the current
  implementation took way too long to test this, the new one
  does functionally the same directly in less time
* Make testToolSelectionToast wait for any other toasts to disappear
* Fix failing ToolSelectonIntegrationTest
  * Fix and rename `previousAndNextDisplayed`
  * Rename all contained unit test with integration test naming scheme
  * Convert test methods to avoid using private variables directly and
    use espresso methods instead
* Add `clickOutside` method to click outside a matched view
* Fix ColorPicker tests failing in Portrait mode because `scrollTo`
  expects a scrollable view even when the actual element is visible
* Swipe navigation drawer up after opening to avoid scrolling on
  small displays
* Improve DrawingSurface locking mechanism
* Change ColorPibkcer dialog landscape layout to fix failing landscape tests",,,memory leak
https://github.com/Catrobat/Paintroid/commit/caf4dc1120e61f0e6eefdabecaf6349270b43004,PAINT-209 Delete old Layer Commands to fix Layer Memory Leak,,,,memory leak
https://github.com/Catrobat/Paintroid/commit/cba367286d36462a70964ed179824b4c61d3b379,PAINT-77: drawing surface performance,"* wait/notify monitor added for drawing thread runnable
* no more CPU utilization when app is idle
* new Tool interface: startTool",,,cpu utilization
https://github.com/Catrobat/Paintroid/commit/b3a45107f8ffe2a8a70f0798b9dbfbaf3abbab61,Save loaded image bug fixed,"Prevent out of memory when returing to Pocket Code by scaling loaded images
MenuFileActivityIntegrationTest now deletes files that were created by the tests",,,out of memory
https://github.com/Catrobat/Paintroid/commit/600eb19f5ada1cf79c11025e7e4ca8205a5261d3,more memory leak experimenting...,,,,memory leak
https://github.com/Catrobat/Paintroid/commit/b9674a017176fa2f8034408b2b0845817d2ba5b6,test suite memory leak experimenting...,,,,memory leak
https://github.com/Catrobat/Paintroid/commit/1e4984ce480a005e4c410c6c477dd83bce1625d5,memory leak fix test,,,,memory leak
https://github.com/mullvad/mullvadvpn-app/commit/31d8f17dd5140e9a06007e57206fa9b5e700b463,Handle out of memory exception when parsing app icon as bitmap,,,,out of memory
https://github.com/mullvad/mullvadvpn-app/commit/74581f2c91015c3afb498f32c6ab2f8d21f949ae,Fix memory leak at LocationNode,,,,memory leak
https://github.com/mullvad/mullvadvpn-app/commit/04d0d6a66098560fc4e53d9a2c1c34ead2c4914f,Let relay selector pick entry & exit nodes in test_bridge,"We have seen `test_bridge` fail due to high latency if slow + far-away
servers were selected. Hopefully delegating the task of picking
appropriate entry & exit relays will help mitigate this.",,,latency
https://github.com/seemoo-lab/AirGuard/commit/8f79501322a5242d2cf70917120e2600ddaad80a,Adding large heap to prevent Samsung OOM crashes,,,, oom 
https://github.com/seemoo-lab/AirGuard/commit/5087f7471b60909e57e8112b79fc83632033acf3,Fixing memory leaks due to BLE scanning,,,,memory leak
https://github.com/zulip/zulip-mobile/commit/f791bb50bc1b197e0e9009686200b85b0fad5f2a,nav: Enable react-native-screens,"This greatly improves performance on Android with many screens on
the nav stack!  On iOS, the effect is less dramatic, but still
significant.

Chris investigated this back in 2020 (#4111), and sent a draft PR
to enable it (#4161), but we never followed up, oops.  Better late
than never.

Experiment to repro the perf difference:

  1. push like 30 ChatScreen screens to the stack, by following a
     loop of internal links;

  2. go to one with some backlog (by following the ""up"" icon to the
     stream message-list);

  3. try scrolling around.

Before, on Android: extremely laggy.  Also pretty laggy even just
following those links, after the first few.

After: pretty much as smooth with 30 screens on the stack as with the
first one.

On iOS, things seem to already be about as smooth with 30 screens as
with one, even before this change; in particular, scrolling through
the message list is very smooth.  (That's even though the app in my
iOS testing is fairly sluggish on the first few navigations.  I was
using the simulator on an underpowered Mac Mini, vs. the Android
emulator on my fast Linux desktop.)

But Xcode does report (under the ""Debug View Hierarchy"" button) that
before the change, tons and tons of views remain mounted when many
screens are on the stack; after the change, they don't.  I reproduce
the same observations Chris reported a couple of years ago here:#4111 (comment)More concretely, the memory usage (which Xcode reports at the same
time) gets cut way down: around 700 MB before, and around 300 MB
after.  If nothing else, that should mean that the app is less
likely to get killed by the OS if the user switches away -- so is
more likely to pick up immediately where they left off, rather than
have to reload from scratch, if the user switches back.Fixes:#4111",,,sluggish
https://github.com/zulip/zulip-mobile/commit/1b0d905db92815f65a86c08cac11150699ddf6ba,getMessageListElements tests: Remove not-so-helpful deepFreeze calls,"I'm not sure we've ever caught a bug using `deepFreeze` like this. I
think such a bug would come with a pretty strong code smell that
we'd catch in review.

We've also gotten better about marking our Flow types read-only, and
that makes the `deepFreeze`s even more likely to be redundant.",,,code smell
https://github.com/zulip/zulip-mobile/commit/3b833dc6bec195d6766cf89a6b0682110fb85e82,TranslatedText [nfc]: Inline last caller and dissolve,"There really hasn't been a use for the ""without applying any
styling"" part of TranslatedText's interface. Everywhere we'd ever
want to use `TranslatedText`, we'd want to apply to the text either

- Zulip's signature default styling (including for dark/light
  themes), or
- That default styling, plus some special styling for the callsite

This was true of TranslatedText's last caller, removed here. It was
also true of the two other callers we removed in the previous
commit.

But the point applies in general:

1. We're responsible for applying styles to text in the entire React
   component tree. Those styles must be computed with input from our
   app-specific default styles in every case.
2. `TranslatedText` is used in the React component tree and nowhere
   else. It can't be used anywhere else because it's a React
   component.
3. So we'd need to apply some styles (at least the default styles)
   everywhere `TranslatedText` could be used.

That's not to say there isn't a use for bare, styleless strings that
are translated. We create those as plain strings, using our `_`
wrapper around `intl.formatMessage`. We only *need* those plain
strings when a React element won't do; in particular, when we're
rendering text through a thinly wrapped native API that asks for a
string [1]. Like when we tell the iOS native action sheet what its
buttons should say.

[1] I think it's probably a bug to use the plain strings for
    anything else. `RawLabel`, which we'll soon rename to
    `ZulipText`, is where we define our app-specific default text
    styles. Those default styles are important: they ensure
    readability in dark and light mode, they help set a consistent
    look-and-feel, and they've been chosen to represent Zulip. So
    any code that renders text and doesn't clearly go through that
    component, but could, should be a code smell.",,,code smell
https://github.com/zulip/zulip-mobile/commit/9d715085360d4a654911e276d89edf1f2ef57bd8,user [nfc]: Comment on possible future getHaveServerData checks.,"I don't see an immediate way we could check right now whether any
server data we have is actually for the current active account, or
for some other account (presumably for a previous active account,
and left over due to our consistency-lacking data storage model.)

The reasoning in the comment below this, about why it's mostly fine
for this function not to spot inconsistencies between pieces of the
server data, probably also holds between the server data and accounts.
But there are also some plausible future changes, including at least
one we actually intend to make soon anyway, that would make it easy
to add some such checks, and at that point it'd be nice to do so.
So add a comment about those.",,,data storage
https://github.com/zulip/zulip-mobile/commit/5359d7bd09b5c0b131a18b5744f45edf5f5158a3,"generateInboundEvents [nfc]: Add another TODO, following a relevant change.","…hange.

The previous commit, where we removed an early return, worsened a
latent but tiny bug: some code that will sometimes send an
unnecessary 'read' event is now being run on changes to
`htmlPieceDescriptorsForShownMessages`. Before, it was being skipped
by the early return [1].

The 'read' event, we expect, won't have a really noticeable effect
beyond a potential slight slowdown; it tells the WebView that some
messages -- which the WebView already knows are read -- are read.

[1]https://chat.zulip.org/#narrow/stream/243-mobile-team/topic/message-list.20diffing/near/1222510",,,slowdown
https://github.com/zulip/zulip-mobile/commit/1c9299f6d7540a8f6d47d93a30c0ff9aa48c5b92,MainTabsScreen: Turn off lazy loading.,"This prevents the delay when loading a tab for the first time after app
open, which can often be significant.

This will likely add some time to the first load (since it'll render the
Streams, PMs, and other tabs for the first load), but it will cut down
on the latency when the user presses those. I wasn't able to profile the
time-to-interactive (we don't have an easy way to measure it that I've
found), but my inclination is that it's better to add a bit of time to
our (already long) TTI than it is to have switching tabs take a
significant amount of time.

What we're really prefer is to have the main screen not block on loading
the background tabs, but eagerly start loading them as soon as the app
loads. However, that's not an option that react-navigation provides.

See discussion on CZO:https://chat.zulip.org/#narrow/stream/243-mobile-team/topic/easy.20performance.20wins/near/1207470",,,latency
https://github.com/zulip/zulip-mobile/commit/89cff7c24721776d3c9d9ff6ec94f1c32f89214c,unread: Convert unread.streams to Immutable!,"This makes us quite a bit faster at handling a message being marked
as read!  That's a frequent and latency-sensitive path -- whenever
the user is reading a conversation and sees some messages that were
unread, this is part of the path to updating the ""N unreads"" banner
at the top of their view.  Measurements described below.

As we convert the other parts of the unread state, we'll want to fold
their reducers into this file too, and in fact combine the logic.  No
need to have four copies of all this, most of which is the same.

While making this conversion, I notice that this reducer doesn't reset
state on LOGIN_SUCCESS like it does for LOGOUT and ACCOUNT_SWITCH.  In
general we're pretty consistent about resetting state on those latter
two, but many of our reducers do so on LOGIN_SUCCESS while many others
don't.  I've filed#4446for fixing them all up to be consistent.

Performance measurements:

I made some manual performance measurements to evaluate this change
and the others in this series.  I used a test user with lots of
unreads on chat.zulip.org, on a few-years-old flagship phone: a
Pixel 2 XL running Android 10.  The test user has 50k unreads in this
data structure (that's the max the server will send in the initial
fetch), across about 3400 topics in 27 different streams.

Before this series, on visiting a topic with 1 unread, we'd spend
about 70ms in this reducer, which is a long time.  We'd spend 300ms in
total on dispatching the EVENT_UPDATE_MESSAGE_FLAGS action, including
the time spent in the reducer.  (The other time is probably some
combination of React re-rendering the components that use this data;
before that, our selectors that sit between those components and this
data recomputing their own results; and after that, React Native
applying the resulting updates to the underlying native components.
We don't yet have clear measurements to tell how much time those each
contribute.)

After this change, we spend about 30-50ms in the reducer, and a total
of 150-200ms in dispatch.  Still slow, but much improved!  We'll speed
this up further in upcoming commits.

For EVENT_NEW_MESSAGE, which is the other frequent update to this data
structure, not much changes: it was already ""only"" 4-9ms spent in this
reducer, which is too slow but far from our worst performance problem.
After this change, it's usually <=1ms (too small to measure with our
tools, until recently), and the longest I've seen is 3ms.  The total
dispatch time varies widely, like 70-200ms; not clear if it changed.

There is one performance regression: we now spend about 100ms here on
REALM_INIT, i.e. on handling the data from the initial fetch.
Previously that time was <=1ms; we just took the data straight off the
wire (well, the data we'd already deserialized from the JSON that came
off the wire), and now we have to copy it into our more
efficiently-usable data structure.  As is, that 100ms is already well
worth it: we save more than 100ms, of visible latency, every time the
user reads some unread messages.  But it's enough to be worth
optimizing too, and we'll do so later in this series.

Fixes-partly:#4438",,,latency
https://github.com/zulip/zulip-mobile/commit/efbb90b8ed722704018002f27226f67609c57772,MessageList: Clear ready retry interval on componentWillUnmount.,"Avoid a memory leak in the unlikely event that MessageList unmounts
less than 30ms after it mounts.",,,memory leak
https://github.com/zulip/zulip-mobile/commit/6768445232543f5bdf953ffaae53e9fadf576817,docs/release: Submit early for App Store review.,"This saves some latency.  If we had a lot of beta releases we never
send to prod, there might be value in skipping App Store review for
those, but we don't.

UI description is a bit approximate because I don't have it in front
of me.  When I do the next release, I'll be able to see the UI again
and can fill in the exact text of things.",,,latency
https://github.com/zulip/zulip-mobile/commit/b2420106de9d2bd8fd6a3cb20c2d55e3dcd8fa38,"ios: Skip a complication in upstream template, explaining why.","This corresponds tofacebook/react-native@a2ef5b85d, one of the
changes in the upstream template from RN v0.57 to RN v0.59.

It's a bit hard to understand what the commit is saying.  The docs
it's referring to help a lot -- they've since been deleted, but can be
found here:facebook/react-native-website@6bf0a02fdOn studying the commit, and the code in RN itself which it interacts
with... I'm pretty sure it actually does nothing useful!  And it makes
this code more complex, and also gives a confusing picture of what the
APIs it's using actually do.  So, instead of applying it, just add a
comment saying why not.

Details on reaching that conclusion follow.

First: the commit message links to two issues it's supposed to fix.
But those are both failures at *build* time, with `main.jsbundle`
missing.  That commit does nothing at build time.  That alone makes it
impossible for it to fix the linked bugs, short of some surprising
magic that would cause it to affect build-time behavior.  No such
magic is called out in the commit message (and there's no discussion
on the PR, except procedural), so I'm tempted to think the author and
reviewer were simply confused here.

If they were, they were only as confused as the docs were before that.

Well, and after reading RCTBundleURLProvider... it does indeed look
like the docs were just confused.  First, in the headerdoc for a
version of this `jsBundleURLForBundleRoot:` method (in
`React/Base/RCTBundleURLProvider.h`):

  /**
   * Returns the jsBundleURL for a given bundle entrypoint and
   * the fallback offline JS bundle if the packager is not running.
   * if resourceName or extension are nil, ""main"" and ""jsbundle"" will be
   * used, respectively.
   */

So if the packager isn't running, this code already falls back to
getting the `main.jsbundle` resource -- the same thing this new logic
in the template also does.

Well, but what if a packager is somehow running in release mode?  We
don't want to use it, so it'd be good to skip even looking for it --
which will also save latency.  Is the commit helpful for that reason?

In fact, RCTBundleURLProvider takes care of that already too.  Looking
at the implementation shows that if !RCT_DEV (a synonym of !DEBUG),
the packager unconditionally ""isn't running"" -- the code to look for
it is `#if`'d out entirely.

So the extra complication in that upstream commitfacebook/react-native@a2ef5b85dcan't possibly fix the issues it's
intended to fix; and in fact it has virtually no effect at all.
Therefore, skip it.",,,latency
https://github.com/zulip/zulip-mobile/commit/c94586ca973397df4ed5e3dc85b5b9b4a4e0d368,messageActionSheet: Stop using translated strings as identifiers.,"It's already kind of a code smell to be using friendly user-facing
phrases like ""Add a reaction"" as identifiers internal to the code to
distinguish one callback from another.

One sign of where that can lead is how several phrases like ""Unmute
stream"" are duplicated in multiple places so that things will break if
they don't match up, and there's nothing to guarantee they match if we
go tweak one of them for wordsmithing's sake and forget to update the
others.

It gets worse when the identifier isn't even the string that's in this
code at all, but whatever *translated* string we might use in the
user's language.  Those are data that can, and ought to be able to,
change without notice, so they shouldn't affect the control flow we
have to reason about.

For a start, switch to the English versions as internal identifiers,
translating them only where we actually send them to be shown to the
user.  Subsequent steps will follow up.

This test was the one spot we used `extractString`, a tiny helper
function; cut it out.",,,code smell
https://github.com/ukanth/afwall/commit/b7d7d1a870936b6515ddba5e6de33bc9281451f4,memory leak fixes,,,,memory leak
https://github.com/ukanth/afwall/commit/ab223932738bad0535e2f4dbb5db8adbc3ccb736,Minor memory leak on App detail screen,,,,memory leak
https://github.com/ukanth/afwall/commit/c5ad660d2d07560d95b466dc9615fb555d05f2d4,Fix: another rx event memory leak,,,,memory leak
https://github.com/ukanth/afwall/commit/5128179bf973dafb24dafd076749421cee467272,Fix: memory leak due to RX event,,,,memory leak
https://github.com/ukanth/afwall/commit/03ce84cfcafe2c834b62e2ff10a003d0b2300d7d,Fix: static memory leak,,,,memory leak
https://github.com/ukanth/afwall/commit/abb10417e8415cd306d0c64ff773b8d449902ed2,memory leaks and refactor,,,,memory leak
https://github.com/ukanth/afwall/commit/7db9b70c8c3e6ae71335f8284b3f3674b961496a,Fixed memory leak,,,,memory leak
https://github.com/ukanth/afwall/commit/e4d7ac74e76a48337ee199c093c817a05c626e05,Fixed static reference memory leak,,,,memory leak
https://github.com/ukanth/afwall/commit/f1c69fd1c63774d52f7899a09a0d06859b958ad4,Fix startup delay change,,,,startup delay
https://github.com/ukanth/afwall/commit/c97b1ae55e82912d0743c5fe2a640749b9a19664,Added startup delay as optional,,,,startup delay
https://github.com/ukanth/afwall/commit/1863eff3b3cb55e6a29493f5283bd44aa8d193cf,Android bug: 78377 - NoClassDef issue + Out of memory issue with icon,,,,out of memory
https://github.com/ukanth/afwall/commit/b4dd05d798067d340aba71830ff6eea5fae37636,Possible fix for memory leak and improve performance if load icons,"…,#383",",",/ukanth/afwall/commit/b4dd05d798067d340aba71830ff6eea5fae37636,memory leak
https://github.com/peercoin/peercoin_flutter/commit/3ca6d3db8fffc81393b22462783163ccad80d7d2,1.2.4 (,"* Translated using Weblate (Chinese (Simplified))

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/zh_Hans/* Translated using Weblate (Portuguese)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/pt/* Translated using Weblate (Spanish)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/es/* Translated using Weblate (Norwegian Bokmål)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/nb_NO/* Translated using Weblate (Korean)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/ko/* Translated using Weblate (Hindi)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/hi/* Translated using Weblate (Vietnamese)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/vi/* Translated using Weblate (Japanese)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/ja/* Translated using Weblate (Swedish)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/sv/* Translated using Weblate (Danish)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/da/* Translated using Weblate (Chinese (Traditional))

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/zh_Hant/* Translated using Weblate (Icelandic)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/is/* Translated using Weblate (Burmese)

Currently translated at 70.0% (349 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/my/* Translated using Weblate (Catalan)

Currently translated at 70.0% (349 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/ca/* Translated using Weblate (Turkish)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/tr/* version bump

* 2dos

* 2do

* 2do

* 2do

* Translated using Weblate (Chinese (Simplified))

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/zh_Hans/* Translated using Weblate (Portuguese)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/pt/* Translated using Weblate (Spanish)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/es/* Translated using Weblate (Norwegian Bokmål)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/nb_NO/* Translated using Weblate (Korean)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/ko/* Translated using Weblate (Hindi)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/hi/* Translated using Weblate (Vietnamese)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/vi/* Translated using Weblate (Japanese)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/ja/* Translated using Weblate (Swedish)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/sv/* Translated using Weblate (Danish)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/da/* Translated using Weblate (Chinese (Traditional))

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/zh_Hant/* Translated using Weblate (Icelandic)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/is/* Translated using Weblate (Burmese)

Currently translated at 70.0% (349 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/my/* Translated using Weblate (Catalan)

Currently translated at 70.0% (349 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/ca/* Translated using Weblate (Turkish)

Currently translated at 100.0% (498 of 498 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/tr/* Translated using Weblate (Norwegian Bokmål)

Currently translated at 100.0% (503 of 503 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/nb_NO/* Translated using Weblate (Swedish)

Currently translated at 100.0% (503 of 503 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/sv/* Translated using Weblate (Danish)

Currently translated at 100.0% (503 of 503 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/da/* Translated using Weblate (Icelandic)

Currently translated at 100.0% (503 of 503 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/is/* Translated using Weblate (Chinese (Simplified))

Currently translated at 100.0% (503 of 503 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/zh_Hans/* Translated using Weblate (Chinese (Simplified))

Currently translated at 100.0% (503 of 503 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/zh_Hans/* Translated using Weblate (Chinese (Traditional))

Currently translated at 100.0% (503 of 503 strings)

Translation: Peercoin Flutter/Translations
Translate-URL:https://weblate.ppc.lol/projects/peercoin-flutter/translations/zh_Hant/* Fix themeing problem with dark mode toggle switches, checkboxes, and expandable icon

* Fix UI rendering issue in app settings screens

* Fix themeing problem with dark mode checkboxes and expandable icon

* Fix themeing problem with dark mode expandable icon and checkboxes

* skeleton for wallet transaction signing

* Fix UI rendering issue in app settings screens

* add transaction signing

* add e2e test for transaction signing

* Fix transaction signing error handling

* Fix error handling in transaction signing

---------

Co-authored-by: Marius Kjærstad <mkjaerstad@protonmail.com>
Co-authored-by: skiving <skivingtonqtfeeva@gmail.com>",#246,https://github.com/peercoin/peercoin_flutter/pull/246,UI rendering
https://github.com/fennifith/Alarmio/commit/02719d01b41aa250eef8e2e4f9ebdb011d0dc1f2,"fixed memory leaks, converted more classes to kotlin",,,,memory leak
https://github.com/thunderbird/thunderbird-android/commit/9715cfc45e833dee53c9db1373d509a853a6bec4,Merge pull request,Fix gradle properties to avoid out of memory,#7173,https://github.com/thunderbird/thunderbird-android/pull/7173,out of memory
https://github.com/thunderbird/thunderbird-android/commit/1e6eaae18e403227e806aecf93c64a53ee74d36b,"Fix Out of Memory and Gradle daemon disappeared issues, also improves build speed",… build speed,,,out of memory
https://github.com/thunderbird/thunderbird-android/commit/1b410e6ea15e3184dc28e1d6f1a151e2da661b52,Change memory allowance to 3 GB to avoid compilation out of memory,,,,out of memory
https://github.com/thunderbird/thunderbird-android/commit/ce6f080e839b97b2913848d03aa5406f957722f1,"dismiss apg deprecation dialog on pause, to avoid potential memory leak",,,,memory leak
https://github.com/thunderbird/thunderbird-android/commit/58efee8be21f2c21b1cf2db34e15cf9d163fcbed,Avoid StrictMode error in OpenPgpApi,"E/StrictMode(9278): A resource was acquired at attached stack trace but never released. See java.io.Closeable for information on avoiding resource leaks.
E/StrictMode(9278): java.lang.Throwable: Explicit termination method 'close' not called
E/StrictMode(9278): 	at dalvik.system.CloseGuard.open(CloseGuard.java:184)
E/StrictMode(9278): 	at android.os.ParcelFileDescriptor.<init>(ParcelFileDescriptor.java:179)
E/StrictMode(9278): 	at android.os.ParcelFileDescriptor.<init>(ParcelFileDescriptor.java:168)
E/StrictMode(9278): 	at android.os.ParcelFileDescriptor.createPipe(ParcelFileDescriptor.java:362)
E/StrictMode(9278): 	at org.openintents.openpgp.util.ParcelFileDescriptorUtil.pipeFrom(ParcelFileDescriptorUtil.java:34)
E/StrictMode(9278): 	at org.openintents.openpgp.util.OpenPgpApi.executeApi(OpenPgpApi.java:222)
E/StrictMode(9278): 	at org.openintents.openpgp.util.OpenPgpApi$OpenPgpAsyncTask.doInBackground(OpenPgpApi.java:189)
E/StrictMode(9278): 	at org.openintents.openpgp.util.OpenPgpApi$OpenPgpAsyncTask.doInBackground(OpenPgpApi.java:1)
E/StrictMode(9278): 	at android.os.AsyncTask$2.call(AsyncTask.java:288)
E/StrictMode(9278): 	at java.util.concurrent.FutureTask.run(FutureTask.java:237)
E/StrictMode(9278): 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
E/StrictMode(9278): 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
E/StrictMode(9278): 	at java.lang.Thread.run(Thread.java:841)",,,resource leak
https://github.com/thunderbird/thunderbird-android/commit/0f39a9d5badf5ee185f11aab2f24189ecd7cb169,"""upgrade"" the LocalKeyStore","Implement an ""upgrade"" capability for the key store file,
and then use it to delete the old file.

The existing certs in the old file are not a security
risk, but they are now useless because the format of
their aliases was changed in commita4440b4.  They now are
just taking up storage space and memory.

Users will need to re-accept *ALL* certificates that they had
previously accepted and are still using.  (Actually, this requirement
was effective with commit4b57d79.  Before that, certificates whose
Subject matched did not require re-accepting.)",,,storage space
https://github.com/thunderbird/thunderbird-android/commit/c416f02d523a9b891374b87631eb2297905758ea,Improve BACK button handling for MessageView,"Remove memory leak from referencing MessageView context from the
Intent that is created to go back to MessageList. MessageView is no
longer hardcoded to go back to MessageList, it instead uses an Intent
given at creation to get back to the originating Activity.

Try our best to restore the MessageList in its previous state when
""Manage BACK button"" option is enabled:
Since MessageList lives in its own task, we look for the previous
active task and check whether its top activity matches it. If it does,
we just finish MessageView and Android will automatically restore the
previous task. If it doesn't, we launch the originating Intent (and
MessageList state will be lost).

If option is off, we get the regular Android behavior: got back to the
previous screen, whenever it's the MessageList or another application
if the user long-pressed HOME.

The consequence of this is the need for a new permission in order to
check the previous active task: android.permission.GET_TASKS",,,memory leak
https://github.com/thunderbird/thunderbird-android/commit/4ea6c1603bf6850121f77afc765c9265ebdef325,We've been seeing a lot of FCs on htmlifcation of large messages due to,"running out of memory during our heavy HTMLification. Try to be a bit
lighter on the poor RAM if a plain text message is big.",,,out of memory
https://github.com/thunderbird/thunderbird-android/commit/9db44bf4a9895a340a6ff81553f7f4b411dae9fa,MessageProvider: making sure exposed cursor gets dereferenced on close (and closed on finalization) to prevent memory leak,…e (and closed on finalization) to prevent memory leak,,,memory leak
https://github.com/thunderbird/thunderbird-android/commit/7028a4c1672f4db5286167c0d68e0136ba7c912c,Fixes issue 2144,"- Removed the contact names cache (memory leak)
- Changed Contacts.searchByAddress() to Contacts.getNameForAddress(). Cursor is now immediately closed.
- Only try to resolve contact names when ""Global settings"" -> ""Show contact name"" is checked
- Never resolve contact names if number of recipients exceeds a threshold",,,memory leak
https://github.com/thunderbird/thunderbird-android/commit/75984939d1a1d7d64721c4816ffc6b125dda1eb9,"Don't embed helper instance inside a data transfer object (ideally, the populate() method should be moved outside that DTO to an external service/helper) as this might lead future development to in…",…he populate() method should be moved outside that DTO to an external service/helper) as this might lead future development to introduce unwanted dependency graphs (= memory leaks),,,memory leak
https://github.com/thunderbird/thunderbird-android/commit/0bb115ca42469fdfb0c652bd3a126a707eb37e76,Actually catch an OOM in getTextFromPart,,,, oom 
https://github.com/thunderbird/thunderbird-android/commit/c6aa505ffe7dac00210a1109687262e4ca72ddf3,improve the method docs on getTextFromPart,Backport an update to getTextFromPart from AOSP as of 290348 - dealing with OOM as we import large messages,,, oom 
https://github.com/rozPierog/Cofi/commit/aa7049569c0451423280cfe0fb96ea9b37ec087d,Cleanup code smell from previous attempts,,,,code smell
https://github.com/rozPierog/Cofi/commit/3c326596cf777d373667104443435fb46fd11c1b,Fix sluggishness of RecipeEdit and disable autofocus,,,,sluggish
https://github.com/rozPierog/Cofi/commit/69d056ab977c2118e4a1e78a2e889ca6c2a31e78,Create a runner that compares apk sizes (,,#46,https://github.com/rozPierog/Cofi/pull/46,apk size
https://github.com/Team-Ladefuchs/ladefuchs-android/commit/05c641f1090d50e33309bddb49bf71ead3a8c5d8,chore:,"- set API Key for fetching images and check the response code
- rename Berlin-Reinickendorf to Berlin
- use potential memory leak while using the HTTP client",,,memory leak
https://github.com/AnaelMobilia/NextINpact-Unofficial/commit/edf6c64744706cbe65094839c89f49eb3d9cf0cf,Catch OOM si trop d'images chargées sur une device avec peu de RAM,,,, oom 
https://github.com/AnaelMobilia/NextINpact-Unofficial/commit/5153a252c41c47137ec17ef527c72a3774d9d212,Fix memory leak on scrolling listview,,,,memory leak
https://github.com/spaceapi-community/my-hackerspace/commit/e8b158b5158e4a71787beba2fcf38d88ab341986,use weak reference to the application context to avoid memory leak,,,,memory leak
https://github.com/kubenav/kubenav/commit/7ee1019352bd50d2162dba0d69ce61f067b1786d,Improve default metrics,"Instead of container_memory_usage_bytes we are now using
container_memory_usage_bytes for the memory metrics now. The advatange
of this that the graphs will be consistent with the metrics retrieved by
the metrics API.

For the node and cluster metrics we are also switching to this metric.
So that the results for the graphs are the same as reported by kubectl
top nodes.

We also have adjusted the metrics for CPU usage and the Network I/O.",,,cpu usage
https://github.com/tasks/tasks/commit/72101b2ebb0a2a84847d8cf3f0a27cb41731c398,Fix action mode memory leak,,,,memory leak
https://github.com/tasks/tasks/commit/bce856c94ccdd3060ab97a215df7555ec3d2ff7c,Retry bitmap encode with more compression if out of memory errors occur,,,,out of memory
https://github.com/tasks/tasks/commit/16a18f5d1f862d46f15175c036efaad0297f65de,Fixed window memory leaks when rotating task edit screen while control sets are open,…l sets are open,,,memory leak
https://github.com/tasks/tasks/commit/589ba589a274338fad423cf97358a15a44532816,Catch out of memory error when loading contact picture,,,,out of memory
https://github.com/tasks/tasks/commit/70539e6e85a805362a12a216e38aa66aec72007c,Fixed occasional out of memory crash when taking pictures for attachments,…ents,,,out of memory
https://github.com/tasks/tasks/commit/0448778d64805280fec260a0bc92f7e957cda717,Scale bitmaps to prevent out of memory errors,,,,out of memory
https://github.com/tasks/tasks/commit/ae11c49c2d495221d4fb5381265286c0affaba15,Fixed threading in C2DM registration that could cause an ANR on first sync:,… sync:,,, ANR 
https://github.com/tasks/tasks/commit/eaebec08505bc274fcbe256645b1bf38791bdbb9,Fix for issues created by OEM,"- yellow line while gesturing
- crash moving google task around
- anr when first installing app",,, ANR 
https://github.com/tasks/tasks/commit/a30fbce42d34b21175a29854a4ceea4ba5376275,"Improved perf in reminder scheduling - sleep for a bit to prevent ANR in scheduling service, don't print out date when doing reminder scheduling","… in scheduling service, don't print out date when doing reminder scheduling",,, ANR 
https://github.com/tasks/tasks/commit/9598ba52d4d79c524289f106b244f966f517a32f,Moving reminder scheduling into a background service to prevent ANR dialogs,…ialogs,,, ANR 
https://github.com/tasks/tasks/commit/57fa2678c0e30506c852bf52687aad604e7743e9, Only show dialog when really out of memory.,,,,out of memory
https://github.com/timer-machine/timer-machine-android/commit/5c6189e4486ebf6b98038055ef57da80d8d5a9c1,Work around an odd memory leak of navigation,,,,memory leak
https://github.com/redwarp/gif-wallpaper/commit/e0b76264edf69adcc06888a3b59c57452bc3fb7c,Version 1.1.4,"Replaces the AnimagedImageDrawable by the GifDrawable for all.
Should be more predictable, and allow to work on stuff like optimisations, speedup, slowdown...",,,slowdown
https://github.com/pachli/pachli-android/commit/2cf7c072cae90eaae253ff70a79ab2eb5bbd2d43,fix: Prevent memory leak when updating shortcuts (,"Shortcuts were being updated using `MainActivity.this` as the `Context`
and leaking in `ShortcutManagerCompat`. Use the application context to
fix this.",#443,https://github.com/pachli/pachli-android/pull/443,memory leak
https://github.com/pachli/pachli-android/commit/a3d45ca9ec0c29b8a04acc07a1065981d761913d,refactor: Convert from Gson to Moshi (,"Moshi is faster to decode JSON at runtime, is actively maintained, has a
smaller memory and method footprint, and a slightly smaller APK size.
Moshi also correctly creates default constructor arguments instead of
leaving them null, which was a source of `NullPointerExceptions` when
using Gson.

The conversion broadly consisted of:

- Adding `@JsonClass(generateAdapter = true)` to data classes that
marshall to/from JSON.

- Replacing `@SerializedName(value = ...)` with `@Json(name = ...)`.

- Replacing Gson instances with Moshi in Retrofit, Hilt, and tests.

- Using Moshi adapters to marshall to/from JSON instead of Gson `toJson`
/ `fromJson`.

- Deleting `Rfc3339DateJsonAdapter` and related code, and using the
equivalent adapter bundled with Moshi.

- Rewriting `GuardedBooleanAdapter` as a more generic `GuardedAdapter`.

- Deleting unused ProGuard rules; Moshi generates adapters using code
generation, not runtime reflection.

The conversion surfaced some bugs which have been fixed.

- Not all audio attachments have attachment size metadata. Don't show
the attachment preview if the metadata is missing.

- Some `throwable` were not being logged correctly.

- The wrong type was being used when parsing the response when sending a
scheduled status.

- Exceptions other than `HttpException` or `IoException` would also
cause a status to be resent. If there's a JSON error parsing a response
the status would be repeatedly sent.

- In tests strings containing error responses were not valid JSON.

- Workaround Mastodon a bug and ensure `filter.keywords` is populated,mastodon/mastodon#29142",#428,https://github.com/pachli/pachli-android/pull/428,apk size
https://github.com/pachli/pachli-android/commit/d4eed2fbf84f8d2e9bc1e756b737eb1890081742,fix: Prevent memory leak in CompositeWithOpaqueBackground (,"Quoting@connyduckintuskyapp/Tusky#4150:

""""""
The transformation ends up in Glide's memory cache and leaks whole
Activities through the view -> context reference.

This fixes the problem by removing the background detection logic (so
the view reference is no longer needed) and setting the background
directly instead. Looks exactly as before.
""""""

Co-authored-by: Konrad Pozniak <opensource@connyduck.at>",#309,https://github.com/pachli/pachli-android/pull/309,memory leak
https://github.com/pachli/pachli-android/commit/523efa705c9c5e489596485bfe599c88fd43da09,fix: Prevent potential crash when filters are slow to load (,"This previous code could crash if `filterModel.kind` (marked `lateinit`)
had not been set before the filters are loaded. This could happen in
rare cases.

Fix this by rewriting `FilterModel`. Instead of creating a half-empty
object that still needs further initialisation, delay the creation until
all the necessary information is available, and pass it in the
`FilterModel` constructor.

This also forces code that uses `FilterModel` to properly handle the
case where it might be null at the point where filtering decisions have
to be made.

This means that `TimelineViewModel` (and subclasses) no longer need the
`init()` function to complete their construction, which was another
significant code smell. Pass the `TimelineKind` to the view models via
their `SavedStateHandle`.

This showed that changing filters wasn't causing the timelines to update
without a manual refresh, so fix that too. Editing filters sends change
events for the old and new contexts (in case a context is removed from a
filter), and deleting a filter sends a change event too.",#205,https://github.com/pachli/pachli-android/pull/205,code smell
https://github.com/pachli/pachli-android/commit/5e8a63a0463f7f84d5ba9aa27daf02a3d42f8c9f,Throttle UI actions instead of debouncing (#3651),"Introduce Flow<T>.throttleFirst(). In a flow this emits the first value,
and each value afterwards that is > some timeout after the previous
value.

This prevents accidental double-taps on UI elements from generating
multiple-actions.

The previous code used debounce(). That has a similar effect, but with
debounce() the code has to wait until after the timeout period has
elapsed before it can process the action, leading to an unnecessary
UI delay.

With throttleFirst a value is emitted immediately, there's no need
to wait. It's subsequent values that are potentially throttled.",,,UI delay
https://github.com/pachli/pachli-android/commit/04c842afc49093f1a7a4b4a06be2ae217cec894e,fix OOM crash when trying to caption large image (#756),,,, oom 
https://github.com/pachli/pachli-android/commit/5538c8c5e74dc905388444d890770b0db4855531,Updated it (Italian) translation (#721),"* increase cache size & dont cache full size media

* Updated it (Italian) translation

Commit made via Stringlate

* remove unnecessary backslash",,,cache size
https://github.com/pachli/pachli-android/commit/aa5eb9f99acc0cdc4b9ab0c6085d398f31acaed0,increase cache size & dont cache full size media (#710),,,,cache size
https://github.com/pachli/pachli-android/commit/23d84dfa66733637d291a380438a5bbf76e0e721,Show image descriptions in gallery (,"* Add circleci

* Commit to maybe fix ci

* Suppress false positives in lint

* Disable linting for tests in ci

* Add image descriptions to gallery

* Fix test

* [CI] Attempt to fix OOM error

* [CI] Attempt to fix OOM error, 2

* Add option to open status from media

* fix theme issue

* increase linespacing on media description",#630,https://github.com/pachli/pachli-android/pull/630, oom 
https://github.com/pachli/pachli-android/commit/3f54ead962f65379a98ec2ae3040aba07dee59ac,Adds option to hide media previews if reduced data usage is desired,…loses#56.,#56,https://github.com/pachli/pachli-android/pull/56,data usage
https://github.com/Pool-Of-Tears/Myne/commit/e8ab5439873b256b974579f3e02ea1b8be615aee,Bump version (,"* Bump version
* Improve padding of loader in categories screen
* Increase cache size & make them constant variables
* Update full_description.txt in fastlane
* Update short_description.txt in fastlane
---------
Signed-off-by: starry-shivam <krshivam24@proton.me>",#132,https://github.com/Pool-Of-Tears/Myne/pull/132,cache size
https://github.com/wuan/bo-android/commit/39993466e7dfefee72d18da1f9e230d96ba2edc7,simplified cache size calculation and tests for cache,,,,cache size
https://github.com/wuan/bo-android/commit/d7194dbf01d0c4eaf4eed7e15c6f96a1a2b94cbb,calculate cache size only for log dialog,,,,cache size
https://github.com/wuan/bo-android/commit/6aeca5d21bf5051f8fd905b6424b796ebcfbfaeb,potential map oom fix,,,, oom 
https://github.com/IacobIonut01/Gallery/commit/db96c1f75d3f9fb043aefc55f05af01bea67ba3f,Gradle: Enable minify and resource shrink on release flavor,"Reduces final apk size from 42.3 MB to 3.9 MB

Signed-off-by: IacobIonut01 <paulionut2003@gmail.com>",,,apk size
https://github.com/airmessage/airmessage-android/commit/c2025244c873e65561d39b9f706c9128c8b14e06,Fix ANR when making room for a new dynamic shortcut,,,, ANR 
https://github.com/airmessage/airmessage-android/commit/3af352e5bd8661c68ed933cbe8c940830b02c940,Data storage fixes,,,,data storage
https://github.com/airmessage/airmessage-android/commit/0e54d7b066c7919cb190494eacf5af1d16b0b37d,Memory leak fixes,,,,memory leak
https://github.com/mozilla-mobile/firefox-android/commit/9b57ba40d411acf38dac5c66be73ac676127e7b4,Bug 1874831 - Disable failing FF Suggest UI tests,,,, FF 
https://github.com/mozilla-mobile/firefox-android/commit/634f9a6940a017c9e1fbb19d8ef0ad8f7b5c114b,Bug 1864753 - Fix for removing debug APK size alerts,,,,apk size
https://github.com/mozilla-mobile/firefox-android/commit/65d9ecf3fdb483e032aecc942b02ea908a0b2854,Bug 1864753 - Remove debug APK size alerts,,,,apk size
https://github.com/mozilla-mobile/firefox-android/commit/511b2824339d4297c493bfc80d8b383ffe9d4f15,Bug 1859913 - Revert shopping CFR behavior,"We recently made a change to the shopping CFRs that made them harder
to dismiss. They can only be dismissed by clicking the close X or
by clicking the link that opens the bottom sheet. The issue is that
this results in the page and the UI being unresponsive. So we want
to revert back to the original behavior where they were
dismissible by clicking outside. This change currently only affects
the shopping CFR",,,unresponsive
https://github.com/mozilla-mobile/firefox-android/commit/1e1865b210acd3673b170f638e197fbd3c3939af,Bug 1848842 - Increase APK regression alert's threshold to 1 MB,"We added a regression alert for APK size regressions greater than 100 KB (in bug 1838717). This 100 KB threshold is too sensitive, so instead of disabling it entirely, I'd like to increase the threshold to 1 MB, so we will at least catch big surprises like -O2 bug 1838709 (+3 MB) and ICUX bug 1848025 (+2 MB).",,,apk size
https://github.com/mozilla-mobile/firefox-android/commit/3098da393738d41bc71adde5598eacdc7f174a05,Bug 1842604 - Telemetry to measure Search results response time,,,,response time
https://github.com/mozilla-mobile/firefox-android/commit/f757185c84882b06a846daf82f103b5d26de449e,Bug 1826933 - Use WeakHashMap and WeakReference for activity and launcher.,"…cher.

This avoids memory leaks when Activity onDestroy is not called.",,,memory leak
https://github.com/mozilla-mobile/firefox-android/commit/c4022df2181b550820a78e6c587bf5c1cff61c3b,[fenix] For,…revent memory leaks,mozilla-mobile/fenix#27381,https://github.com/mozilla-mobile/fenix/issues/27381,memory leak
https://github.com/mozilla-mobile/firefox-android/commit/a33102acbfffee25c9ae32a133ec3b994ee77647,[components] For,… observers to prevent memory leaks,mozilla-mobile/android-components#12930,https://github.com/mozilla-mobile/android-components/issues/12930,memory leak
https://github.com/mozilla-mobile/firefox-android/commit/92eea4a322fa59e4586265ac92d68c3d24b76d15,[fenix] Added secret debug menu to override the push server URL (,"…lla-mobile/fenix#24170)

- Created a new ""sync debug"" pref screen to hold the Fxa, Sync, and Push
  server override prefs.  They were taking a lot of screen space on the
  top-level settings menu as individual items
- Added button on that screen to quit FF which is needed to apply the
  changes.
    - This is definitely not the nicest UI, but hopefully QA can just
      override the prefs once save them in an emulator and never have to
      go back to this screen.
    - I do think this is a nicer UI than before, where FF would quit
      after a change to any of the prefs.  That forces you to restart FF
      3 times if you wanted to override all 3 server URLs.",mozilla-mobile/fenix#24170,https://github.com/mozilla-mobile/fenix/issues/24170, FF 
https://github.com/mozilla-mobile/firefox-android/commit/2acd69e566c2331f3f87b4592cce18cf6d12778e,[focus] For,"…to activity

Relocate the toolbar to activity to avoid memory leaks
Previous to this sometimes we were trying to access the toolbar of
a destroyed fragment",mozilla-mobile/focus-android#6790,https://github.com/mozilla-mobile/focus-android/issues/6790,memory leak
https://github.com/mozilla-mobile/firefox-android/commit/04392c9768205f99e01d672e0d39fb036fd7ed85,[fenix] CI for 21827 (,"* Remove redundant calls to setHasOptionsMenu(false)

Fix memory leaks for credit card and login fragments

* Fixes:

Add link to issue tracker
Use activity?.invalidateOptionsMenu() instead of setHasOptionsMenu(false)
Move it inside of 'if' statement to avoid unintended issues when called improperly
Revert changes to AddLoginFragment.kt

* Fix call invocation to redirectToReAuth() from AddLoginFragment.kt
Fix 'when' statement in redirectToReAuth() to use AddLoginFragment

Co-authored-by: Vitaly V. Pinchuk <vetal.978@gmail.com>",mozilla-mobile/fenix#22004,https://github.com/mozilla-mobile/fenix/pull/22004,memory leak
https://github.com/mozilla-mobile/firefox-android/commit/f5f43d20b2f8f8cc0534101654cbf5c973a02e92,[components] Introduce History Metadata storage API,Co-authored-by: Christian Sadilek <christian.sadilek@gmail.com>,,,data storage
https://github.com/mozilla-mobile/firefox-android/commit/17170d3a020803662721e43c9ea4d2017b79d386,[fenix] Issue,"…indow detached

Previously, to fix a memory leak, we were removing the adapter reference
entirely in order to have the `onDetachedFromRecyclerView` callback
invoked. This causes a side-effect where we can no longer reference the
adapter any more when we re-attach.

The simpler solution is to just invoke the needed callback directly
instead.",mozilla-mobile/fenix#18934,https://github.com/mozilla-mobile/fenix/issues/18934,memory leak
https://github.com/mozilla-mobile/firefox-android/commit/c26ff35043111875aa4f874679034ef6cac69262,[fenix] No issue: enable CPU usage in profiler.,,,,cpu usage
https://github.com/mozilla-mobile/firefox-android/commit/7ff4825d95c1371c0b7f2f08aafaf9c6b59eb0ea,[fenix] For,"…parate feature (mozilla-mobile/fenix#16498)

Instead of simply fixing the memory leak for this issue by directly
removing references, it makes more sense to move the whole
BiometricPrompt out of the fragment and into it's own feature to be
re-usable.",mozilla-mobile/fenix#16498,https://github.com/mozilla-mobile/fenix/pull/16498,memory leak
https://github.com/mozilla-mobile/firefox-android/commit/a4f354275c1b0a22bf7938dd8225e6df931ea05b,[fenix] No issue: remove inline from StrictModeManager.resetAfter.,"I believe this was a premature optimization: it's unclear that it would
actually improve performance and yet  we had to add several weird
workarounds to make it work that broke encapsulation. It's also
possible it would be worse for the APK size because of excessive
inlining.",,,apk size
https://github.com/mozilla-mobile/firefox-android/commit/7e8b88e7d46cd30324f46ba62be503110ed1c77a,[fenix] for,…source inside onDestroyView of AddonsManagementFragment to avoid memory leak,mozilla-mobile/fenix#13478,https://github.com/mozilla-mobile/fenix/issues/13478,memory leak
https://github.com/mozilla-mobile/firefox-android/commit/03c02942fdb9fa746a682c999c4a9199c83d543f,[components],"…obile/android-components#7939: Create single download dialog and don't reuse once destroyed

Co-authored-by: Arturo Mejia <arturomejiamarmol@gmail.com>

With this we're no longer holding a reference to the download dialog in the
feature, which caused a memory leak, as we tried to reuse the dialog
instance after it was destroyed. In addition, we now also make sure we only
ever create a single instance of the dialog by relying on `showNow` to
prevent a delayed `commit` of the fragment transaction.",mozilla-mobile/android-components#7939,https://github.com/mozilla-mobile/android-components/issues/7939,memory leak
https://github.com/mozilla-mobile/firefox-android/commit/7fc8e2e83ed0e22c5a7fc41d8d348a1b39ff8dfa,[fenix] Use HomeFragment's viewLifecycleOwner as the lifecycle for accountManager observer registry,"…countManager observer registry

If we just use the HomeFragment itself, we end up with a memory leak since the lifecycle events
that would clean up the registry (e.g. destroy) won't run (if the fragment is retained in the backstack, for example).",,,memory leak
https://github.com/mozilla-mobile/firefox-android/commit/43f1db85b7a79b6a805d05ffb8036234001d8416,[components],"…neView: Detach SelectionActionDelegate if session is no longer rendered.

Our sample browser smoke tests revealed a memory leak (mozilla-mobile/android-components#6297). We attach a selection action delegate on
GeckoSession but we never clear it. This leads to us leaking GeckoEngineView and its Context/Activity
since the GeckoSession usually lives longer than any views.

Internally GeckoSession attaches and detaches its own selection delegate (since it also has a reference
to the activity). We are now doing the same if we are using a custom delegate.",mozilla-mobile/android-components#6297,https://github.com/mozilla-mobile/android-components/issues/6297,memory leak
https://github.com/mozilla-mobile/firefox-android/commit/175933d723d377c2716dc3b88869df135eab2690,[fenix] No issue: Fix LeakCanary detected memory leaks,"Co-authored-by: Emily Kager <emilykager@gmail.com>
Co-authored-by: Pierre-Yves Ricau <py@squareup.com>",,,memory leak
https://github.com/mozilla-mobile/firefox-android/commit/20e73d7eb9df4f08e93c20381cc2e8faa572fb8f,[fenix],"…prevent slowdowns in test lab (mozilla-mobile/fenix#5439)

*Fixesmozilla-mobile/fenix#5438- Upgrade UI test devices to prevent slowdowns in test lab

* fix: change api to supported version

* refactor: try x86 devices instead",mozilla-mobile/fenix#5439,https://github.com/mozilla-mobile/fenix/pull/5439,slowdown
https://github.com/mozilla-mobile/firefox-android/commit/8ded32ee7ea126ad9775b6f6b1cc67c60e6fb447,[fenix] Use new async API to load and access search engines,"Use the new asynchronous features of the search engine
manager from a-c to avoid the latency required to load
the default search engine.",,,latency
https://github.com/mozilla-mobile/firefox-android/commit/babe96af6f4f22043347bad2423f69e4c045d67d,[focus] Enable ABI splits to keep APK size small,,,,apk size
https://github.com/mozilla-mobile/firefox-android/commit/9c4766952c9c81522deb6ac0be8c83fab1b4dad9,[components] Issue,…tectionRule for detecting memory leaks while running instrumented tests.,mozilla-mobile/android-components#3888,https://github.com/mozilla-mobile/android-components/issues/3888,memory leak
https://github.com/mozilla-mobile/firefox-android/commit/418e6527e6443cb79e0566e3273c3b348310eca6,[components],…er in sample-browser causes memory leak,mozilla-mobile/android-components#3419,https://github.com/mozilla-mobile/android-components/issues/3419,memory leak
https://github.com/mozilla-mobile/firefox-android/commit/c787337830697f66803a3d91fe15263ffe91ccdc,[components],… for ObserverRegistry memory leak,mozilla-mobile/android-components#3254,https://github.com/mozilla-mobile/android-components/issues/3254,memory leak
https://github.com/mozilla-mobile/firefox-android/commit/84b0218d67e573541996de00493e15fa3b107c2e,[components] Issue,…lbar: Do not use ui-progress due to high CPU usage.,mozilla-mobile/android-components#622,https://github.com/mozilla-mobile/android-components/issues/622,cpu usage
https://github.com/mozilla-mobile/firefox-android/commit/0eeeff7714173b5cb586e1862fe8ee83377efc89,[components] Raise gradle memory limit.,"Every now and then I run into ""out of memory"" gradle build errors. Raising the
limit seems to fix that.",,,out of memory
https://github.com/mozilla-mobile/firefox-android/commit/44efec741870479d2680fc773817d25d4489b87f,"[focus] Findbugs: Set ""effort"" to ""min"".","From the docs:
""Higher levels increase precision and find more bugs at the
expense of running time and memory consumption.""

We have been running out of memory on taskcluster every now and
then. Let's try how it performs with effort set to ""min"".",,,"memory consumption
out of memory"
https://github.com/mozilla-mobile/firefox-android/commit/862a08430c559da9cc6956e20b3708973f55c42d,[focus] Remove APK size check. (,,mozilla-mobile/focus-android#2032,https://github.com/mozilla-mobile/focus-android/issues/2032,apk size
https://github.com/mozilla-mobile/firefox-android/commit/0a9ae9f4c7ec03c751dda5cc75e5fc49b762e580,[focus] Set APK size limit to 5 MB. (,,mozilla-mobile/focus-android#1523,https://github.com/mozilla-mobile/focus-android/issues/1523,apk size
https://github.com/mozilla-mobile/firefox-android/commit/c525b4a1290b8905b7a8838f9433a296225e296c,[focus] Increase apk size limit to 4.5MB,,,,apk size
https://github.com/mozilla-mobile/firefox-android/commit/961407e6876f17aac4394f68ddee46cda7d4426c,[focus] Add extra FF padding to color code,,,, FF 
https://github.com/mozilla-mobile/firefox-android/commit/88ee4df4e98d99d0ce31c9cd042c0a877a84fa8d,[focus] Add postbuild task that checks release APK size (,…le/focus-android#673),mozilla-mobile/focus-android#673,https://github.com/mozilla-mobile/focus-android/issues/673,apk size
https://github.com/d4rken-org/capod/commit/ad78a0570c0c87dd4ee0ca025641d99c21a07e0f,For some reason we can finish the widget update broadcast twice. (,"I can't yet determine why this race-condition occurs, due to the forced timeout, it shouldn't be due to exceeding the receiver ANR window...",#112,https://github.com/d4rken-org/capod/pull/112, ANR 
https://github.com/d4rken-org/capod/commit/33172a7aee02f9559971ff82f02f27a508dc1d26,"Use the default low_latency mode for wearOS too, we want to get as many BLEScanRecords as possible in a short time frame and then sleep again.",…ny BLEScanRecords as possible in a short time frame and then sleep again.,,,latency
https://github.com/d4rken-org/capod/commit/3b48ca90d3fc54901d7ea0a9899fca501e19c859,Make low latency the default scanmode for better userexperience.,,,,latency
https://github.com/d4rken-org/capod/commit/220c358f5d04928ca2dc6cc5b802208a54222403,"Manually flash batch cache, in low latency modes to achieve lower scan result delays.",…n result delays.,,,latency
https://github.com/d4rken-org/capod/commit/b0e184f5d8213f62c6cd552c69fc9fbcf445eb65,Low latency scan mode by default for better user experience.,,,,latency
https://github.com/localsend/localsend/commit/5dd364ed7186b3c940a9b86e87927af4366831ae,feat: drastically improve GPU usage by optimizing the spin animation (,…679),#679,https://github.com/localsend/localsend/pull/679,gpu usage
https://github.com/localsend/localsend/commit/657e9c924866f5eb79b85434543a32df18ba0999,fix: GPU usage when hidden to tray (,,#626,https://github.com/localsend/localsend/pull/626,gpu usage
https://github.com/AbdullahSako/ChikiChikiTube-Android/commit/e5eeae4964367cbd6f6e7ce8a3b959358e2b72ff,features added bugs fixed,"Features
- video players now runs throughout the app
- added cast temporarily for testing
- changed video player UI colors
- added loading indicator when loading more channel videos
- added end of channel videos line
- added the option to filter out non subtitled videos
- added the ability to go up the recycler view in channel videos and playlists by re clicking on the tab
-added animations when opening channel fragment and opening video player
-added no playlists text when opening a video
- changed bottom nav tab colors
- changed status bar color

Bugs Fixed
- fixed some memory leaks in view pager and bottom nav view onselected listener
- fixed wrong loading of channel videos
- removed some background animation frames",,,memory leak
https://github.com/divVerent/aaaaxy/commit/2a7a1634c8035ede27bed9e78a65b1d11eac178a,Release v1.3.524,"Changes since v1.3.511:
  - Engine: instead of --touch_force or the touch timer, detect use of touch
    controls by last inputs.
  - Level: fixed a bunch of text/image overlaps.
  - Mobile: fix one frame of input latency.
  - Web: remove the Quit button.",,,latency
https://github.com/divVerent/aaaaxy/commit/8fb9daa71ba929c6a8e63fa834a767a4012c30f3,Perform touchUpdate before gamepad inputs.,Fixes one frame of input latency on touch devices.,,,latency
https://github.com/divVerent/aaaaxy/commit/be7771c93f0447119543f607cb6d3123fb19c410,Turn off pin_fonts_to_cache.,It seems to be a net slowdown now - it does not even reduce lag frames.,,,slowdown
https://github.com/divVerent/aaaaxy/commit/7cb070a9fee5a2c9b739b1f948f32994dd8529be,Add a loading screen.,"Better than waiting X seconds at start while everything is loading.

Is still a bit rough, but usable and better than none.

Note that this meant massive changes to initialization, and also a minor
slowdown (currently by up to one second) at startup. Can be turned off by
passing --loading_screen=false.",,,slowdown
https://github.com/divVerent/aaaaxy/commit/0b3d06a8c8a68ce886f3f22ce307bda297077f1b,Release v1.0.79,"Changes since v1.0.59:
  - Fix memory leak of leftover audio player objects.
  - Ignore fewer audio errors.
  - Flatpak and Snap packaging.",,,memory leak
https://github.com/divVerent/aaaaxy/commit/20a926bed98a4877776894c09a4b4fe8c285c9c7,Fix memory leak of leftover ebiClosers.,,,,memory leak
https://github.com/divVerent/aaaaxy/commit/e6d1da67a0af146fbd576148c8d3bf400f1aa915,Consider slow dumping a cheat.,Intentional slowdown = TAS! ;),,,slowdown
https://github.com/deltachat/deltachat-android/commit/9e70aa7cadccd90b71945ea3ab0f174050dfd86c,webxdc (,"* add new w30 APIs

* create the webview,
disable internet access,
inject deltachat.js

* connect deltachat to the webview

* promisify api

* use msgActionButton to start the w30 apps

* cleanup

- create observers in onCreate() to avoid memory leak,
- derive from WebViewActivity to easier deal with particularities
  and to saves >100 loc
- reorder some methods to reflect lifetimes

* make it more clear, which uri-part is 'domain' and which one is 'path'

* unify logging

* it is 'statusUpdate' not 'stateUpdate'; not sure if promise is needed at the end, we can readd that as needed, simple code for now

* use core implementation for status updates

* disable debugging enabled by default, streamline code

* use same name for InternalJSApi for both, js and java

* getStatusUpdates() always return an array

* call JSON.stringify() on payload

* fix typo, fix equal operator

* use shorter function names in js land

* adapt to new zipped w30 format

* load any file from w30 archives

* add fallback if getMimeTypeFromExtension() fails

* rename w30 to webxdc

* add selfName()

* return selfAddr() if selfName() is empty

* rename deltachat.js to webxdc.js

* observer correct event

* rename getBlobFromArchive() to getWebxdcBlob()

* show webxdc app name in title bar

* swap payload and descr in sendUpdate() (adapt to new core api)

* allow user-defined-texts for webxdc apps, make room for icon+name

* show webxdc icon and name in chats

* render webxdc drafts accordingly

* allow configuring drafts

* do not destroy webxdc-message to be sent out by removing it via setDraft(null)

* fix crash when replying to webxdc messages

* add webxdc messages to profile's document tab

* hide 'search menu' for webxdc apps

* show app summary beside app icon

* remove outdated comment

* add precautious WebView restrictions

* Update src/org/thoughtcrime/securesms/ConversationItem.java

Co-authored-by: Asiel Díaz Benítez <adbenitez@nauta.cu>

* Update src/org/thoughtcrime/securesms/ConversationItem.java

Co-authored-by: Asiel Díaz Benítez <adbenitez@nauta.cu>

* Update src/org/thoughtcrime/securesms/ConversationActivity.java

Co-authored-by: Hocuri <hocuri@gmx.de>

* Webxdc requires at least Android 5 Lollipop

see#2174 (comment)* recognize .xdc files on android10

based on@Hocuri's findings in#2188Co-authored-by: Simon Laux <mobile.info@simonlaux.de>
Co-authored-by: adbenitez <asieldbenitez@gmail.com>
Co-authored-by: Asiel Díaz Benítez <adbenitez@nauta.cu>
Co-authored-by: Hocuri <hocuri@gmx.de>",#2174,https://github.com/deltachat/deltachat-android/pull/2174,memory leak
https://github.com/deltachat/deltachat-android/commit/6de566ac11fa59909eb4e6394858bd7a0320260a,fix chatlist anr (,"* revert unneeded changed introduced at#1975- the timer is to update relative timestamps, data reloading is not needed and driven by events

* load chatlist async

* debounce chatlist loading

* add comment to the code",#2000,https://github.com/deltachat/deltachat-android/pull/2000, ANR 
https://github.com/deltachat/deltachat-android/commit/14dc59d78cb6edd7c7fefc96a12ce101f99a0db5,add rationale to ignore-battery-optimization request,"while it is more straight-forward to let the system ask the user directly -
as we do for most other permissions -
this is probably not favorable for requesting ignore-battery-optimization:

- other permissions requests are preceded by a clear user intention -
  tap on the camera, record voice etc.
  so it is clear to the user why a permission is needed.
  this is not true at the moment after installation
  (maybe the moment can be improved, btw)

- different systems have completely different text,
  partly focusing on ""battery drain"" - it is not clear to the user
  what would be the advantage of that

- some guidelines say, user interaction is needed before querying permission.
  there is room for interpretation, of couse,
  however, adding a rational with a ""continue"" button
  seems to fit better to these guidelines.",,,battery drain
https://github.com/deltachat/deltachat-android/commit/868994ba105c1b1cb375281ab4c4d2ef3d38ad68,add LeakCanary for memory leak detection in debug builds,,,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/0c946586619968c33a94d9843e015c31bf7492e7,Fix/improve tracking of latency on page loads. (,,#3773,https://github.com/wikimedia/apps-android-wikipedia/pull/3773,latency
https://github.com/wikimedia/apps-android-wikipedia/commit/a22589bd5157578c738de393fe35ea743ffa53b0,Shareable reading lists (feature branch). (,"* Towards shareable reading lists.

* Prototype of CSV export.

* Progress towards sharing lists.

* Set mime type to json.

* Right.

* Reduce to sharing single list.

* Add URL shortening API.

* Complete outbound flow.

* Clean up a bit.

* Further cleanup.

* Update output format of reading list payload.

* Use proper class for serialization.

* Use fully-qualified project url as list keys.

* Add constraints on location and language.

* Build receiving workflow for shareable reading lists (#3584)

* Initial commit of shareable reading list receiver

* Show dialog upon receving the intent

* Add comment to investigate

* Fix open activity latency

* Update string name and add bus event for install referrer

* Add API for pageids

* Build import helper

* Fix build error

* Request API calls for different wikis

* Request API calls for different wikis

* Add new import indicator to list

* Make sure import function works correctly

* Fix lint and add note about incorrect reading list size

* Show ""new"" indicator correctly

* Remove comment

* Show imported reading list after downloading all articles

* Show detailed import information (and will be replaced by a view)

* Create custom view for import dialog

* Bind custom view to dialog

* Show preview dialog

* Show loading indicator correctly

* Update base url in the share helper

* Fix error

* Update reading list URL parameter format

* Update receive parameter and its decode logic

* Add auto-generated list title and add imported date as the description

* Adapt to using fully qualified project url.

* Use updated utm parameter.

Co-authored-by: Dmitry Brant <me@dmitrybrant.com>

* Wire in some analytics.

* Update funnel logic.

* Sort list before importing

* Minor update to dialog text

* Use language code instead of fully-qualified project url, after all.

* Don't use url shortener by default.

* Survey for sharing reading lists. (#3665)

* Survey for sharing reading lists.

* qq strings.

* Wire into funnel.

* Update verbiage.

* Update logic of survey.

* Address a few comments.

* Remove todo.

* Add Nigeria.

Co-authored-by: Cooltey Feng <coolteygame@gmail.com>
Co-authored-by: Cooltey Feng <cfeng@wikimedia.org>
Co-authored-by: Sharvani Haran <sharvaniharan@users.noreply.github.com>",#3562,https://github.com/wikimedia/apps-android-wikipedia/pull/3562,latency
https://github.com/wikimedia/apps-android-wikipedia/commit/04903c96b74e8517ac46cd5eccf82b9cd49758ce,Follow-up to latency logging. (,Co-authored-by: Cooltey Feng <cfeng@wikimedia.org>,#3682,https://github.com/wikimedia/apps-android-wikipedia/pull/3682,latency
https://github.com/wikimedia/apps-android-wikipedia/commit/f212e8bfe23059bd3e61c828465a7bcdec7d5395,Update pageLoadLatency logic for upcoming network latency measurement (,"…#3675)

* Update pageLoadLatency logic for upcoming network latency measurement

* Make sure the URL in the session matches.

* Log latency correctly

* Revert change",#3675,https://github.com/wikimedia/apps-android-wikipedia/pull/3675,"latency
network latency"
https://github.com/wikimedia/apps-android-wikipedia/commit/de3a28e2a6c0735f710dd825a50dcd84a37f2bea,Use ConcatAdapter to prevent latency on list view (,"* Use ConcatAdapter to prevent latency on list view

* move to separate adapter

* Not adding header adapter for user talk

* Additional logic of hiding divider around search bar

* Set up starting position

* Show proper footer spacing

* Move search bar view to header adapter

* Fix search and remove unused function

Co-authored-by: Dmitry Brant <dbrant@wikimedia.org>",#3408,https://github.com/wikimedia/apps-android-wikipedia/pull/3408,latency
https://github.com/wikimedia/apps-android-wikipedia/commit/f1490e7ab37864e8689443cc85b3552caf08cdb6,Fix possible resource leaks from unsuccessful network responses. (,,#3323,https://github.com/wikimedia/apps-android-wikipedia/pull/3323,resource leak
https://github.com/wikimedia/apps-android-wikipedia/commit/515805379ac22e1da01055cf2c90e2f9dd1901a6,Update the list of languages and variants (,"* Update the list of languages and variants

* add breaks

* Skip adding main language code if detects variants

* Show canonical names correctly

* Update naming

* Correctly add variants

* Add fallbacks to languages_list

* Adding method to get variant fallbacks

* Manually add language variant detection since the locale library cannot
transform it correctly.

* Save variants only

* Update method name

* Support adding language variants in langlinks for all languages that
have variants

* Find parent language variant properly

* Rename variables and remove comments

* Update test cases

* fix checkstyle

* Fix: update the regular expression of getting page title from link

* Simplify test cases

* Adding default language code

* Spread regex to more places

* Add comment for the authority

* Add test cases

* Use string instead of a method on Regex

* Remove unwant symbol

* Update naming

* Combine authority string with correct subdomain language code

* Only update the authority if it comes from wikipedia.org

* Update logic of checking authority

* Add one more test case for the subdomain

* Add sr wiki deep link support

Co-authored-by: Dmitry Brant <dbrant@wikimedia.org>",#1695,https://github.com/wikimedia/apps-android-wikipedia/pull/1695, SR 
https://github.com/wikimedia/apps-android-wikipedia/commit/c41789fcb78f33ecfc839cf3c41214b7d3bc1932,Merge pull request,Fix potential memory leak(s) in MainFragment.,#1357,https://github.com/wikimedia/apps-android-wikipedia/pull/1357,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/cdfb65433c23e3db370e441f42765a9c6d3fb75e,Fix potential memory leak(s) in MainFragment.,Change-Id: I91b713456991e6bbb36d1c87031dc270f6ad4077,,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/f8b0706c9b2afcf79291169b9e62bee0daf77693,Fix further memory leaks in face/color detection.,Change-Id: Ib4fa76b81d7ffe913039fb5d1f1ff3f521f4373e,,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/f736f6ca8ae755928e82c9161108ce4679d77a2e,Merge pull request,Fix possible memory leak in Transform handler.,#1106,https://github.com/wikimedia/apps-android-wikipedia/pull/1106,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/e6d6662c1beb182c69d7a761b0ca7005fc59e5a7,Fix possible memory leak in Transform handler.,Change-Id: I201fc5c284090752b92ca54fd197f2956d102fbb,,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/27a961183a3e1c818467a7c4bb86cddb604ae8dd,Merge pull request,Update session funnel to work with mobile-html latency.,#985,https://github.com/wikimedia/apps-android-wikipedia/pull/985,latency
https://github.com/wikimedia/apps-android-wikipedia/commit/5e7930580613c2db813e9e5f2d5fcd619345e7cd,Update session funnel to work with mobile-html latency.,Change-Id: If826a3724ac4e438e56f53fda217e51299573258,,,latency
https://github.com/wikimedia/apps-android-wikipedia/commit/7bd3f2fe72cca2953bf97155a9da49b929c52865,Merge pull request,Prevent possible memory leak in EditPreviewFragment.,#188,https://github.com/wikimedia/apps-android-wikipedia/pull/188,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/67f11df45ab9cb2999c237bf448c33a689f9e34b,Prevent possible memory leak in EditPreviewFragment.,Change-Id: Iaeacd16fc029a8eeff6d06edc70e83c290adb551,,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/41547452c7979bf13baadf66421df6ac19d0bb8e,"Merge ""Fix possible memory leak upon exit transition.""",,,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/3376b9fe604d714648cfcbc0bce66f06c1683c23,Fix possible memory leak upon exit transition.,"This introduces a more robust way of tracking whether we have MainActivity
in our backstack. If we do, then the transition *back* from PageActivity
should be overridden. And if we don't, then we can use the new constructed
shared-element transition.

This also improves the actual logic of navigating back and forth between
MainActivity and PageActivity, taking all the associated transitions into
account.

And this also implicitly fixes a platform-level memory leak, whereby we
were overriding the pending transition while *also* providing a shared-
element bundle.

Change-Id: Ic4fe1b2a3aa9fd401623b726c6264804131f35f4",,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/204992b725e730a7869b718bd2b848842b2b7c98,Follow-up: reduce size of a few images.,"This replaces some of our PNG drawables with JPG files, which compress
much better. This is a reduction of about 200KB from the APK size.

Change-Id: I68e7019f835af28a330d75e6b487214bf46cb950",,,apk size
https://github.com/wikimedia/apps-android-wikipedia/commit/b9895dfa74a6761e918151c8f54348a15fc42ef9,"Merge ""Introduce ABI splits, and reduce APK sizes by 60%.""",,,,apk size
https://github.com/wikimedia/apps-android-wikipedia/commit/3d5f88240b777ef3b46cc5333b45f07db8e46de0,"Introduce ABI splits, and reduce APK sizes by 60%.","This introduces the idea of creating multiple APKs for each ABI that we
support. Much of our total APK size is taken up by the binary libraries
from Fresco and Mapbox. The problem is that our final APK contains the
binary libraries for *all four* ABIs that we support (armv7a, arm64, x86,
and x86_64), even though only one will be used on any single device.

Therefore we can now build individual APKs for each of the ABIs, and
upload all of them to the Play Store, which will automatically decide
which one to serve to the device on which the app is being installed. (We
will also continue to produce a ""universal"" APK for users to download
manually.)

The result is that each individual APK will be nearly 60% smaller (10 MB)
than our current universal APK (23 MB).

Note: Each APK for all the various ABIs will have its own versionCode,
based on this scheme: [ABI code] * 10000 + variant.versionCode.

So, if the current versionCode is 232, the new version code will be 10232
for armv7a, 20232 for arm64, 30232 for x86, and 40232 for x86_64.https://developer.android.com/studio/build/configure-apk-splits.htmlChange-Id: I212dcc9f7eb47199f9f01f55aae8902500fe0d28",,,apk size
https://github.com/wikimedia/apps-android-wikipedia/commit/328dfb22a9f3a5b99bf77b5d83da6375157687b1,"Rejigger order of certain settings, and finalize verbiage.","This separates the old ""storage and sync"" settings into two new
categories, ""sync"" and ""data usage"". It also creates an ""experimental""
category, and puts Offline Library into it.

This also finalizes the verbiage for the settings and the dialog boxes
for reading list actions when logging in and out.

Bug:T188298Bug:T183607Change-Id: I1f0dd183652d42b10e0a5f9f3ad66446f248c047",,,data usage
https://github.com/wikimedia/apps-android-wikipedia/commit/15523467c3d77cbd5091f227391b6b851bed8d41,Improve performance of sorting large lists.,"The sorting of the pages in a list is done by taking the title of each
page and stripping it of accents, and making it lowercase. These are kind
of expensive-ish operations, and when we have a list of 1000 pages, the
sort operation can actually cause a performance slowdown.

This patch adds a private member to the ReadingListPage class (as well as
the ReadingList class) that lazy-loads and caches the accent-normalized
title, so that during a sort operation it doesn't need to be computed more
than once.

Change-Id: Ic4f6408115f2d9b98fe3e5dae98743bccd51f2d9",,,slowdown
https://github.com/wikimedia/apps-android-wikipedia/commit/ac7d33da9dd69dcf5d50911729ac813255a45b9c,"Merge ""Tweak: Update Offline Library storage space used text""",,,,storage space
https://github.com/wikimedia/apps-android-wikipedia/commit/aa06c4c7dd7d6622592b8eb3dd9d5f10df6b121d,Tweak: Update Offline Library storage space used text,Bug:T173082Change-Id: I0012eb140eef12babd821e63489a1134fa204a31,,,storage space
https://github.com/wikimedia/apps-android-wikipedia/commit/ddd76bfe0e8bc0c3bf55b350259209122047950c,Prevent possible memory leak in OfflineManager.,"When searchForCompilations() is invoked, the Callback that is passed into
it can be an anonymous class belonging to an Activity.  When the
searchTask completes, it can technically hold on to a reference of
Callback indefinitely.

This patch explicitly sets searchTask to null as soon as the task itself
finishes, so that any references to the Callback (and thus references to
an Activity) are not held for longer than necessary.

Change-Id: I197dbabadae59bd93d1ac6e3adf49a2e4fd76acc",,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/c6dce7b789e9ea88f9f81709ead1138e2fec0656,"Merge ""Use megabytes instead of mebibytes for reading list data usage.""",,,,data usage
https://github.com/wikimedia/apps-android-wikipedia/commit/c0839f55e17c7175232d62c89c5fbeea8ad674f5,Use megabytes instead of mebibytes for reading list data usage.,Bug:T172386Change-Id: I3500e0da6ad7d2d066b0c8b3d3cd6b92a1da1677,,,data usage
https://github.com/wikimedia/apps-android-wikipedia/commit/953a7d1ef96db70b70be9dc84ca571e02ef86ee4,Update FileUtil read* methods,"The current Scanner-based implementation of readFile fails
persistently but for unknown reasons in Docker, throwing a
NoSuchElementException for some files.

This replaces both Scanner-based read* implementations with calls to
Commons I/O library functions, which should be more robust (and indeed
cause no trouble in Docker).

Commons I/O is added as a testing dependency only in order to avoid
increasing the APK size.

Change-Id: I6d034957c7a598d68de362394d21d5153b98d52f",,,apk size
https://github.com/wikimedia/apps-android-wikipedia/commit/f6ea084c1a5ea44a542a0c50e0925e5718549339,"Merge ""Fix possible memory leaks when destroying WebViews.""",,,,memory leak
https://github.com/wikimedia/apps-android-wikipedia/commit/5a94e869425f6ce98744f3b524abcef7ce4cf811,Fix possible memory leaks when destroying WebViews.,"Observed (and fixed) in at least APIs 18 and 22:
There seem to be specific circumstances when the WebView holds on to
certain View references, which in turn hold on to an Activity reference
indefinitely, causing a leak.

For example, if we navigate to the [[Obama]] article and then exit the
activity, the WebView holds on to an instance of `HTML5VideoView`, which
is presumably a container for a video object that's shown in the article.

There's a lot of conflicting information and workarounds for this on the
web, but a common thread seems to be that the WebView doesn't always
destroy its own view hierarchy correctly, and needs to be triggered
explicitly.

This patch adds a method to our ObservableWebView that does its best to
destroy itself, which includes:
- Clearing all listeners
- Removing itself from the Activity's view hierarchy
- Calling destroy() on itself, which does the actual work of
  uninitializing the WebView's internals, and relies on the WebView no
  longer being attached to a window.

Change-Id: I6dc550eec706c7a2041cdad61d55c00e4558c52d",,,memory leak
https://github.com/Pool-Of-Tears/GreenStash/commit/8c60e1cecbc90038341abeac5e8617ec002bc734,Show progress dialog when setting goal image,"cause image compression sometimes take good amount of time when setting larger images making UI unresponsive for sometime.

Also fixed cancel button color in cureency setting dialog.

Signed-off-by: starry69 <starry369126@outlook.com>",,,unresponsive
https://github.com/authpass/authpass/commit/491cd11380153b5bb1408f503647394887f48a85,override name for AppData storage.,,,,data storage
https://github.com/tirkarthi/NotificationDictionary/commit/cf30dae897c5e8a913f98acff222a46ab3b1fc40,Implement cdn for database download,"* Shrink apk size by using a CDN for downloading database instead of embedding in assets.
* Implement long press to share word and meaning.
* Fix crash regarding intent flag in latest android.
* Implement changelog and show them on launch.",,,apk size
https://github.com/tirkarthi/NotificationDictionary/commit/dd991eb178550faa1ced953853efc677d77fb058,Implement CDN for database download.,"* Shrink apk size by using a CDN for downloading database instead of embedding in assets.
* Implement long press to share word and meaning.
* Implement changelog and show them on launch.",,,apk size
https://github.com/AnySoftKeyboard/AnySoftKeyboard/commit/edc6579e12795591119211678685ed1774015289,fixing OOM retry mechanism,Change-Id: I26d20bdb49b7f530bca6fcee17a0e9232bc25bbb,,, oom 
https://github.com/OpenTracksApp/OpenTracks/commit/26f1261ac2939e334d8bb4005727b421cd5996ae,Fix memory leak in SectionResourceCursorAdapter.,,,,memory leak
https://github.com/OpenTracksApp/OpenTracks/commit/891005a65e1d11898075b828320a73f4701054e8,Fix memory leak in TrackDetailActivity due to TrackController.,,,,memory leak
https://github.com/OpenTracksApp/OpenTracks/commit/127fb2d648331c12c4ee21b38d9020a0390f4188,Fix comment on b32833d4588e,"- use Activity.showDialog to display dialogs
to avoid memory leaks when just calling
dialog.show, and to support rotation.",,,memory leak
https://github.com/OpenTracksApp/OpenTracks/commit/7ea573123b90721c264faf6b01c6d47b78489b12,Adding vacuum call for when a track is deleted (helps reclaim storage space).,… space).,,,storage space
https://github.com/OpenTracksApp/OpenTracks/commit/6b4ea7140446ca8aa28793f9d7b4368f8243e504,Enabling Proguard to reduce APK size.,,,,apk size
https://github.com/OpenTracksApp/OpenTracks/commit/0e623ebfeb1d8be721df74cab814cf0b1368c948,Fix a memory leak that was observed each time a recording session was stopped.,… stopped.,,,memory leak
https://github.com/ivpn/android-app/commit/47eaa33088a8cfae53b3d468f9ce6e6fd82e8bf6,Fix latency filter part 3,,,,latency
https://github.com/ivpn/android-app/commit/c2b21f7369e7d76bf79c8e5d235e6b9b12195913,Fix latency filter part 2,,,,latency
https://github.com/tuskyapp/Tusky/commit/9901376d383f4655afa8cbad8159d14117c96748,Move ExoPlayer initialization to a Dagger module and optimize its dependencies (,"…endencies (#4296)

Currently, ExoPlayer is initialized explicitly in `ViewMediaFragment`
with all its dependencies, including many that are not useful for
viewing Mastodon media attachments.

This pull request moves most ExoPlayer initialization and configuration
to a new Dagger module, and instead a `Provider<ExoPlayer>` factory is
injected in the Fragment so it can create new instances when needed.

The following ExoPlayer components will be configured:

- **Renderers**: all of them (audio, video, metadata, subtitles) except
for the `CameraMotionRenderer`.
- **Extractors**: FLAC, Wav, Mp4, Ogg, Matroska/WebM and MP3 containers,
to provide the same support as Firefox or Chrome browsers. Other
container formats that are either image formats (already covered by
Glide), not web-friendly or reserved for live streaming are skipped.
- **MediaSource**: only progressive download (through OkHttp) is
provided. Live streaming support using protocols like RTSP, MPEG/Dash or
HLS is skipped, because Mastodon servers don't use these protocols to
download attachments.

The Mastodon documentation mentions the [supported media formats for
attachments](https://docs.joinmastodon.org/user/posting/#media) and this
covers them and even more. The docs also mentions that the video and
audio files are transcoded to MP4 and MP3 upon upload but that was not
the case in the past (for example WebM was used) and it could change
again in the future.

Specifying these components manually allows reducing the APK size by
about 200 KB thanks to R8 shrinking.

There are also a few extra code changes:
- Remove the code specific to API < 24 since the min SDK of the app is
now 24.
- Add support for pausing a video when unplugging headphones.
- Specify the audio attributes according to content type to help the
Android audio mixer.",#4296,https://github.com/tuskyapp/Tusky/pull/4296,apk size
https://github.com/tuskyapp/Tusky/commit/722b75e5c2ff0e2eb87b87ab357cc3fecd141322,Optimize Proguard rules (,"Using saner defaults for R8 while reducing the app size even further.
- Add Kotlin compiler options to skip adding assertions in release
builds
- Remove `optimizations`, `optimizationpasses` and `dontpreverify` rules
that are ignored by R8
- Only keep runtime annotations by default. If other attributes are
needed by a specific library, these will already be provided by the
library rules (for example Retrofit or coroutines)
- Remove the obsolete rule allowing a View to reflectively call any
arbitrary public Activity method accepting a View as argument. This has
always been a bad practice and is not used in this project anyway
- Remove the rules related to enums. R8 already optimizes enums properly
out-of-the-box and keeping these rules may prevent some of these
optimizations
- Add support for the `@Keep` annotation. Even if it's not currently
used in the code base, it can be handy in the future
- Add a missing rule to prevent generic signature of `NetworkResult`
class from being removed in `MastodonApi` so Retrofit works
- Allow obfuscation and shrinking of `kotlin.coroutines.Continuation`,
matching the rule defined in the next release of Retrofit
- Remove the rule forcing the removal of `String.format()`. This method
is actually used in the code (and in third-party libraries) for other
things than logging so forcing its removal can do more harm than good.",#4291,https://github.com/tuskyapp/Tusky/pull/4291,app size
https://github.com/tuskyapp/Tusky/commit/e8369c1d2a490075b2e1bdccaf61b61b906c1ec0,Update androidx.media3 to v1.2.1 (,"[![Mend
Renovate](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)

This PR contains the following updates:

| Package | Change | Age | Adoption | Passing | Confidence |
|---|---|---|---|---|---|
| [androidx.media3:media3-ui](https://togithub.com/androidx/media) |
`1.1.1` -> `1.2.1` |
[![age](https://developer.mend.io/api/mc/badges/age/maven/androidx.media3:media3-ui/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![adoption](https://developer.mend.io/api/mc/badges/adoption/maven/androidx.media3:media3-ui/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![passing](https://developer.mend.io/api/mc/badges/compatibility/maven/androidx.media3:media3-ui/1.1.1/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![confidence](https://developer.mend.io/api/mc/badges/confidence/maven/androidx.media3:media3-ui/1.1.1/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
|
[androidx.media3:media3-datasource-okhttp](https://togithub.com/androidx/media)
| `1.1.1` -> `1.2.1` |
[![age](https://developer.mend.io/api/mc/badges/age/maven/androidx.media3:media3-datasource-okhttp/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![adoption](https://developer.mend.io/api/mc/badges/adoption/maven/androidx.media3:media3-datasource-okhttp/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![passing](https://developer.mend.io/api/mc/badges/compatibility/maven/androidx.media3:media3-datasource-okhttp/1.1.1/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![confidence](https://developer.mend.io/api/mc/badges/confidence/maven/androidx.media3:media3-datasource-okhttp/1.1.1/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
|
[androidx.media3:media3-exoplayer-rtsp](https://togithub.com/androidx/media)
| `1.1.1` -> `1.2.1` |
[![age](https://developer.mend.io/api/mc/badges/age/maven/androidx.media3:media3-exoplayer-rtsp/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![adoption](https://developer.mend.io/api/mc/badges/adoption/maven/androidx.media3:media3-exoplayer-rtsp/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![passing](https://developer.mend.io/api/mc/badges/compatibility/maven/androidx.media3:media3-exoplayer-rtsp/1.1.1/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![confidence](https://developer.mend.io/api/mc/badges/confidence/maven/androidx.media3:media3-exoplayer-rtsp/1.1.1/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
|
[androidx.media3:media3-exoplayer-hls](https://togithub.com/androidx/media)
| `1.1.1` -> `1.2.1` |
[![age](https://developer.mend.io/api/mc/badges/age/maven/androidx.media3:media3-exoplayer-hls/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![adoption](https://developer.mend.io/api/mc/badges/adoption/maven/androidx.media3:media3-exoplayer-hls/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![passing](https://developer.mend.io/api/mc/badges/compatibility/maven/androidx.media3:media3-exoplayer-hls/1.1.1/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![confidence](https://developer.mend.io/api/mc/badges/confidence/maven/androidx.media3:media3-exoplayer-hls/1.1.1/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
|
[androidx.media3:media3-exoplayer-dash](https://togithub.com/androidx/media)
| `1.1.1` -> `1.2.1` |
[![age](https://developer.mend.io/api/mc/badges/age/maven/androidx.media3:media3-exoplayer-dash/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![adoption](https://developer.mend.io/api/mc/badges/adoption/maven/androidx.media3:media3-exoplayer-dash/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![passing](https://developer.mend.io/api/mc/badges/compatibility/maven/androidx.media3:media3-exoplayer-dash/1.1.1/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![confidence](https://developer.mend.io/api/mc/badges/confidence/maven/androidx.media3:media3-exoplayer-dash/1.1.1/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
|
[androidx.media3:media3-exoplayer](https://togithub.com/androidx/media)
| `1.1.1` -> `1.2.1` |
[![age](https://developer.mend.io/api/mc/badges/age/maven/androidx.media3:media3-exoplayer/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![adoption](https://developer.mend.io/api/mc/badges/adoption/maven/androidx.media3:media3-exoplayer/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![passing](https://developer.mend.io/api/mc/badges/compatibility/maven/androidx.media3:media3-exoplayer/1.1.1/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|
[![confidence](https://developer.mend.io/api/mc/badges/confidence/maven/androidx.media3:media3-exoplayer/1.1.1/1.2.1?slim=true)](https://docs.renovatebot.com/merge-confidence/)
|

---

### Release Notes

<details>
<summary>androidx/media (androidx.media3:media3-ui)</summary>

###
[`v1.2.1`](https://togithub.com/androidx/media/blob/HEAD/RELEASENOTES.md#121-2024-01-09)

[Compare
Source](https://togithub.com/androidx/media/compare/1.2.0...1.2.1)

This release includes the following changes since the
[1.2.0 release](#&#8203;120-2023-11-15):

-   ExoPlayer:
    -   Fix issue where manual seeks outside of the
`LiveConfiguration.min/maxOffset` range keep adjusting the offset back
        to `min/maxOffset`.
- Fix issue that OPUS and VORBIS channel layouts are wrong for 3, 5, 6,
7
        and 8 channels
([#&#8203;8396](https://togithub.com/google/ExoPlayer/issues/8396)).
- Fix issue where track selections after seek to zero in a live stream
        incorrectly let the stream start at its default position
([#&#8203;9347](https://togithub.com/google/ExoPlayer/issues/9347)).
- Fix the issue where new instances of `CmcdData.Factory` were receiving
negative values for `bufferedDurationUs` from chunk sources, resulting
        in an `IllegalArgumentException`
        ([#&#8203;888](https://togithub.com/androidx/media/issues/888)).
-   Transformer:
- Work around an issue where the encoder would throw at configuration
time
        due to setting a high operating rate.
-   Extractors:
    -   Mark secondary (unplayable) HEVC tracks in JPEG motion photos as
`ROLE_FLAG_ALTERNATE` to prevent them being automatically selected for
        playback because of their higher resolution.
    -   Fix wrong keyframe detection for TS H264 streams
        ([#&#8203;864](https://togithub.com/androidx/media/pull/864)).
- Fix duration estimation of TS streams that are longer than 47721
seconds
        ([#&#8203;855](https://togithub.com/androidx/media/issues/855)).
-   Audio:
- Fix handling of EOS for `SilenceSkippingAudioProcessor` when called
multiple times
([#&#8203;712](https://togithub.com/androidx/media/issues/712)).
-   Video:
- Add workaround for a device issue on Galaxy Tab S7 FE, Chromecast with
Google TV, and Lenovo M10 FHD Plus that causes 60fps AVC streams to be
        marked as unsupported
        ([#&#8203;693](https://togithub.com/androidx/media/issues/693)).
-   Metadata:
- Fix bug where `MediaMetadata` was only populated from Vorbis comments
        with upper-case keys
        ([#&#8203;876](https://togithub.com/androidx/media/issues/876)).
- Catch `OutOfMemoryError` when parsing very large ID3 frames, meaning
playback can continue without the tag info instead of playback failing
        completely.
-   DRM:
- Extend workaround for spurious ClearKey `https://default.url`license
        URL to API 33+ (previously the workaround only applied on API 33
exactly) ([#&#8203;837](https://togithub.com/androidx/media/pull/837)).
- Fix `ERROR_DRM_SESSION_NOT_OPENED` when switching from encrypted to
clear content without a surface attached to the player. The error was
due to incorrectly using a secure decoder to play the clear content.
-   Session:
    -   Put the custom keys and values in `MediaMetadataCompat` to
        `MediaMetadata.extras` and `MediaMetadata.extras` to
        `MediaMetadataCompat`
        ([#&#8203;756](https://togithub.com/androidx/media/issues/756),
        [#&#8203;802](https://togithub.com/androidx/media/issues/802)).
    -   Fix broadcasting `notifyChildrenChanged` for legacy controllers
        ([#&#8203;644](https://togithub.com/androidx/media/issues/644)).
- Fix a bug where setting a negative time for a disabled `setWhen` timer
        of the notification caused a crash on some devices
        ([#&#8203;903](https://togithub.com/androidx/media/issues/903)).
- Fix `IllegalStateException` when the media notification controller
hasn't completed connecting when the first notification update is
requested
([#&#8203;917](https://togithub.com/androidx/media/issues/917)).
-   UI:
- Fix issue where forward and rewind buttons are not visible when used
        with Material Design in a BottomSheetDialogFragment
        ([#&#8203;511](https://togithub.com/androidx/media/issues/511)).
    -   Fix issue where the numbers in the fast forward button of the
        `PlayerControlView` were misaligned
        ([#&#8203;547](https://togithub.com/androidx/media/issues/547)).
-   DASH Extension:
    -   Parse ""f800"" as channel count of 5 for Dolby in DASH manifest
        ([#&#8203;688](https://togithub.com/androidx/media/issues/688)).
-   Decoder Extensions (FFmpeg, VP9, AV1, MIDI, etc.):
- MIDI: Fix issue where seeking forward skips the Program Change events
        ([#&#8203;704](https://togithub.com/androidx/media/issues/704)).
    -   Migrate to FFmpeg 6.0 and update supported NDK to `r26b`
        ([#&#8203;707](https://togithub.com/androidx/media/pull/707),
        [#&#8203;867](https://togithub.com/androidx/media/pull/867)).
-   Cast Extension:
- Sanitize creation of a `Timeline` to not crash the app when loading
        media fails on the cast device
        ([#&#8203;708](https://togithub.com/androidx/media/issues/708)).

###
[`v1.2.0`](https://togithub.com/androidx/media/blob/HEAD/RELEASENOTES.md#120-2023-11-15)

[Compare
Source](https://togithub.com/androidx/media/compare/1.1.1...1.2.0)

This release includes the following changes since the
[1.1.1 release](#&#8203;111-2023-08-14):

-   Common Library:
- Add a `@Nullable Throwable` parameter to the methods in the
`Log.Logger`
interface. The `message` parameter to these methods no longer contains
any information about the `Throwable` passed to the `Log.{d,i,w,e}()`
        methods, so implementations will need to manually append this
        information if desired (possibly using
        `Logger.appendThrowableString(String, Throwable)`).
- Fix Kotlin compatibility issue where nullable generic type parameters
and nullable array element types are not detected as nullable. Examples
        are `TrackSelectorResult` and `SimpleDecoder` method parameters
([#&#8203;6792](https://togithub.com/google/ExoPlayer/issues/6792)).
    -   Change default UI and notification behavior in
`Util.shouldShowPlayButton` to show a ""play"" button while playback is
temporarily suppressed (e.g. due to transient audio focus loss). The
        legacy behavior can be maintained by using
        `PlayerView.setShowPlayButtonIfPlaybackIsSuppressed(false)` or
`MediaSession.Builder.setShowPlayButtonIfPlaybackIsSuppressed(false)`
([#&#8203;11213](https://togithub.com/google/ExoPlayer/issues/11213)).
- Upgrade `androidx.annotation:annotation-experimental` to `1.3.1` to
fixhttps://issuetracker.google.com/251172715.
    -   Move `ExoPlayer.setAudioAttributes` to the `Player` interface.
-   ExoPlayer:
- Fix seeking issues in AC4 streams caused by not identifying
decode-only
        samples correctly
([#&#8203;11000](https://togithub.com/google/ExoPlayer/issues/11000)).
- Add suppression of playback on unsuitable audio output devices (e.g.
the
built-in speaker on Wear OS devices) when this feature is enabled via
`ExoPlayer.Builder.setSuppressPlaybackOnUnsuitableOutput`. The playback
        suppression reason will be updated as
`Player.PLAYBACK_SUPPRESSION_REASON_UNSUITABLE_AUDIO_OUTPUT` if playback
is attempted when no suitable audio outputs are available, or if all
suitable outputs are disconnected during playback. The suppression
        reason will be removed when a suitable output is connected.
- Add `MediaSource.canUpdateMediaItem` and `MediaSource.updateMediaItem`
        to accept `MediaItem` updates after creation via
        `Player.replaceMediaItem(s)`.
- Allow `MediaItem` updates for all `MediaSource` classes provided by
the
        library via `Player.replaceMediaItem(s)`
        ([#&#8203;33](https://togithub.com/androidx/media/issues/33),
[#&#8203;9978](https://togithub.com/google/ExoPlayer/issues/9978)).
    -   Rename `MimeTypes.TEXT_EXOPLAYER_CUES` to
        `MimeTypes.APPLICATION_MEDIA3_CUES`.
- Add `PngExtractor` that sends and reads a whole PNG file into the
        `TrackOutput` as one sample.
    -   Enhance `SequenceableLoader.continueLoading(long)` method in the
        `SequenceableLoader` interface to
        `SequenceableLoader.continueLoading(LoadingInfo loadingInfo)`.
`LoadingInfo` contains additional parameters, including `playbackSpeed`
        and `lastRebufferRealtimeMs` in addition to the existing
        `playbackPositionUs`.
- Enhance `ChunkSource.getNextChunk(long, long, List, ChunkHolder)`
method
in the `ChunkSource` interface to `ChunkSource.getNextChunk(LoadingInfo,
        long, List, ChunkHolder)`.
- Add additional fields to Common Media Client Data (CMCD) logging:
buffer
starvation (`bs`), deadline (`dl`), playback rate (`pr`) and startup
(`su`)
([#&#8203;8699](https://togithub.com/google/ExoPlayer/issues/8699)).
    -   Add luma and chroma bitdepth to `ColorInfo`
        ([#&#8203;491](https://togithub.com/androidx/media/pull/491)).
- Add additional fields to Common Media Client Data (CMCD) logging: next
        object request (`nor`) and next range request (`nrr`)
([#&#8203;8699](https://togithub.com/google/ExoPlayer/issues/8699)).
- Add functionality to transmit Common Media Client Data (CMCD) data
using
query parameters
([#&#8203;553](https://togithub.com/androidx/media/issues/553)).
- Fix `ConcurrentModificationException` in `ExperimentalBandwidthMeter`
        ([#&#8203;612](https://togithub.com/androidx/media/issues/612)).
    -   Add `MediaPeriodId` parameter to
        `CompositeMediaSource.getMediaTimeForChildMediaTime`.
- Support `ClippingMediaSource` (and other sources with period/window
time
        offsets) in `ConcatenatingMediaSource2`
([#&#8203;11226](https://togithub.com/google/ExoPlayer/issues/11226)).
    -   Change `BaseRenderer.onStreamChanged()` to also receive a
        `MediaPeriodId` argument.
-   Transformer:
    -   Parse EXIF rotation data for image inputs.
    -   Remove `TransformationRequest.HdrMode` annotation type and its
associated constants. Use `Composition.HdrMode` and its associated
        constants instead.
    -   Simplify the `OverlaySettings` to fix rotation issues.
    -   Changed `frameRate` and `durationUs` parameters of
        `SampleConsumer.queueInputBitmap` to `TimestampIterator`.
-   Track Selection:
- Add
`DefaultTrackSelector.Parameters.allowAudioNonSeamlessAdaptiveness`
to explicitly allow or disallow non-seamless adaptation. The default
        stays at its current behavior of `true`.
-   Extractors:
- MPEG-TS: Ensure the last frame is rendered by passing the last access
        unit of a stream to the sample queue
([#&#8203;7909](https://togithub.com/google/ExoPlayer/issues/7909)).
    -   Fix typo when determining `rotationDegrees`. Changed
        `projectionPosePitch` to `projectionPoseRoll`
        ([#&#8203;461](https://togithub.com/androidx/media/pull/461)).
    -   Remove the assumption that `Extractor` instances can be directly
        inspected with `instanceof`. If you want runtime access to the
        implementation details of an `Extractor` you must first call
        `Extractor.getUnderlyingInstance`.
    -   Add `BmpExtractor`.
    -   Add `WebpExtractor`.
    -   Add `HeifExtractor`.
    -   Add
[QuickTime classic](https://developer.apple.com/standards/qtff-2001.pdf)
        support to `Mp4Extractor`.
-   Audio:
- Add support for 24/32-bit big-endian PCM in MP4 and Matroska, and
parse
        PCM encoding for `lpcm` in MP4.
    -   Add support for extracting Vorbis audio in MP4.
- Add `AudioSink.getFormatOffloadSupport(Format)` that retrieves level
of
        offload support the sink can provide for the format through a
        `DefaultAudioOffloadSupportProvider`. It returns the new
        `AudioOffloadSupport` that contains `isFormatSupported`,
        `isGaplessSupported`, and `isSpeedChangeSupported`.
- Add `AudioSink.setOffloadMode()` through which the offload
configuration
        on the audio sink is configured. Default is
        `AudioSink.OFFLOAD_MODE_DISABLED`.
    -   Offload can be enabled through `setAudioOffloadPreference` in
`TrackSelectionParameters`. If the set preference is to enable, the
device supports offload for the format, and the track selection is a
        single audio track, then audio offload will be enabled.
    -   If `audioOffloadModePreference` is set to
        `AUDIO_OFFLOAD_MODE_PREFERENCE_REQUIRED`, then the
`DefaultTrackSelector` will only select an audio track and only if that
track's format is supported in offload. If no audio track is supported
        in offload, then no track will be selected.
- Disabling gapless support for offload when pre-API level 33 due to
        playback position issue after track transition.
    -   Remove parameter `enableOffload` from
        `DefaultRenderersFactory.buildAudioSink` method signature.
    -   Remove method `DefaultAudioSink.Builder.setOffloadMode`.
    -   Remove intdef value
`DefaultAudioSink.OffloadMode.OFFLOAD_MODE_ENABLED_GAPLESS_DISABLED`.
    -   Add support for Opus gapless metadata during offload playback.
- Allow renderer recovery by disabling offload if failed at first write
        ([#&#8203;627](https://togithub.com/androidx/media/issues/627)).
- Enable Offload Scheduling by default for audio-only offloaded
playback.
    -   Delete `ExoPlayer.experimentalSetOffloadSchedulingEnabled` and
`AudioOffloadListener.onExperimentalOffloadSchedulingEnabledChanged`.
    -   Renamed `onExperimentalSleepingForOffloadChanged` as
`onSleepingForOffloadChanged` and `onExperimentalOffloadedPlayback` as
        `onOffloadedPlayback`.
- Move audio offload mode related `TrackSelectionParameters` interfaces
        and definitions to an inner `AudioOffloadPreferences` class.
- Add `onAudioTrackInitialized` and `onAudioTrackReleased` callbacks to
        `AnalyticsListener`, `AudioRendererEventListener` and
        `AudioSink.Listener`.
    -   Fix DTS Express audio buffer underflow issue
        ([#&#8203;650](https://togithub.com/androidx/media/pull/650)).
    -   Fix bug where the capabilities check for E-AC3-JOC throws an
        `IllegalArgumentException`
        ([#&#8203;677](https://togithub.com/androidx/media/issues/677)).
-   Video:
    -   Allow `MediaCodecVideoRenderer` to use a custom
        `VideoFrameProcessor.Factory`.
- Fix bug where the first frame couldn't be rendered if the audio stream
        starts with negative timestamps
        ([#&#8203;291](https://togithub.com/androidx/media/issues/291)).
-   Text:
- Remove `ExoplayerCuesDecoder`. Text tracks with `sampleMimeType =
application/x-media3-cues` are now directly handled by `TextRenderer`
        without needing a `SubtitleDecoder` instance.
-   Metadata:
- `MetadataDecoder.decode` will no longer be called for ""decode-only""
        samples as the implementation must return null anyway.
-   Effect:
- Add `VideoFrameProcessor.queueInputBitmap(Bitmap, Iterator<Long>)`
        queuing bitmap input by timestamp.
- Change `VideoFrameProcessor.registerInputStream()` to be non-blocking.
        Apps must implement
        `VideoFrameProcessor.Listener#onInputStreamRegistered()`.
    -   Changed `frameRate` and `durationUs` parameters of
        `VideoFrameProcessor.queueInputBitmap` to `TimestampIterator`.
-   IMA extension:
- Fix bug where a multi-period DASH live stream that is not the first
item
        in a playlist can throw an exception
        ([#&#8203;571](https://togithub.com/androidx/media/issues/571)).
    -   Release StreamManager before calling `AdsLoader.destroy()`
    -   Bump IMA SDK version to 3.31.0.
-   Session:
    -   Set the notifications foreground service behavior to
`FOREGROUND_SERVICE_IMMEDIATE` in `DefaultMediaNotificationProvider`
        ([#&#8203;167](https://togithub.com/androidx/media/issues/167)).
    -   Use only
`android.media.session.MediaSession.setMediaButtonBroadcastReceiver()`
above API 31 to avoid problems with deprecated API on Samsung devices
        ([#&#8203;167](https://togithub.com/androidx/media/issues/167)).
- Use the media notification controller as proxy to set available
commands
and custom layout used to populate the notification and the platform
        session.
    -   Convert media button events that are received by
`MediaSessionService.onStartCommand()` within Media3 instead of routing
them to the platform session and back to Media3. With this, the caller
controller is always the media notification controller and apps can
easily recognize calls coming from the notification in the same way on
        all supported API levels.
- Fix bug where `MediaController.getCurrentPosition()` is not advancing
        when connected to a legacy `MediaSessionCompat`.
    -   Add `MediaLibrarySession.getSubscribedControllers(mediaId)` for
        convenience.
- Override `MediaLibrarySession.Callback.onSubscribe()` to assert the
availability of the parent ID for which the controller subscribes. If
successful, the subscription is accepted and `notifyChildrenChanged()`
        is called immediately to inform the browser
        ([#&#8203;561](https://togithub.com/androidx/media/issues/561)).
- Add session demo module for Automotive OS and enable session demo for
        Android Auto.
    -   Do not set the queue of the framework session when
`COMMAND_GET_TIMELINE` is not available for the media notification
controller. With Android Auto as the client controller reading from the
framework session, this has the effect that the `queue` button in the UI
        of Android Auto is not displayed
        ([#&#8203;339](https://togithub.com/androidx/media/issues/339)).
- Use `DataSourceBitmapLoader` by default instead of
`SimpleBitmapLoader`
        ([#&#8203;271](https://togithub.com/androidx/media/issues/271),
        [#&#8203;327](https://togithub.com/androidx/media/issues/327)).
- Add `MediaSession.Callback.onMediaButtonEvent(Intent)` that allows
apps
        to override the default media button event handling.
-   UI:
- Add a `Player.Listener` implementation for Wear OS devices that
handles
        playback suppression due to
        `Player.PLAYBACK_SUPPRESSION_REASON_UNSUITABLE_AUDIO_OUTPUT` by
launching a system dialog to allow a user to connect a suitable audio
output (e.g. bluetooth headphones). The listener will auto-resume
playback if a suitable device is connected within a configurable timeout
        (default is 5 minutes).
-   Downloads:
- Declare ""data sync"" foreground service type for `DownloadService` for
Android 14 compatibility. When using this service, the app also needs to
add `dataSync` as `foregroundServiceType` in the manifest and add the
        `FOREGROUND_SERVICE_DATA_SYNC` permission
([#&#8203;11239](https://togithub.com/google/ExoPlayer/issues/11239)).
-   HLS Extension:
- Refresh the HLS live playlist with an interval calculated from the
last
        load start time rather than the last load completed time
        ([#&#8203;663](https://togithub.com/androidx/media/issues/663)).
-   DASH Extension:
- Allow multiple of the same DASH identifier in segment template url.
- Add experimental support for parsing subtitles during extraction. This
        has better support for merging overlapping subtitles, including
resolving flickering when transitioning between subtitle segments. You
        can enable this using
`DashMediaSource.Factory.experimentalParseSubtitlesDuringExtraction()`
        ([#&#8203;288](https://togithub.com/androidx/media/issues/288)).
-   RTSP Extension:
- Fix a race condition that could lead to `IndexOutOfBoundsException`
when
        falling back to TCP, or playback hanging in some situations.
    -   Check state in RTSP setup when returning loading state of
        `RtspMediaPeriod`
        ([#&#8203;577](https://togithub.com/androidx/media/issues/577)).
- Ignore custom Rtsp request methods in Options response public header
        ([#&#8203;613](https://togithub.com/androidx/media/issues/613)).
- Use RTSP Setup Response timeout value in time interval of sending
        keep-alive RTSP Options requests
        ([#&#8203;662](https://togithub.com/androidx/media/issues/662)).
-   Decoder Extensions (FFmpeg, VP9, AV1, MIDI, etc.):
- Release the MIDI decoder module, which provides support for playback
of
        standard MIDI files using the Jsyn library to synthesize audio.
- Add `DecoderOutputBuffer.shouldBeSkipped` to directly mark output
        buffers that don't need to be presented. This is preferred over
        `C.BUFFER_FLAG_DECODE_ONLY` that will be deprecated.
    -   Add `Decoder.setOutputStartTimeUs` and
`SimpleDecoder.isAtLeastOutputStartTimeUs` to allow decoders to drop
decode-only samples before the start time. This should be preferred to
        `Buffer.isDecodeOnly` that will be deprecated.
- Fix bug publishing MIDI decoder artifact to Maven repository. The
        artifact is renamed to `media3-exoplayer-midi`
        ([#&#8203;734](https://togithub.com/androidx/media/issues/734)).
-   Leanback extension:
- Fix bug where disabling a surface can cause an `ArithmeticException`
in
Leanback code
([#&#8203;617](https://togithub.com/androidx/media/issues/617)).
-   Test Utilities:
- Make `TestExoPlayerBuilder` and `FakeClock` compatible with Espresso
UI
tests and Compose UI tests. This fixes a bug where playback advances
non-deterministically during Espresso or Compose view interactions.
-   Remove deprecated symbols:
    -   Remove
`TransformationRequest.Builder.setEnableRequestSdrToneMapping(boolean)`
        and

`TransformationRequest.Builder.experimental_setEnableHdrEditing(boolean)`.
Use `Composition.Builder.setHdrMode(int)` and pass the `Composition` to
        `Transformer.start(Composition, String)` instead.
- Remove deprecated
`DownloadNotificationHelper.buildProgressNotification`
method, use a non deprecated method that takes a `notMetRequirements`
        parameter instead.

</details>

---

### Configuration

📅 **Schedule**: Branch creation - At any time (no schedule defined),
Automerge - At any time (no schedule defined).

🚦 **Automerge**: Disabled by config. Please merge this manually once you
are satisfied.

♻ **Rebasing**: Whenever PR becomes conflicted, or you tick the
rebase/retry checkbox.

🔕 **Ignore**: Close this PR and you won't be reminded about these
updates again.

---

- [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check
this box

---

This PR has been generated by [Mend
Renovate](https://www.mend.io/free-developer-tools/renovate/). View
repository job log
[here](https://developer.mend.io/github/tuskyapp/Tusky).

<!--renovate-debug:eyJjcmVhdGVkSW5WZXIiOiIzNy4xMjEuMCIsInVwZGF0ZWRJblZlciI6IjM3LjIwMC4wIiwidGFyZ2V0QnJhbmNoIjoiZGV2ZWxvcCJ9-->

Co-authored-by: renovate[bot] <29139614+renovate[bot]@users.noreply.github.com>",#4216,https://github.com/tuskyapp/Tusky/pull/4216,response time
https://github.com/tuskyapp/Tusky/commit/9781e43441777fa8f2b92e63fb47327c2207b843,fix ANR caused by direct message badge (,"Saw an ANR (app not responding) error being reported in the Play console
and then found this. Sorry but `runBlocking` in production code is an
absolute no go.",#4182,https://github.com/tuskyapp/Tusky/pull/4182, ANR 
https://github.com/tuskyapp/Tusky/commit/75c42cb5c13691d6d74dd0a698cfb2571fba6a6e,prevent MainActivity from leaking through the DrawerImageLoader singleton (,"…eton (#4153)

Another fix for a memory leak. This one is not as big as#4150, but
still worth fixing for memory constrained devices imo.
The `DrawerImageLoader` implementation (a global singleton) references a
member of the `MainActivity`, causing the whole activity to leak.

This weird construct was introduced in#1989to fix a crash, but I think
since we migrated to coroutines it is no longer necessary because all
calls get correctly cancelled. I tried reproducing the crash but could
not, so I'm pretty sure it is fine. I would appreciate it if someone
else could try it as well though.

(The crash could be reproduced on slow internet, when
`onFetchUserInfoSuccess` was called while the activity was being
destroyed, causing Glide to crash the app because it can't use destroyed
activities. `onFetchUserInfoSuccess` is now no longer called in this
case because it is inside a `lifecycleScope.launch` block.)",#4153,https://github.com/tuskyapp/Tusky/pull/4153,memory leak
https://github.com/tuskyapp/Tusky/commit/db27186b5c16137edc3fdfab0ab545933d734f0e,fix memory leak in CompositeWithOpaqueBackground (,"Found with Leak canary: The transformation ends up in Glide's memory
cache and leaks whole Activities through the view -> context reference.

This fixes the problem by removing the background detection logic (so
the view reference is no longer needed) and setting the background
directly instead. Looks exactly as before.",#4150,https://github.com/tuskyapp/Tusky/pull/4150,memory leak
https://github.com/tuskyapp/Tusky/commit/5e8a63a0463f7f84d5ba9aa27daf02a3d42f8c9f,Throttle UI actions instead of debouncing (,"Introduce Flow<T>.throttleFirst(). In a flow this emits the first value,
and each value afterwards that is > some timeout after the previous
value.

This prevents accidental double-taps on UI elements from generating
multiple-actions.

The previous code used debounce(). That has a similar effect, but with
debounce() the code has to wait until after the timeout period has
elapsed before it can process the action, leading to an unnecessary
UI delay.

With throttleFirst a value is emitted immediately, there's no need
to wait. It's subsequent values that are potentially throttled.",#3651,https://github.com/tuskyapp/Tusky/pull/3651,UI delay
https://github.com/tuskyapp/Tusky/commit/04c842afc49093f1a7a4b4a06be2ae217cec894e,fix OOM crash when trying to caption large image (,,#756,https://github.com/tuskyapp/Tusky/pull/756, oom 
https://github.com/tuskyapp/Tusky/commit/5538c8c5e74dc905388444d890770b0db4855531,Updated it (Italian) translation (,"* increase cache size & dont cache full size media

* Updated it (Italian) translation

Commit made via Stringlate

* remove unnecessary backslash",#721,https://github.com/tuskyapp/Tusky/pull/721,cache size
https://github.com/tuskyapp/Tusky/commit/aa5eb9f99acc0cdc4b9ab0c6085d398f31acaed0,increase cache size & dont cache full size media (,,#710,https://github.com/tuskyapp/Tusky/pull/710,cache size
https://github.com/tuskyapp/Tusky/commit/23d84dfa66733637d291a380438a5bbf76e0e721,Show image descriptions in gallery (,"* Add circleci

* Commit to maybe fix ci

* Suppress false positives in lint

* Disable linting for tests in ci

* Add image descriptions to gallery

* Fix test

* [CI] Attempt to fix OOM error

* [CI] Attempt to fix OOM error, 2

* Add option to open status from media

* fix theme issue

* increase linespacing on media description",#630,https://github.com/tuskyapp/Tusky/pull/630, oom 
https://github.com/tuskyapp/Tusky/commit/3f54ead962f65379a98ec2ae3040aba07dee59ac,Adds option to hide media previews if reduced data usage is desired,…loses#56.,#56,https://github.com/tuskyapp/Tusky/issues/56,data usage
https://github.com/wbrawner/SimpleMarkdown/commit/96e7b7c6b3fd41d12e17f677f28074fae985df72,Fix potential memory leak in ReviewHelper,There was a static reference to the currentActivity that was unnecessary,,,memory leak
https://github.com/wbrawner/SimpleMarkdown/commit/a42e375798dbc1d7b97b4dcca643f13150f368c9,Fix memory leak in PreviewFragment,,,,memory leak
https://github.com/vitorpamplona/amethyst/commit/1b9742597ae4dcdfe7e541700bb9efcffa35696b,Keeps cache size in 10 to account for recompositions,,,,cache size
https://github.com/vitorpamplona/amethyst/commit/1efef5887a4c4fd1153f6463bc3e58b0b8055c0f,Reduces the cache size for parsed posts.,,,,cache size
https://github.com/vitorpamplona/amethyst/commit/9e9c8befe0ca483d4aefb27ea1210eedb75d0858,Fixes memory leak when services are destroyed,,,,memory leak
https://github.com/vitorpamplona/amethyst/commit/b2c31d3b4632a6b39522bde187f730acfb34786d,Avoid reusing SHA256 object because of a memory leak in multithreading,,,,memory leak
https://github.com/vitorpamplona/amethyst/commit/7e2b8397e7b930b4c84229bac13ff339cca89dbb,Merge pull request,add leak canary to detect memory leaks in debug builds,#142,https://github.com/vitorpamplona/amethyst/pull/142,memory leak
https://github.com/vitorpamplona/amethyst/commit/2bd3792b8ff2357ad9e693bc7155f2c6779f4f8d,add leak canary to detect memory leaks in debug builds,,,,memory leak
https://github.com/vitorpamplona/amethyst/commit/1b8d83f41a89b9e64a324e46010690ec33b0a123,Increasing Image disk cache size to 1GB,,,,cache size
https://github.com/vitorpamplona/amethyst/commit/a18c5b975f16820ebf774127a1bd15156dc4717b,Solving some of the Out of Memory errors.,,,,out of memory
https://github.com/saber-notes/saber/commit/48764736a7d7868aa19d1b10de59fe4baa5a56b2,feat: simulate pencil-on-paper sounds (,"* feat: initial pencil sound implementation

* perf: preload audio file

* feat: improve pencil sound via trial and error

* fix: don't interrupt music

* perf: reduce audio size for lower latency

* fix: minor changes

* feat: add settings for pencil sound effect

* fix: actually use the new setting

* feat: don't play pencil sound effect for every tool",#1225,https://github.com/saber-notes/saber/pull/1225,latency
https://github.com/saber-notes/saber/commit/1dfc2304235105037ac20d30d346bde6b0542e4e,fix: avoid out of memory exceptions with really high pdf dpis,,,,out of memory
https://github.com/saber-notes/saber/commit/5a53044814cb09fb3cb2464ce141ce85394f555d,previewCard: only setState if widget still exists,"Unhandled Exception: setState() called after dispose(): _PreviewCardState#8e428(lifecycle state: defunct, not mounted)
This error happens if you call setState() on a State object for a widget that no longer appears in the widget tree (e.g., whose parent widget no longer includes the widget in its build). This error can occur when code calls setState() from a timer or an animation callback.
The preferred solution is to cancel the timer or stop listening to the animation in the dispose() callback. Another solution is to check the ""mounted"" property of this object before calling setState() to ensure the object is still in the tree.
This error might indicate a memory leak if setState() is being called because another object is retaining a reference to this State object after it has been removed from the tree. To avoid memory leaks, consider breaking the reference to this object during dispose().",,,memory leak
https://github.com/openhab/openhab-android/commit/5186231d8bdbb5a9eeb8811088f57564c0022f44,Minify app (,"On a test device this reduced the app size from 60MB to 30MB.

Signed-off-by: mueller-ma <mueller-ma@users.noreply.github.com>",#3026,https://github.com/openhab/openhab-android/pull/3026,app size
https://github.com/openhab/openhab-android/commit/31bd6c2815b83e8943dd5e8c53e1447cb8870297,Increase memory allocated by JVM (,"Recently gradle throws OOM exceptions quite often.
The default runner has 7GB ram:https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners#supported-runners-and-hardware-resourcesSigned-off-by: mueller-ma <mueller-ma@users.noreply.github.com>",#2492,https://github.com/openhab/openhab-android/pull/2492, oom 
https://github.com/openhab/openhab-android/commit/f62a92cd2403df07d57d66bccfe58c638b976c3d,Support battery saver (,"* Change 'data saver' to 'data usage policy'
* Support battery saverFixes#1898Signed-off-by: mueller-ma <mueller-ma@users.noreply.github.com>",#2128,https://github.com/openhab/openhab-android/pull/2128,data usage
https://github.com/openhab/openhab-android/commit/11eebe4765aed1c626ef72d82f9b43a81065ff9b,Don't clear icon cache on manual refresh (,... and increase HTTP cache size.Fixes#1230Signed-off-by: mueller-ma <mueller-ma@users.noreply.github.com>,#2153,https://github.com/openhab/openhab-android/pull/2153,cache size
https://github.com/openhab/openhab-android/commit/68287dfefccc7bee98c38b1dba8c66837fd78b82,Implement data saver (,"Respect device wide data saver and add setting to enable data saver for
openHAB only.

If enabled, ...
* widgets with high data usage are replaced by a button. A click on it shows the widget.
* automatic image refresh is disabled
* icon paths don't contain the state => reduces icon downloadsFixes#660Signed-off-by: mueller-ma <mueller-ma@users.noreply.github.com>",#1796,https://github.com/openhab/openhab-android/pull/1796,data usage
https://github.com/openhab/openhab-android/commit/7ff074116969dddbf501ec53d567e268021ed7e3,Refactor image loading (,"* Rework loading images via HTTP.

Get rid of the SmartImageView library and do image fetching via async
HTTP calls instead. Replace the previous WebImageCache solution by a
combination of small memory cache for loaded bitmaps + OkHttp caching.

The new solution also provides an indicator drawable shown while content
is loading, and cleans up the handling of the various properties
attached to our image views, such as minimum height for charts and
maximum height for images.

Signed-off-by: Danny Baumann <dannybaumann@web.de>

* Clean up MJPEG streaming code.

Signed-off-by: Danny Baumann <dannybaumann@web.de>

* Convert MjpegStreamer to use SyncHttpClient.

Signed-off-by: Danny Baumann <dannybaumann@web.de>

* Determine bitmap cache size dynamically.

Use algorithm example from [1] which should fit well enough for us. On a
xxhdpi device with 3GB of RAM, this gives us about 36MB of cache size.

[1]https://developer.android.com/topic/performance/graphics/cache-bitmap.htmlSigned-off-by: Danny Baumann <dannybaumann@web.de>

* Fix empty image height ratio calculation.

Signed-off-by: Danny Baumann <dannybaumann@web.de>

* Unconditionally apply fallback drawable.

If loading failed we don't want to keep the progress drawable (or the
previous bitmap). If no fallback was provided, nothing at all will be
shown.

Signed-off-by: Danny Baumann <dannybaumann@web.de>

* Report bitmap loading failures via failure callback.

Signed-off-by: Danny Baumann <dannybaumann@web.de>

* Fix up HTTP caching behavior.

Don't use cache by default (we shouldn't cache API responses), and force
cache usage for icons (only fetch them if not present in cache).

Signed-off-by: Danny Baumann <dannybaumann@web.de>

* Stop clearing image cache on connection changes.

A connection change e.g. also is the initial change from null on app
startup; clearing cache in that case makes the cache mostly useless.
As the full URL is used as cache key, there shouldn't be a reason to do
so anyway.

Signed-off-by: Danny Baumann <dannybaumann@web.de>

* Cancel pending image loads when detaching view.

Signed-off-by: Danny Baumann <dannybaumann@web.de>

* Remove debug remnant.

Signed-off-by: Danny Baumann <dannybaumann@web.de>

* Fix image item max height constraint.

The intended constraint is '90% of content frame height', not '90% of
content frame width'.

Signed-off-by: Danny Baumann <dannybaumann@web.de>

* Safeguard against parent height being not determined yet.

Signed-off-by: Danny Baumann <dannybaumann@web.de>",#850,https://github.com/openhab/openhab-android/pull/850,cache size
https://github.com/zaneschepke/wgtunnel/commit/a1941b7229d0114eb25edd4a76f5d372b366c3b4,feat: shortcut intents and battery saver,"Added the ability to turn on and off tunnels via intents to the shortcut activity.

Added a setting to enable or disable shortcut/intent control of tunnels.

Added an experimental battery saver setting to auto-tunneling to fix the battery drain issue caused by wakelock.

Fixes a bug where sometimes the config screen could crash if there are issues parsing the tunnel config data.

Database migration",,,battery drain
https://github.com/zaneschepke/wgtunnel/commit/689c97f452d9477dc94a8b9299e982fcb22afa1e,fix: auto tunneling failure with rapid network changes,"Fixes issue where rapid network switching could cause unexpected VPN connections and disconnection. Fixed by changing from real time network VPN triggers to three second interval checks.

Attempts to optimize battery drain while VPN connected by switching VPN statistics gathering to 10 second intervals.Closes#11,Closes#12,Closes#10",,,battery drain
https://github.com/OpenTracksApp/OSMDashboard/commit/36b606445a49d9c5c658467ca0139d911b1ac442,Double TileCache size,,,,cache size
https://github.com/TeamAmaze/AmazeFileUtilities/commit/d9aeeca17d17e5117a1689f604b5fdec4006dcec,change QueryAppSizeWorker to only store precise app sizes,,,,app size
https://github.com/TeamAmaze/AmazeFileUtilities/commit/1817ac167974b4c2a76cad593646ca85ec33b0d1,Merge pull request,Try to fix oom in ml kit by scaling down image; add translations,#79,https://github.com/TeamAmaze/AmazeFileUtilities/pull/79, oom 
https://github.com/TeamAmaze/AmazeFileUtilities/commit/3b69ad361be702d0a0e67665a03f2ffddbd27a00,Try to fix oom in ml kit by scaling down image; add translations,,,, oom 
https://github.com/TeamAmaze/AmazeFileUtilities/commit/3c8ed3f864cfea758902b2d7297c68235493dd00,Add preference for columns count; fix oom for ondraw in analyse fragment,,,, oom 
https://github.com/connectbot/connectbot/commit/626f79f35c1903612e4623a633a097f90fbb10df,Merge pull request,Fixed a possible resource leak linked to a SQL cursor,#448,https://github.com/connectbot/connectbot/pull/448,resource leak
https://github.com/connectbot/connectbot/commit/62555ef7663b1bd0d3346a745d6201a3ca9b0689,fixed a possible resource leak linked to a SQL cursor,,,,resource leak
https://github.com/connectbot/connectbot/commit/0a758f5d93d6406d2912cb99673a4e35c6381dc3,Avoid creating relay thread in sessionless mode,"Fixe issue#391(High CPU usage when 'Start shell session' disabled).
This patch is from Nishino Daisuke.
Original message:https://code.google.com/archive/p/connectbot/issues/643",,,cpu usage
